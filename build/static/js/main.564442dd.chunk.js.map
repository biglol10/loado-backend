{"version":3,"sources":["Components/Utils/ConstVar.js","Components/Nav/HistoryModal.js","_data/characterDefinition.js","Components/Utils/ViewDataUtil.js","Components/HomeSubComp/ChangePosition.js","Components/Utils/uploadPicToCloudinary.js","Components/Utils/ProfileModal.js","Components/Nav/NavHeader.js","Components/Nav/NavHeaderMobile.js","Components/Home/CharacterToDo.js","Components/Utils/AddCharacter.js","Components/GridItem/RestValue.js","Components/Home/CharacterAvatar.js","Components/Home/PerIdNote.js","Components/GridItem/DungeonAndEpona.js","Components/GridItem/AbyssAndRaid.js","Components/HomeSubComp/AddAndChange.js","Components/HomeSubComp/PaginationComp.js","Components/HomeSubComp/SettingChange.js","Components/HomeSubComp/AlarmAndNote.js","Components/Home/CharacterToDoRow.js","Components/Utils/AddCharacterMobile.js","Components/GridItem/RestValueMobile.js","Components/HomeSubComp/AlarmAndNoteMobile.js","Components/Utils/ContentDefinition.js","Components/Home/CharacterToDoRowMobile.js","Components/Home/Login.js","Components/Home/Register.js","Components/Dashboard/Dashboard.js","App.js","index.js"],"names":["backendUrl","process","axiosConfig","headers","axiosConfigAuth","userCookie","Authorization","HistoryModal","showUpdateHistoryModal","setShowUpdateHistoryModal","setNoticeAlert","changeNotificationToFalse","useEffect","Modal","open","onClose","closeOnDimmerClick","Header","className","style","backgroundColor","color","borderBottom","Content","Grid","Row","padding","Column","width","characterCdn","berserker","warlord","destroyer","holyknight","battlemaster","infighter","soulmaster","lancemaster","striker","devilhunter","blaster","hawkeye","scouter","gunslinger","summoner","arcana","bard","sorceress","blade","demonic","reaper","characterKorean","viewDataMain","limit","theActivePage","setActivePage","a","searchString","axios","get","then","response","totalLength","data","setPage","Math","floor","viewData","success","catch","err","axiosResult","allViewDataMain","dataLength","applyChangesUtil","submitData","errorOccured","index","length","put","_id","getUserCheckBoxConfiguration","viewByCheckBox","result","changeUserCheckBoxConfiguration","alarmRestValueUtil","todoList","alarmTrue","alarmList","alarm","map","item","idx","chaosRestValue","guardianRestValue","eponaRestValue","alarmCharacter","toastMessage","msg","type","deviceType","alert","toast","error","position","POSITION","TOP_LEFT","info","BOTTOM_LEFT","updateProfilePic","profilePic","post","waitForSomeTime","timeToDelay","Promise","resolve","setTimeout","getLoadoLogs","ChangePosition","dragStartIndex","changeRowModal","setChangeRowModal","useState","userTodoData","setUserTodoData","labelText","setLabelText","changedIndexArr","setChangedIndexArr","saveChanges","distinctIndexData","Array","from","Set","sendData","filter","includes","cookie","window","location","reload","resultData","console","log","callData","dragStart","this","getAttribute","dragOver","e","preventDefault","dragDrop","dragEndIndex","fromIndex","toIndex","itemFrom","itemTo","itemFromIdx","itemToIdx","push","swapItems","classList","remove","dragEnter","add","dragLeave","draggables","document","querySelectorAll","forEach","draggable","addEventListener","removeEventListener","size","Label","as","ribbon","marginLeft","onClick","columns","sort","b","marginRight","Image","avatar","src","character","characterName","uploadPic","media","form","FormData","append","res","url","ProfileModal","profileModal","setProfileModal","cropper","setCropper","setMedia","mediaPreview","setMediaPreview","statusText","setStatusText","inputRef","useRef","cropperStyle","height","uploadResult","getCroppedCanvas","toDataURL","picUrl","destroy","Icon","name","cursor","current","click","ref","onChange","target","files","value","URL","createObjectURL","display","accept","image","cropBoxResizable","zoomable","highlight","responsive","guides","dragMode","initialAspectRatio","preview","viewMode","minCropBoxHeight","minCropBoxWidth","background","autoCropArea","checkOrientation","onInitialized","margin","content","overflow","boxSizing","Actions","Button","title","icon","circular","reset","setDragMode","negative","positive","NavHeader","userIdString","userValue","JSON","parse","history","useHistory","accountUser","setAccountUser","setOpen","noticeAlert","restValueBatch","user","newNotice","checkNewlyUpdate","Menu","borderRadius","marginBottom","borderless","Item","id","fontStyle","role","Popup","on","onOpen","trigger","userName","Card","Divider","hidden","Description","fontWeight","userId","set","NavHeaderMobile","CharacterToDo","AddCharacter","addCharacterModal","closeAddCharacter","viewPage","activePage","selectCharacterModal","setSelectCharacterModal","selectedCharacter","setSelectedCharacter","setCharacterName","setChaosRestValue","setGuardianRestValue","setEponaRestValue","regex","regexNumber","buttonRef","classSelected","event","selectedClass","indexOf","dataset","options","split","focus","closeAddCharacterModal","changeRestValue","test","changedValue","valueOutput","confirmAddCharacter","createdData","date","Date","now","chaosDone","guardianDone","eponaDone","guardianWeeklyDone","abyssDungeon2","argos","baltan","biakiss","kukuseitn","abrel","attributeChanged","weeklyAttributeChanged","createdAt","eventAdd","classElements","getElementsByClassName","element","getElementById","enterEvent","key","closeIcon","Input","transparent","placeholder","insertedValue","changeInputCharName","List","divided","selection","horizontal","justifyContent","marginTop","autoClose","RestValue","showModal","setShowModal","rightclickEvent","closeModal","chaosRestValueChange","setChaosRestValueChange","guardianRestValueChange","setGuardianRestValueChange","eponaRestValueChange","setEponaRestValueChange","valueChange","TextField","label","indexValue","findIndex","anItem","newArr","CharacterAvatar","itemId","dontChange","deleteIcon","showDeleteIcon","showDontChange","setShowDontChange","dontChangeState","setDontChangeState","delete","message","dontChangeCharacter","PerIdNote","showTextArea","setShowTextArea","note","textValue","setTextValue","changeText","theText","TextArea","inverted","changeArr","arr","match","dataValue","ChaosDunValue","chaosItem","text","chaosData","setChaosData","chaosDataChecked","setChaosDataChecked","changeData","paddingTop","Checkbox","checked","changeDataChecked","Dropdown","GuardianDunValue","guardianItem","guardianData","setGuardianData","guardianDataChecked","setGuardianDataChecked","EponaValue","eponaItem","eponaData","setEponaData","eponaDataChecked","setEponaDataChecked","WeeklyGuardian","weeklyGuardianItem","weeklyGuardianData","setWeeklyGuardianData","weeklyGuardianDataChecked","setWeeklyGuardianDataChecked","changeDatafunction","setItem","findIndexItem","changeItem","attrChanged","AbyssDun2","abyssDun2Item","abyssDun2","setAbyssDun2","ArgosRaid","argosRaidItem","argosRaid","setArgosRaid","BaltanRaid","baltanRaidItem","baltanRaid","setBaltanRaid","BiakissRaid","biakissRaidItem","biakissRaid","setBiakissRaid","KukseitnRaid","kukseitnRaidItem","kukseitnRaid","setKukseitnRaid","AbrelRaid","abrelRaidItem","abrelRaid","setAbrelRaid","AddAndChange","addCharacter","applyChanges","PaginationComp","pagination","pageChange","Pagination","firstItem","lastItem","pointing","secondary","totalPages","onPageChange","SettingChange","changeUserCheckBoxConfigurationFunction","todayDate","today","getFullYear","getMonth","getDate","basic","AlarmAndNote","alarmRestValue","showNote","setShowNote","CharacterToDoRow","setAddCharacterModal","loading","setLoading","setPagination","setViewByCheckBox","applyResult","setAlarmTrue","callUsersCheckBoxValue","Segment","border","Dimmer","active","Loader","Container","alarmDataResult","paddingBottom","mobileInputRef","fullList","setFullList","mobileDropDownList","setMobileDropDownList","aList","addItem","iconPosition","filteredList","filterDropDown","scrolling","option","RestValueMobile","AlarmAndNoteMobile","showContentPopupValue","justContent","fontSize","휴식게이지","카오스던전","가디언던전","에포나","주간가디언","어비스던전","아르고스","발탄","비아키스","쿠크세이튼","아브렐슈드","CharacterToDoRowMobile","minusOne","plusOne","plusPage","pinned","AddCharacterMobile","Login","loginMessage","setLoginMessage","password","setUser","handleChange","prev","textAlign","verticalAlign","maxWidth","Form","onSubmit","token","stringify","stacked","fluid","Message","href","class","xmlns","viewBox","preserveAspectRatio","d","opacity","Register","Dashboard","lineLabels","setlineLabels","lineData","setlineData","barLabels","setBarLabels","barData","setBarData","userCount","setUserCount","userLoadoCount","setUserLoadoCount","loadologs","setLoadoLogs","keyA","dateValue","keyB","labels","count","hwCount","logsCount","jobGroupingResult","characterCount","getLoadoLogsFunction","chartjsLineData","datasets","fill","borderColor","chartjsBarData","borderWidth","scales","y","beginAtZero","plugins","yAxes","ticks","AppMedia","createMedia","breakpoints","zero","mobile","tablet","computer","Media","createMediaStyle","MediaContextProvider","App","path","between","greaterThanOrEqual","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.564442dd.chunk.js","sourcesContent":["const backendUrl = process.env.REACT_APP_BACKENDURL;\r\n\r\nconst axiosConfig = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst axiosConfigAuth = (userCookie) => {\r\n  const bearer = `Bearer ${userCookie}`;\r\n  return {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: bearer,\r\n    },\r\n  };\r\n};\r\n\r\nexport { backendUrl, axiosConfig, axiosConfigAuth };\r\n","import React, { useEffect } from \"react\";\r\nimport { Modal, Grid } from \"semantic-ui-react\";\r\nimport \"./HistoryModal.css\";\r\n\r\nfunction HistoryModal({\r\n  showUpdateHistoryModal,\r\n  setShowUpdateHistoryModal,\r\n  setNoticeAlert,\r\n  changeNotificationToFalse,\r\n}) {\r\n  useEffect(() => {\r\n    changeNotificationToFalse();\r\n    setNoticeAlert(false);\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      open={showUpdateHistoryModal}\r\n      onClose={() => setShowUpdateHistoryModal(false)}\r\n      closeOnDimmerClick\r\n    >\r\n      <Modal.Header\r\n        className=\"modalHeader\"\r\n        style={{\r\n          backgroundColor: \"#384862\",\r\n          color: \"white\",\r\n          borderBottom: \"1px solid white\",\r\n        }}\r\n      >\r\n        작업/업데이트 내역\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Grid>\r\n          {/* <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-06\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              직업명 오타 수정 : 아르라카 {\"->\"} 아르카나\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-07\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>가입 시 암호화 관련 설명 추가</Grid.Column>\r\n          </Grid.Row> */}\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-08\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              케릭터명 입력 후 엔터 이벤트를 등록하기 위해 [케릭터 추가] 팝업\r\n              등장 내부로직 수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-09\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              (버튼이 안 보이는 분들을 위해) 케릭터 추가 기능에서 클래스 선택 및\r\n              케릭터명 입력 후 엔터 시 케릭터가 추가되는 기능 추가\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-10\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              유지보수 및 코드 분석을 위해 내부 코드 리팩토링 진행 및 간결하게\r\n              수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-12\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 9월10일 업데이트 후 첫 로그인 시 화면에 아무것도 안 뜨던 현상\r\n              수정, 컨탠츠에 마우스 올리면 행의 색갈이 바뀌도록 수정\r\n              <br />\r\n              2. 카던, 가디언, 에포나에 숫자로 선택할 필요없이 체크로 선택하여\r\n              저장하기 가능토록 수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-16\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 케릭터 순서 변경 기능 추가 (우측 상단 이름 클릭 후 순서변경)\r\n              <br />\r\n              2. 깜빡거림으로 사용자가 업데이트 내용을 확인할 수 있도록 추가 및\r\n              작업 내역 확인 후 깜빡거림 멈추는 기능 추가\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-21\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              어플리케이션 업그레이드 비용 지불 및 다음날부터 내부에서 06시\r\n              휴식게이지 반영되도록 수정 (잘 안될 수도 있음), 안되면\r\n              개인휴식게이지반영 적용 요청\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-22\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>작업/업데이트 내역 화면 수정</Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-26\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>모바일웹 기능 개발</Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-27\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              아무나 06시 초기화를 할 수 없도록 암호화 진행. 즉, 소스 공개 가능\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-28\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. <span style={{ color: \"red\" }}>[버그픽스]</span> 순서변경에서\r\n              버그가 발생하던 부분 해결. 사용자가 1회 케릭터 추가 또는 삭제 한번\r\n              해줘야 모든게 제대로 작동\r\n              <br />\r\n              2. 아이폰으로 접속 시 강제 줌인 되는 현상 수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-30\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 모바일 노트 기록 기능 추가\r\n              <br />\r\n              2. 숫자체크 또는 체크박스 사용자설정 유지하는 기능 개발완료\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-10-09\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              이제 자신의 프로필 사진을 변경해보세요!!! 계정명을 클릭해서 프로필\r\n              이미지를 자르고 업로드 하실 수 있습니다\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-10-28\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              특정 상황에서 페이징처리가 제대로 되지 않던 상황을 픽스했습니다\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default HistoryModal;\r\n","const characterCdn = {\r\n  berserker:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/berserker_s.png',\r\n  warlord:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/warlord_s.png',\r\n  destroyer:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/destroyer_s.png',\r\n  holyknight:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/holyknight_s.png',\r\n  battlemaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/battlemaster_s.png',\r\n  infighter:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/infighter_s.png',\r\n  soulmaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/soulmaster_s.png',\r\n  lancemaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/lancemaster_s.png',\r\n  striker:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/striker_s.png',\r\n  devilhunter:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/devilhunter_s.png',\r\n  blaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blaster_s.png',\r\n  hawkeye:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/hawkeye_s.png',\r\n  scouter:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/scouter_s.png',\r\n  gunslinger:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/gunslinger_s.png',\r\n  summoner:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/summoner_s.png',\r\n  arcana:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/arcana_s.png',\r\n  bard: 'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/bard_s.png',\r\n  sorceress:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/sorceress_s.png',\r\n  blade:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blade_s.png',\r\n  demonic:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/demonic_s.png',\r\n  reaper:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/reaper_s.png',\r\n};\r\n\r\nconst characterKorean = {\r\n  arcana: '아르카나',\r\n  bard: '바드',\r\n  battlemaster: '배틀마스터',\r\n  berserker: '버서커',\r\n  blade: '블레이드',\r\n  blaster: '블래스터',\r\n  demonic: '데모닉',\r\n  destroyer: '디스트로이어',\r\n  devilhunter: '데빌헌터',\r\n  gunslinger: '건슬링어',\r\n  hawkeye: '호크아이',\r\n  holyknight: '홀리나이트',\r\n  infighter: '인파이터',\r\n  lancemaster: '창술사',\r\n  reaper: '리퍼',\r\n  scouter: '스카우터',\r\n  sorceress: '소서리스',\r\n  soulmaster: '기공사',\r\n  striker: '스트라이커',\r\n  summoner: '서머너',\r\n  warlord: '워로드',\r\n};\r\n\r\nconst characterEnglish = {\r\n  아르카나: 'arcana',\r\n  바드: 'bard',\r\n  배틀마스터: 'battlemaster',\r\n  버서커: 'berserker',\r\n  블래이드: 'blade',\r\n  블래스터: 'blaster',\r\n  데모닉: 'demonic',\r\n  디스트로이어: 'destroyer',\r\n  데빌헌터: 'devilhunter',\r\n  건슬링어: 'gunslinger',\r\n  호크아이: 'hawkeye',\r\n  홀리나이트: 'holyknight',\r\n  인파이터: 'infighter',\r\n  창술사: 'lancemaster',\r\n  리퍼: 'reaper',\r\n  스카우터: 'scouter',\r\n  소서리스: 'sorceress',\r\n  기공사: 'soulmaster',\r\n  스트라이커: 'striker',\r\n  서머너: 'summoner',\r\n  워로드: 'warlord',\r\n};\r\n\r\nexport { characterCdn, characterKorean, characterEnglish };\r\n","import axios from \"axios\";\r\nimport { backendUrl, axiosConfigAuth } from \"./ConstVar\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nasync function viewDataMain(limit, theActivePage, setActivePage, userCookie) {\r\n  let searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${theActivePage}`;\r\n\r\n  setActivePage(theActivePage);\r\n\r\n  // if (minusOne) {\r\n  //   searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n  //     whatPage - 1\r\n  //   }`;\r\n  //   setActivePage(whatPage - 1);\r\n  // } else if (plusOne) {\r\n  //   searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n  //     Math.floor(plusPage / limit) + 1\r\n  //   }`;\r\n  //   setActivePage(Math.floor(plusPage / limit) + 1);\r\n  // }\r\n\r\n  const axiosResult = await axios\r\n    .get(searchString, axiosConfigAuth(userCookie))\r\n    .then((response) => {\r\n      const totalLength = response.data.totalLength;\r\n      let setPage = 0;\r\n      if (totalLength) {\r\n        const totalPage =\r\n          totalLength / limit - Math.floor(totalLength / limit) > 0\r\n            ? Math.floor(totalLength / limit) + 1\r\n            : Math.floor(totalLength / limit);\r\n        setPage = totalPage;\r\n      } else {\r\n        setPage = 1;\r\n      }\r\n      return {\r\n        viewData: response.data,\r\n        success: true,\r\n        setPage,\r\n      };\r\n    })\r\n    .catch((err) => {\r\n      return {\r\n        viewData: [],\r\n        success: true,\r\n        setPage: 1,\r\n      };\r\n    });\r\n  return axiosResult;\r\n}\r\n\r\nasync function allViewDataMain(userCookie) {\r\n  let searchString = `${backendUrl}/loado/api/homeworks/getAllHomework`;\r\n  const axiosResult = await axios\r\n    .get(searchString, axiosConfigAuth(userCookie))\r\n    .then((response) => {\r\n      return {\r\n        viewData: response.data,\r\n        success: true,\r\n        dataLength: response.data.totalLength,\r\n      };\r\n    });\r\n  return axiosResult;\r\n}\r\n\r\nasync function applyChangesUtil(submitData, userCookie) {\r\n  let errorOccured = false;\r\n\r\n  for (let index = 0; index < submitData.length; index++) {\r\n    await axios\r\n      .put(\r\n        `${backendUrl}/loado/api/homeworks/${submitData[index]._id}`,\r\n        {\r\n          data: submitData[index],\r\n        },\r\n        axiosConfigAuth(userCookie)\r\n      )\r\n      .then((response) => {})\r\n      .catch((err) => {\r\n        errorOccured = true;\r\n      });\r\n  }\r\n  return errorOccured;\r\n}\r\n\r\nasync function getUserCheckBoxConfiguration(userCookie) {\r\n  const result = await axios\r\n    .get(\r\n      `${backendUrl}/loado/api/userConfigure/viewbycheckbox`,\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data.viewByCheckBox;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nasync function changeUserCheckBoxConfiguration(viewByCheckBox, userCookie) {\r\n  const result = await axios\r\n    .put(\r\n      `${backendUrl}/loado/api/userConfigure/viewbycheckbox`,\r\n      {\r\n        viewByCheckBox,\r\n      },\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data.success;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nfunction alarmRestValueUtil(todoList, alarmTrue) {\r\n  let alarmList = [];\r\n  let alarm = false;\r\n\r\n  // 알람 중지\r\n  if (!alarmTrue) {\r\n    alarmList = todoList.map((item, idx) => {\r\n      item.alarmCharacter = false;\r\n      return item;\r\n    });\r\n    alarm = true;\r\n  }\r\n  // 알람 온\r\n  else {\r\n    alarmList = todoList.map((item, idx) => {\r\n      if (\r\n        item.chaosRestValue >= 40 ||\r\n        item.guardianRestValue >= 40 ||\r\n        item.eponaRestValue >= 60\r\n      ) {\r\n        item.alarmCharacter = true;\r\n      }\r\n      return item;\r\n    });\r\n    alarm = false;\r\n  }\r\n  return {\r\n    alarmList,\r\n    alarm,\r\n  };\r\n}\r\n\r\nfunction toastMessage(msg, type, deviceType = \"notMobile\") {\r\n  if (deviceType === \"mobile\") {\r\n    alert(\"came to mobile\");\r\n    if (type === \"error\") {\r\n      return toast.error(msg, {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n    } else if (type === \"info\") {\r\n      return toast.info(msg, {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n    }\r\n  } else {\r\n    alert(\"came to not mobile\");\r\n    if (type === \"error\") {\r\n      return toast.error(msg, {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n      });\r\n    } else if (type === \"info\") {\r\n      return toast.info(msg, {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nasync function updateProfilePic(profilePic, userCookie) {\r\n  const result = await axios\r\n    .post(\r\n      `${backendUrl}/loado/api/userConfigure/uploadProfilePic`,\r\n      {\r\n        profilePic,\r\n      },\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data.success;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nfunction waitForSomeTime(timeToDelay) {\r\n  return new Promise((resolve) => setTimeout(resolve, timeToDelay));\r\n}\r\n\r\nasync function getLoadoLogs(userCookie) {\r\n  const result = await axios\r\n    .get(\r\n      `${backendUrl}/loado/api/adminFeatures/adminData/dailyLogsData`,\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nexport {\r\n  viewDataMain,\r\n  allViewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n  updateProfilePic,\r\n  waitForSomeTime,\r\n  getLoadoLogs,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Grid, Image, Header, Label } from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { characterCdn, characterKorean } from '../../_data/characterDefinition';\r\n\r\nimport { allViewDataMain, applyChangesUtil } from '../Utils/ViewDataUtil';\r\n\r\nfunction ChangePosition({ changeRowModal, setChangeRowModal }) {\r\n  const [userTodoData, setUserTodoData] = useState();\r\n  const [labelText, setLabelText] = useState('저장');\r\n\r\n  const [changedIndexArr, setChangedIndexArr] = useState([]);\r\n\r\n  const saveChanges = async () => {\r\n    setLabelText('저장중입니다');\r\n    // ES6 distinct values\r\n    const distinctIndexData = Array.from(new Set(changedIndexArr));\r\n    const sendData = userTodoData.filter((item, index) =>\r\n      distinctIndexData.includes(index)\r\n    );\r\n    const applyResult = await applyChangesUtil(\r\n      sendData,\r\n      cookie.get('loadoUserToken')\r\n    );\r\n\r\n    if (applyResult) {\r\n      setLabelText('저장에 실패했습니다');\r\n      return;\r\n    }\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function callData() {\r\n      const resultData = await allViewDataMain(cookie.get('loadoUserToken'));\r\n      console.log(resultData.viewData.data);\r\n      setUserTodoData(resultData.viewData.data);\r\n    }\r\n    callData();\r\n  }, []);\r\n\r\n  let dragStartIndex;\r\n\r\n  useEffect(() => {\r\n    function dragStart() {\r\n      dragStartIndex = +this.getAttribute('data-index');\r\n    }\r\n\r\n    function dragOver(e) {\r\n      //   console.log(\"Event: \", \"dragover\");\r\n      //   nothing happens and the reason\r\n      // for that is basically the drag over event is getting in the way.\r\n      // So we want the read the only reason I have drag over here is to prevent the default action.\r\n      e.preventDefault();\r\n    }\r\n\r\n    function dragDrop() {\r\n      const dragEndIndex = +this.getAttribute('data-index');\r\n      swapItems(dragStartIndex, dragEndIndex);\r\n      this.classList.remove('over');\r\n    }\r\n\r\n    function dragEnter() {\r\n      this.classList.add('over');\r\n    }\r\n    function dragLeave() {\r\n      this.classList.remove('over');\r\n    }\r\n\r\n    // Swap list iteams that are drag and drop\r\n    function swapItems(fromIndex, toIndex) {\r\n      const itemFrom = userTodoData[fromIndex - 1];\r\n      const itemTo = userTodoData[toIndex - 1];\r\n\r\n      const itemFromIdx = itemFrom.idx;\r\n      const itemToIdx = itemTo.idx;\r\n\r\n      itemFrom.idx = itemToIdx;\r\n      itemTo.idx = itemFromIdx;\r\n\r\n      userTodoData[fromIndex - 1] = itemTo;\r\n      userTodoData[toIndex - 1] = itemFrom;\r\n\r\n      changedIndexArr.push(fromIndex - 1);\r\n      changedIndexArr.push(toIndex - 1);\r\n      setChangedIndexArr(changedIndexArr);\r\n\r\n      // console.log(changedIndexArr);\r\n\r\n      setUserTodoData([]); // 정보가 남아서 초기화\r\n      setUserTodoData(userTodoData);\r\n    }\r\n\r\n    if (userTodoData) {\r\n      const draggables = document.querySelectorAll('.draggable');\r\n\r\n      draggables.forEach((draggable) => {\r\n        draggable.addEventListener('dragstart', dragStart);\r\n        draggable.addEventListener('dragover', dragOver);\r\n        draggable.addEventListener('drop', dragDrop);\r\n        draggable.addEventListener('dragenter', dragEnter);\r\n        draggable.addEventListener('dragleave', dragLeave);\r\n      });\r\n\r\n      return () => {\r\n        draggables.forEach((draggable) => {\r\n          draggable.removeEventListener('dragstart', dragStart);\r\n          draggable.addEventListener('dragover', dragOver);\r\n          draggable.addEventListener('drop', dragDrop);\r\n          draggable.addEventListener('dragenter', dragEnter);\r\n          draggable.addEventListener('dragleave', dragLeave);\r\n        });\r\n      };\r\n    }\r\n  }, [userTodoData]);\r\n\r\n  return (\r\n    <Modal\r\n      open={changeRowModal}\r\n      onClose={() => setChangeRowModal(false)}\r\n      closeOnDimmerClick\r\n      size='tiny'\r\n    >\r\n      <Modal.Header\r\n        style={{\r\n          backgroundColor: '#384862',\r\n          color: 'white',\r\n          borderBottom: '1px solid white',\r\n        }}\r\n      >\r\n        케릭터 순서변경\r\n        {userTodoData && (\r\n          <Label\r\n            as='a'\r\n            color='orange'\r\n            ribbon\r\n            style={{ marginLeft: '80px' }}\r\n            onClick={saveChanges}\r\n          >\r\n            {labelText}\r\n          </Label>\r\n        )}\r\n      </Modal.Header>\r\n      <Modal.Content style={{ backgroundColor: 'lavender' }}>\r\n        <Grid columns={10}>\r\n          {userTodoData &&\r\n            userTodoData\r\n              .sort(function (a, b) {\r\n                return a['idx'] - b['idx'];\r\n              })\r\n              .map((item, index) => (\r\n                <Grid.Row\r\n                  className='draggable'\r\n                  draggable={true}\r\n                  data-index={item.idx}\r\n                  style={{ borderBottom: '1px solid rgb(56, 72, 98)' }}\r\n                >\r\n                  <Grid.Column width={7}>\r\n                    <Header as='h5'>\r\n                      <span style={{ marginRight: '20px' }}>{index + 1}.</span>\r\n                      <Image avatar src={characterCdn[item.character]} />{' '}\r\n                      <span style={{ marginLeft: '10px' }}>\r\n                        {item.characterName}\r\n                      </span>\r\n                    </Header>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n        </Grid>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ChangePosition;\r\n","import axios from \"axios\";\r\n\r\nconst uploadPic = async (media) => {\r\n  try {\r\n    const form = new FormData();\r\n    form.append(\"file\", media);\r\n    form.append(\"upload_preset\", \"Loado_Image\");\r\n    form.append(\"cloud_name\", \"biglol\");\r\n    console.log(\"URL IS \", process.env.REACT_APP_CLOUDINARY_URL);\r\n    const res = await axios.post(process.env.REACT_APP_CLOUDINARY_URL, form);\r\n    return res.data.url;\r\n  } catch (error) {\r\n    return;\r\n  }\r\n};\r\n\r\nexport default uploadPic;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\nimport Cropper from \"react-cropper\";\r\nimport uploadPic from \"../Utils/uploadPicToCloudinary\";\r\nimport { updateProfilePic, waitForSomeTime } from \"../Utils/ViewDataUtil\";\r\nimport cookie from \"js-cookie\";\r\n\r\nfunction ProfileModal({ profileModal, setProfileModal, profilePic }) {\r\n  const [cropper, setCropper] = useState();\r\n  const [media, setMedia] = useState(null);\r\n  const [mediaPreview, setMediaPreview] = useState();\r\n  const [statusText, setStatusText] = useState(\r\n    \"이미지를 업로드하고 잘라보세요 (icon)\"\r\n  );\r\n  const inputRef = useRef();\r\n\r\n  const handleImageChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    if (name === \"media\") {\r\n      setMedia(files[0]);\r\n      setMediaPreview(URL.createObjectURL(files[0]));\r\n      // console.log(\"objectURL is \", URL.createObjectURL(files[0]));  https://kyounghwan01.github.io/blog/JS/JSbasic/Blob-url/#createobjecturl\r\n    }\r\n  };\r\n\r\n  const cropperStyle = {\r\n    height: \"400px\",\r\n    width: \"100%\",\r\n  };\r\n\r\n  const submitData = async () => {\r\n    let picUrl;\r\n    let uploadResult = false;\r\n\r\n    if (false) {\r\n      alert(\"ASDF\");\r\n      setMedia(cropper.getCroppedCanvas().toDataURL()); // passing actual crop image\r\n      //   setMediaPreview(cropper.getCroppedCanvas().toDataURL())\r\n      cropper.destroy(); // release the cropper from the memory\r\n    }\r\n\r\n    if (media !== null && cropper) {\r\n      setStatusText(\"이미지를 업로드 중입니다\");\r\n      picUrl = await uploadPic(cropper.getCroppedCanvas().toDataURL());\r\n      waitForSomeTime(500);\r\n      cropper.destroy();\r\n      if (!picUrl) {\r\n        setStatusText(\"이미지 업로드에 실패했습니다\");\r\n      }\r\n      uploadResult = await updateProfilePic(\r\n        picUrl,\r\n        cookie.get(\"loadoUserToken\")\r\n      );\r\n    }\r\n    if (!uploadResult) {\r\n      setStatusText(\"이미지 업로드에 실패했습니다\");\r\n      return;\r\n    }\r\n    setProfileModal(false);\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        closeOnDimmerClick={false}\r\n        size=\"large\"\r\n        // onClose={setProfileModal(false)}\r\n        open={profileModal}\r\n      >\r\n        <Modal.Header>\r\n          {statusText}{\" \"}\r\n          <Icon\r\n            name=\"image\"\r\n            style={{ color: \"red\", cursor: \"pointer\" }}\r\n            onClick={() => inputRef.current.click()}\r\n          />\r\n          <input\r\n            ref={inputRef}\r\n            onChange={handleImageChange}\r\n            name=\"media\"\r\n            style={{ display: \"none\" }}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n          />\r\n        </Modal.Header>\r\n        <Grid columns={2}>\r\n          <Grid.Column>\r\n            <Modal.Content image>\r\n              {mediaPreview ? (\r\n                <Cropper\r\n                  style={cropperStyle}\r\n                  cropBoxResizable\r\n                  zoomable\r\n                  highlight\r\n                  responsive\r\n                  guides\r\n                  dragMode=\"move\"\r\n                  initialAspectRatio={1}\r\n                  preview=\".img-preview\"\r\n                  src={mediaPreview}\r\n                  viewMode={1}\r\n                  minCropBoxHeight={10}\r\n                  minCropBoxWidth={10}\r\n                  background={false}\r\n                  autoCropArea={1}\r\n                  checkOrientation={false}\r\n                  onInitialized={(cropper) => setCropper(cropper)}\r\n                />\r\n              ) : (\r\n                <Image\r\n                  src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\r\n                  style={{ ...cropperStyle, cursor: \"pointer\" }}\r\n                  onClick={() => inputRef.current.click()}\r\n                />\r\n              )}\r\n              {/* cropper can only generate preview from a url string not from object, so we passed mediapreview not media state */}\r\n            </Modal.Content>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Modal.Content image>\r\n              <div style={{ margin: \"15px 0px\" }}>\r\n                <Header as=\"h3\">\r\n                  <Icon name=\"file image outline\" />\r\n                  <Header.Content content=\"최종 이미지\" />\r\n                </Header>\r\n              </div>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"300px\",\r\n                    display: \"inline-block\",\r\n                    padding: \"10px\",\r\n                    overflow: \"hidden\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  className=\"img-preview\"\r\n                ></div>\r\n              </div>\r\n            </Modal.Content>\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Modal.Actions>\r\n          <Button\r\n            title=\"Reset (R)\"\r\n            icon=\"redo\"\r\n            circular\r\n            onClick={() => cropper && cropper.reset()}\r\n          />\r\n          {/* \r\n          <Button\r\n            title=\"Move Canvas (M)\"\r\n            icon=\"move\"\r\n            circular\r\n            onClick={() => cropper && cropper.setDragMode(\"move\")}\r\n          /> */}\r\n\r\n          <Button\r\n            title=\"New Cropbox (C)\"\r\n            icon=\"crop\"\r\n            circular\r\n            onClick={() => cropper && cropper.setDragMode(\"crop\")}\r\n          />\r\n\r\n          <Button\r\n            negative\r\n            content=\"취소\"\r\n            icon=\"cancel\"\r\n            onClick={() => setProfileModal(false)}\r\n          />\r\n\r\n          <Button\r\n            content=\"프로필 업로드\"\r\n            icon=\"checkmark\"\r\n            positive\r\n            onClick={submitData}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Menu,\r\n  Header,\r\n  Icon,\r\n  Popup,\r\n  Button,\r\n  Divider,\r\n  Image,\r\n  Card,\r\n} from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { backendUrl, axiosConfig, axiosConfigAuth } from '../Utils/ConstVar';\r\n\r\nimport HistoryModal from '../Nav/HistoryModal';\r\nimport ChangePosition from '../HomeSubComp/ChangePosition';\r\nimport ProfileModal from '../Utils/ProfileModal';\r\n\r\nimport './NavHeader.css';\r\n\r\nfunction NavHeader() {\r\n  let userIdString = cookie.get('loadoUserCookie');\r\n  let userValue = userIdString && JSON.parse(userIdString);\r\n  const history = useHistory();\r\n\r\n  const [accountUser, setAccountUser] = useState(null);\r\n\r\n  const [showUpdateHistoryModal, setShowUpdateHistoryModal] = useState(false);\r\n  const [changeRowModal, setChangeRowModal] = useState(false);\r\n  const [profileModal, setProfileModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [noticeAlert, setNoticeAlert] = useState(false);\r\n\r\n  const logoutUser = (userId) => {\r\n    cookie.set('loginId', userId);\r\n    cookie.remove('loadoUserCookie');\r\n    cookie.remove('loadoUserToken');\r\n    cookie.remove('token');\r\n    history.push('/login');\r\n  };\r\n\r\n  const restValueBatch = async () => {\r\n    let searchString = `${backendUrl}/loado/api/homeworks/loadoupdatepersonal`;\r\n    axios\r\n      .post(searchString, {}, axiosConfig)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        alert('휴식게이지를 반영하지 못했습니다');\r\n      });\r\n  };\r\n\r\n  const openChangeRowModal = () => {\r\n    setOpen(false);\r\n    setChangeRowModal(true);\r\n  };\r\n\r\n  const openProfileModal = () => {\r\n    setOpen(false);\r\n    setProfileModal(true);\r\n  };\r\n\r\n  const changeNotificationToFalse = async () => {\r\n    await axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/changeNotification`,\r\n        {},\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) return;\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function checkNewlyUpdate() {\r\n      const axiosResult = await axios\r\n        .post(\r\n          `${backendUrl}/loado/api/users/checkNotification`,\r\n          {},\r\n          axiosConfigAuth(cookie.get('loadoUserToken'))\r\n        )\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            setNoticeAlert(response.data.user.newNotice);\r\n            setAccountUser(response.data.user);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setNoticeAlert(false);\r\n        });\r\n    }\r\n    checkNewlyUpdate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        style={{\r\n          background: '-webkit-linear-gradient(right, #da0050, #8e2b88)',\r\n          height: '6vh',\r\n          borderRadius: '0px',\r\n          marginBottom: '0px',\r\n        }}\r\n        borderless\r\n      >\r\n        <Menu.Item>\r\n          <Header\r\n            size='large'\r\n            id='navTitle'\r\n            onClick={() =>\r\n              window.open(\r\n                'https://github.com/biglol10/loado-react/blob/main/README.md'\r\n              )\r\n            }\r\n          >\r\n            <span style={{ fontStyle: 'italic' }}>\r\n              <Icon name='game' />\r\n              LoaDo\r\n            </span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            onClick={() => setShowUpdateHistoryModal(!showUpdateHistoryModal)}\r\n            className={noticeAlert ? 'newNoticeAlert headerItem' : 'headerItem'}\r\n          >\r\n            <Icon name='cube' />\r\n            작업 내역\r\n          </Header>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            className='headerItem'\r\n            onClick={() => restValueBatch()}\r\n          >\r\n            <Icon name='box' />\r\n            휴식게이지반영\r\n          </Header>\r\n        </Menu.Item>\r\n        {accountUser?.role === 'admin' && (\r\n          <Menu.Item>\r\n            <Header\r\n              size='small'\r\n              className='headerItem'\r\n              onClick={() => history.push('/dashboard')}\r\n            >\r\n              <Icon name='dashboard' />\r\n              대시보드\r\n            </Header>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        <Menu.Item className='personIconItem'>\r\n          <Popup\r\n            on='click'\r\n            position='top right'\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={\r\n              <Header size='small' className='personIcon'>\r\n                {accountUser?.profilePic ? (\r\n                  <div>\r\n                    <Image src={accountUser.profilePic} avatar />\r\n                    <span style={{ color: 'white' }}>{userValue.userName}</span>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <Icon name='user' />\r\n                    {userValue && userValue.userName}\r\n                  </>\r\n                )}\r\n              </Header>\r\n            }\r\n          >\r\n            <Card>\r\n              <Image\r\n                avatar\r\n                // style={{ height: '70px', width: '70px', objectFit: 'cover' }}\r\n                src={\r\n                  accountUser?.profilePic\r\n                    ? accountUser.profilePic\r\n                    : 'https://react.semantic-ui.com/images/wireframe/image.png'\r\n                }\r\n                style={{\r\n                  margin: '0 auto',\r\n                  height: '150px',\r\n                  width: '150px',\r\n                  borderRadius: '500rem !important',\r\n                }}\r\n                id='profilePicId'\r\n              />\r\n              <Card.Content>\r\n                <Card.Header>{userValue && userValue.userName}</Card.Header>\r\n                <Divider hidden />\r\n                <Card.Description>\r\n                  <p style={{ fontWeight: 'bold' }}>\r\n                    프로필 이미지를 바꾸시겠습니까?\r\n                  </p>\r\n                  <Button\r\n                    color='violet'\r\n                    content='프로필변경'\r\n                    onClick={openProfileModal}\r\n                  />\r\n                  <Divider />\r\n                  <p style={{ fontWeight: 'bold' }}>\r\n                    케릭터 순서를 바꾸시겠습니까?\r\n                  </p>\r\n                  <Button\r\n                    color='blue'\r\n                    content='순서변경'\r\n                    onClick={openChangeRowModal}\r\n                  />\r\n                  <Divider />\r\n                  <p style={{ fontWeight: 'bold' }}>로그아웃 하시겠습니까?</p>\r\n                  <Button\r\n                    color='red'\r\n                    content='로그아웃'\r\n                    onClick={() => logoutUser(userValue.userId)}\r\n                  />\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>\r\n          </Popup>\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {profileModal && (\r\n        <ProfileModal\r\n          profileModal={profileModal}\r\n          setProfileModal={setProfileModal}\r\n          profilePic={accountUser?.profilePic}\r\n        />\r\n      )}\r\n\r\n      {showUpdateHistoryModal && (\r\n        <HistoryModal\r\n          showUpdateHistoryModal={showUpdateHistoryModal}\r\n          setShowUpdateHistoryModal={setShowUpdateHistoryModal}\r\n          setNoticeAlert={setNoticeAlert}\r\n          changeNotificationToFalse={changeNotificationToFalse}\r\n        />\r\n      )}\r\n\r\n      {changeRowModal && (\r\n        <ChangePosition\r\n          changeRowModal={changeRowModal}\r\n          setChangeRowModal={setChangeRowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Menu,\r\n  Header,\r\n  Icon,\r\n  Popup,\r\n  Button,\r\n  Modal,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { backendUrl, axiosConfig, axiosConfigAuth } from '../Utils/ConstVar';\r\n\r\nimport HistoryModal from '../Nav/HistoryModal';\r\nimport ChangePosition from '../HomeSubComp/ChangePosition';\r\n\r\nimport './NavHeader.css';\r\n\r\nfunction NavHeaderMobile() {\r\n  let userIdString = cookie.get('loadoUserCookie');\r\n  let userValue = userIdString && JSON.parse(userIdString);\r\n  const history = useHistory();\r\n\r\n  const [showUpdateHistoryModal, setShowUpdateHistoryModal] = useState(false);\r\n  const [changeRowModal, setChangeRowModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [noticeAlert, setNoticeAlert] = useState(false);\r\n\r\n  const [mobileSize, setMobileSize] = useState(false);\r\n\r\n  const logoutUser = (userId) => {\r\n    cookie.set('loginId', userId);\r\n    cookie.remove('loadoUserCookie');\r\n    cookie.remove('loadoUserToken');\r\n    cookie.remove('token');\r\n    history.push('/login');\r\n  };\r\n\r\n  const restValueBatch = async () => {\r\n    let searchString = `${backendUrl}/loado/api/homeworks/loadoupdatepersonal`;\r\n    axios\r\n      .post(searchString, {}, axiosConfig)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        alert('휴식게이지를 반영하지 못했습니다');\r\n      });\r\n  };\r\n\r\n  const openChangeRowModal = () => {\r\n    setOpen(false);\r\n    setChangeRowModal(true);\r\n  };\r\n\r\n  const changeNotificationToFalse = async () => {\r\n    await axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/changeNotification`,\r\n        {},\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) return;\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function checkNewlyUpdate() {\r\n      const axiosResult = await axios\r\n        .post(\r\n          `${backendUrl}/loado/api/users/checkNotification`,\r\n          {},\r\n          axiosConfigAuth(cookie.get('loadoUserToken'))\r\n        )\r\n        .then((response) => {\r\n          if (response.data.success) setNoticeAlert(response.data.newNotice);\r\n        })\r\n        .catch((err) => {\r\n          setNoticeAlert(false);\r\n        });\r\n    }\r\n    checkNewlyUpdate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        style={{\r\n          background: '-webkit-linear-gradient(right, #da0050, #8e2b88)',\r\n          height: '6vh',\r\n          borderRadius: '0px',\r\n          marginBottom: '0px',\r\n          width: '100%',\r\n        }}\r\n        borderless\r\n      >\r\n        <Menu.Item>\r\n          <Header\r\n            size='large'\r\n            id='navTitleMobile'\r\n            onClick={() =>\r\n              window.open(\r\n                'https://github.com/biglol10/loado-react/blob/main/README.md'\r\n              )\r\n            }\r\n          >\r\n            <span style={{ fontStyle: 'italic' }}>\r\n              <Icon name='game' />\r\n              LoaDo\r\n            </span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item style={{ marginLeft: 'auto' }}>\r\n          <Popup\r\n            on='click'\r\n            position='top right'\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={\r\n              <Header\r\n                size='small'\r\n                style={{\r\n                  color: 'white',\r\n                  padding: '0 50px',\r\n                  display: 'flex',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                <Icon name='user' />\r\n                {userValue && userValue.userName}\r\n              </Header>\r\n            }\r\n          >\r\n            <p>개인휴식게이지 반영</p>\r\n            <Button\r\n              color='teal'\r\n              content='휴게반영'\r\n              onClick={() => restValueBatch()}\r\n            />\r\n            <Divider />\r\n            <p>로그아웃 하시겠습니까?</p>\r\n            <Button\r\n              color='red'\r\n              content='로그아웃'\r\n              onClick={() => logoutUser(userValue.userId)}\r\n            />\r\n          </Popup>\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {showUpdateHistoryModal && (\r\n        <HistoryModal\r\n          showUpdateHistoryModal={showUpdateHistoryModal}\r\n          setShowUpdateHistoryModal={setShowUpdateHistoryModal}\r\n          setNoticeAlert={setNoticeAlert}\r\n          changeNotificationToFalse={changeNotificationToFalse}\r\n        />\r\n      )}\r\n\r\n      {changeRowModal && (\r\n        <ChangePosition\r\n          changeRowModal={changeRowModal}\r\n          setChangeRowModal={setChangeRowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeaderMobile;\r\n","import React, { useState } from \"react\";\r\nimport \"./CharacterToDo.css\";\r\nimport { Header, Button, Segment, Grid, Container } from \"semantic-ui-react\";\r\nimport TodoComponent from \"../Todo/TodoComponent\";\r\nimport todoData from \"../../_data/todoData.js\";\r\n\r\nfunction CharacterToDo() {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  const [userTodoData, setUserTodoData] = useState(todoData);\r\n\r\n  const [iconId, setIconId] = useState(\"\");\r\n\r\n  const [changedList, setChangedList] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <Grid className=\"fullPage\">\r\n        <Container\r\n          style={{ width: \"95%\", marginLeft: \"2.5%\", marginRight: \"2.5%\" }}\r\n        >\r\n          <Grid.Column width={16}>\r\n            <Segment basic style={{ marginBottom: \"0px\" }}>\r\n              <Header\r\n                size=\"huge\"\r\n                style={{ color: \"deepskyblue\", textAlign: \"center\" }}\r\n              >\r\n                로아 숙제관리\r\n              </Header>\r\n            </Segment>\r\n            <Segment basic className=\"contentHeader\">\r\n              <div className=\"headerValueStart\">\r\n                <Header size=\"medium\" style={{ color: \"white\" }}>\r\n                  {today}{\" \"}\r\n                  <span style={{ marginLeft: \"40px\" }}>\r\n                    금일 06:00 ~ 명일 05:59\r\n                  </span>\r\n                </Header>\r\n              </div>\r\n              <div className=\"headerValueEnd\">\r\n                <Button inverted color=\"red\">\r\n                  변경사항 저장\r\n                </Button>\r\n              </div>\r\n            </Segment>\r\n            <Segment basic style={{ backgroundColor: \"slategrey\" }}>\r\n              <Grid columns={16}>\r\n                <Grid.Row style={{ borderBottom: \"0.05rem inset ivory\" }}>\r\n                  <Grid.Column style={{ width: \"150px\" }}></Grid.Column>\r\n                  <Grid.Column width={2}>휴식게이지</Grid.Column>\r\n                  <Grid.Column width={12}>\r\n                    <Grid columns=\"equal\">\r\n                      <Grid.Row>\r\n                        <Grid.Column>카오스던전</Grid.Column>\r\n                        <Grid.Column>가디언토벌</Grid.Column>\r\n                        <Grid.Column>에포나</Grid.Column>\r\n                        <Grid.Column>가디언레이드</Grid.Column>\r\n                        <Grid.Column>어비스2종</Grid.Column>\r\n                        <Grid.Column width={2}>주간던전</Grid.Column>\r\n                        <Grid.Column>아르고스</Grid.Column>\r\n                        <Grid.Column>발탄</Grid.Column>\r\n                        <Grid.Column>비아키스</Grid.Column>\r\n                        <Grid.Column>쿠크세이튼</Grid.Column>\r\n                        <Grid.Column>아브렐슈드</Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                {userTodoData.map((item, idx) => (\r\n                  <TodoComponent\r\n                    listId={item._id}\r\n                    userTodoData={item}\r\n                    setUserTodoData={setUserTodoData}\r\n                    iconId={iconId}\r\n                    setIconId={setIconId}\r\n                    setChangedList={setChangedList}\r\n                    thisItemChanged={\r\n                      changedList.includes(item._id)\r\n                        ? \"thisItemChanged\"\r\n                        : \"thisItemNotChanged\"\r\n                    }\r\n                  />\r\n                ))}\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Container>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDo;\r\n","import React, { useState, useEffect, useRef, innerRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  List,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport { characterCdn, characterKorean } from \"../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { backendUrl } from \"../Utils/ConstVar\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport \"./AddCharacter.css\";\r\n\r\nfunction AddCharacter({\r\n  addCharacterModal,\r\n  closeAddCharacter,\r\n  userTodoData,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  limit,\r\n  activePage,\r\n}) {\r\n  const [selectCharacterModal, setSelectCharacterModal] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState(\"\");\r\n  const [characterName, setCharacterName] = useState(\"\");\r\n  const [chaosRestValue, setChaosRestValue] = useState(0);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(0);\r\n  const [eponaRestValue, setEponaRestValue] = useState(0);\r\n  const regex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]+$/;\r\n  const regexNumber = /^[0-9]+$/;\r\n\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n\r\n  const closeSelectCharacter = () => setSelectCharacterModal(false);\r\n\r\n  const modalShow = () => {\r\n    setSelectCharacterModal(true);\r\n  };\r\n\r\n  const classSelected = (event) => {\r\n    let selectedClass;\r\n    if (event.target.className.indexOf(\"image\") > 0) {\r\n      selectedClass = event.target.dataset.options;\r\n    } else {\r\n      selectedClass = event.target.className.split(\" \")[2];\r\n    }\r\n    setSelectedCharacter(selectedClass);\r\n    setSelectCharacterModal(false);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeAddCharacterModal = () => {\r\n    setSelectedCharacter(\"\");\r\n    setCharacterName(\"\");\r\n    setChaosRestValue(0);\r\n    setGuardianRestValue(0);\r\n    setEponaRestValue(0);\r\n    closeAddCharacter();\r\n  };\r\n\r\n  const changeInputCharName = (event, data) => {\r\n    const insertedValue = data.value;\r\n    if (insertedValue.length === 0) {\r\n      setCharacterName(\"\");\r\n      return;\r\n    }\r\n    if (!regex.test(insertedValue) || insertedValue.length > 12) return;\r\n    setCharacterName(insertedValue);\r\n  };\r\n\r\n  const changeRestValue = (event, data) => {\r\n    event.preventDefault();\r\n    if (!regexNumber.test(event.target.value)) return;\r\n    if (event.target.id === \"chaosChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = chaosRestValue + (changedValue - chaosRestValue) * 10;\r\n      if (valueOutput < 0) setChaosRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValue(valueOutput);\r\n      else setChaosRestValue(100);\r\n    }\r\n    if (event.target.id === \"guardianChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput =\r\n        guardianRestValue + (changedValue - guardianRestValue) * 10;\r\n      if (valueOutput < 0) setGuardianRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValue(valueOutput);\r\n      else setGuardianRestValue(100);\r\n    }\r\n    if (event.target.id === \"eponaChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = eponaRestValue + (changedValue - eponaRestValue) * 10;\r\n      if (valueOutput < 0) setEponaRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValue(valueOutput);\r\n      else setEponaRestValue(100);\r\n    }\r\n  };\r\n\r\n  const confirmAddCharacter = () => {\r\n    const createdData = {\r\n      // _id: \"5d725a037b292f5f8ceff795\",\r\n      // user: \"5d7a514b5d2c12c7449be042\",\r\n      character: selectedCharacter,\r\n      characterName: characterName,\r\n      date: Date.now(),\r\n      // idx: 2,\r\n      chaosRestValue,\r\n      guardianRestValue,\r\n      eponaRestValue,\r\n      chaosDone: 0,\r\n      guardianDone: 0,\r\n      eponaDone: 0,\r\n      guardianWeeklyDone: 0,\r\n      abyssDungeon2: false,\r\n      // abyssDungeonWeekly: true,\r\n      // rehearsalAndDejavu: [\"kukuseitn\", \"abrel\"],\r\n      argos: false,\r\n      baltan: false,\r\n      biakiss: false,\r\n      kukuseitn: false,\r\n      abrel: false,\r\n      attributeChanged: false,\r\n      weeklyAttributeChanged: false,\r\n      createdAt: Date.now(),\r\n    };\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/homeworks`,\r\n        createdData,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        // setUserTodoData([...userTodoData, response.data.data]);\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          userTodoData.length % limit === 0\r\n        ) {\r\n          activePage = Math.floor(response.data.totalLength / limit) + 1;\r\n          viewPage(activePage);\r\n        } else {\r\n          viewPage(activePage);\r\n        }\r\n        closeAddCharacterModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.error, {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        closeAddCharacterModal();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const classElements = document.getElementsByClassName(\r\n      \"characterClassContent\"\r\n    );\r\n    let eventAdd;\r\n    for (let index = 0; index < classElements.length; index++) {\r\n      eventAdd = classElements[index].addEventListener(\"click\", (event) => {\r\n        classSelected(event);\r\n      });\r\n    }\r\n    return () => {\r\n      for (let index = 0; index < classElements.length; index++) {\r\n        classElements[index].removeEventListener(\"click\", eventAdd);\r\n      }\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById(\"characterNameInputId\");\r\n    const enterEvent = element.addEventListener(\"keypress\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        console.log(buttonRef.current);\r\n        if (buttonRef.current) buttonRef.current.click();\r\n      }\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"keypress\", enterEvent);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={addCharacterModal}\r\n        onClose={closeAddCharacterModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: \"dimgray\" }}>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            {!selectedCharacter ? (\r\n              <>\r\n                <span className=\"itemHeaderAttribute1\">클래스:</span>\r\n                <Icon\r\n                  name=\"add square\"\r\n                  size=\"large\"\r\n                  color=\"white\"\r\n                  onClick={modalShow}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"itemHeaderAttribute2\">클래스:</span>\r\n                <span onClick={() => setSelectCharacterModal(true)}>\r\n                  <Image\r\n                    src={characterCdn[selectedCharacter]}\r\n                    size=\"mini\"\r\n                    avatar\r\n                  />\r\n                  {characterKorean[selectedCharacter]}\r\n                </span>\r\n              </>\r\n            )}\r\n          </Header>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            <span style={{ marginRight: \"40px\" }}>케릭명:</span>\r\n            <Input\r\n              transparent\r\n              placeholder=\"케릭터명\"\r\n              style={{ color: \"white\" }}\r\n              className=\"charNameInput\"\r\n              value={characterName}\r\n              ref={inputRef}\r\n              id=\"characterNameInputId\"\r\n              onChange={(event, data) => changeInputCharName(event, data)}\r\n            />\r\n          </Header>\r\n          <Header className=\"itemHeaderRest\" as=\"h4\">\r\n            <List divided selection>\r\n              <List.Item>\r\n                <Label horizontal>카오스던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={chaosRestValue}\r\n                  id=\"chaosChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>가디언던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={guardianRestValue}\r\n                  id=\"guardianChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>에포나</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={eponaRestValue}\r\n                  id=\"eponaChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n            </List>\r\n          </Header>\r\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <Button\r\n              circular\r\n              color=\"google plus\"\r\n              icon=\"cancel\"\r\n              onClick={closeAddCharacterModal}\r\n            />\r\n            <Button\r\n              circular\r\n              color=\"twitter\"\r\n              icon=\"check\"\r\n              onClick={confirmAddCharacter}\r\n            />\r\n            <button\r\n              ref={buttonRef}\r\n              onClick={confirmAddCharacter}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <Modal\r\n        open={selectCharacterModal}\r\n        onClose={closeSelectCharacter}\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n        className=\"classSelectModal\"\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            backgroundColor: \"#384862\",\r\n            color: \"white\",\r\n            borderBottom: \"1px solid white\",\r\n          }}\r\n        >\r\n          클래스\r\n        </Modal.Header>\r\n        <Modal.Content style={{ backgroundColor: \"#384862\", color: \"white\" }}>\r\n          <Grid columns={6}>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  전사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column\r\n                className=\"characterClassContent berserker\"\r\n                name=\"berserker\"\r\n              >\r\n                <Image\r\n                  src={characterCdn.berserker}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"berserker\"\r\n                />\r\n                버서커\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent warlord\">\r\n                <Image\r\n                  src={characterCdn.warlord}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"warlord\"\r\n                />\r\n                워로드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent destroyer\">\r\n                <Image\r\n                  src={characterCdn.destroyer}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"destroyer\"\r\n                />\r\n                디스트로이어\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent holyknight\">\r\n                <Image\r\n                  src={characterCdn.holyknight}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"holyknight\"\r\n                />\r\n                홀리나이트\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  무도가\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent battlemaster\">\r\n                <Image\r\n                  src={characterCdn.battlemaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"battlemaster\"\r\n                />\r\n                배틀마스터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent infighter\">\r\n                <Image\r\n                  src={characterCdn.infighter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"infighter\"\r\n                />\r\n                인파이터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent soulmaster\">\r\n                <Image\r\n                  src={characterCdn.soulmaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"soulmaster\"\r\n                />\r\n                기공사\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent lancemaster\">\r\n                <Image\r\n                  src={characterCdn.lancemaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"lancemaster\"\r\n                />\r\n                창술사\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent striker\">\r\n                <Image\r\n                  src={characterCdn.striker}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"striker\"\r\n                />\r\n                스트라이커\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  헌터\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent devilhunter\">\r\n                <Image\r\n                  src={characterCdn.devilhunter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"devilhunter\"\r\n                />\r\n                데빌헌터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent blaster\">\r\n                <Image\r\n                  src={characterCdn.blaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"blaster\"\r\n                />\r\n                블래스터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent hawkeye\">\r\n                <Image\r\n                  src={characterCdn.hawkeye}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"hawkeye\"\r\n                />\r\n                호크아이\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent scouter\">\r\n                <Image\r\n                  src={characterCdn.scouter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"scouter\"\r\n                />\r\n                스카우터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent gunslinger\">\r\n                <Image\r\n                  src={characterCdn.gunslinger}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"gunslinger\"\r\n                />\r\n                건슬링어\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  마법사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent summoner\">\r\n                <Image\r\n                  src={characterCdn.summoner}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"summoner\"\r\n                />\r\n                서머너\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent arcana\">\r\n                <Image\r\n                  src={characterCdn.arcana}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"arcana\"\r\n                />\r\n                아르카나\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent bard\">\r\n                <Image\r\n                  src={characterCdn.bard}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"bard\"\r\n                />\r\n                바드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent sorceress\">\r\n                <Image\r\n                  src={characterCdn.sorceress}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"sorceress\"\r\n                />\r\n                소서리스\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  암살자\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent blade\">\r\n                <Image\r\n                  src={characterCdn.blade}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"blade\"\r\n                />\r\n                블레이드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent demonic\">\r\n                <Image\r\n                  src={characterCdn.demonic}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"demonic\"\r\n                />\r\n                데모닉\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent reaper\">\r\n                <Image\r\n                  src={characterCdn.reaper}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"reaper\"\r\n                />\r\n                리퍼\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Modal, Image, Button } from \"semantic-ui-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { characterCdn } from \"../../_data/characterDefinition\";\r\n\r\nfunction RestValue({ item, userTodoData, setUserTodoData }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(item._id);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowModal(true);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  // if you use setShowModal directly in Modal onClose, react will throw error\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [chaosRestValue, setChaosRestValue] = useState(item.chaosRestValue);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValue, setEponaRestValue] = useState(item.eponaRestValue);\r\n\r\n  const [chaosRestValueChange, setChaosRestValueChange] = useState(\r\n    item.chaosRestValue\r\n  );\r\n  const [guardianRestValueChange, setGuardianRestValueChange] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValueChange, setEponaRestValueChange] = useState(\r\n    item.eponaRestValue\r\n  );\r\n\r\n  const valueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"chaosChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        chaosRestValueChange + (changedValue - chaosRestValueChange) * 10;\r\n      if (valueOutput < 0) setChaosRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValueChange(valueOutput);\r\n      else setChaosRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"guardianChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        guardianRestValueChange + (changedValue - guardianRestValueChange) * 10;\r\n      if (valueOutput < 0) setGuardianRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValueChange(valueOutput);\r\n      else setGuardianRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"eponaChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        eponaRestValueChange + (changedValue - eponaRestValueChange) * 10;\r\n      if (valueOutput < 0) setEponaRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValueChange(valueOutput);\r\n      else setEponaRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const confirmValue = () => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === item._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"chaosRestValue\"] = chaosRestValueChange;\r\n    newArr[indexValue][\"guardianRestValue\"] = guardianRestValueChange;\r\n    newArr[indexValue][\"eponaRestValue\"] = eponaRestValueChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column id={item._id}>\r\n        카던: {item.chaosRestValue}\r\n        <br />\r\n        가디언: {item.guardianRestValue}\r\n        <br />\r\n        에포나: {item.eponaRestValue}\r\n      </Grid.Column>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Header>\r\n          <Image src={characterCdn[item.character]} size=\"mini\" avatar />\r\n          {item.characterName}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextField\r\n            id=\"chaosChange\"\r\n            type=\"number\"\r\n            label=\"카오스던전\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={chaosRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"guardianChange\"\r\n            type=\"number\"\r\n            label=\"가디언토벌\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={guardianRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"eponaChange\"\r\n            type=\"number\"\r\n            label=\"에포나\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={eponaRestValueChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={closeModal}>\r\n            취소\r\n          </Button>\r\n          <Button positive onClick={confirmValue}>\r\n            확인\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestValue;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Image, Icon, Popup } from \"semantic-ui-react\";\r\nimport { characterCdn } from \"../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport \"./CharacterAvatarCss.css\";\r\nimport { backendUrl } from \"../Utils/ConstVar\";\r\n\r\nfunction CharacterAvatar({\r\n  itemId,\r\n  character,\r\n  characterName,\r\n  attributeChanged,\r\n  weeklyAttributeChanged,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  alarmCharacter,\r\n  limit,\r\n  dontChange,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  deviceType,\r\n  activePage,\r\n}) {\r\n  const [deleteIcon, showDeleteIcon] = useState(false);\r\n\r\n  const [showDontChange, setShowDontChange] = useState(false);\r\n\r\n  const [dontChangeState, setDontChangeState] = useState(dontChange);\r\n\r\n  const [alarmState, setAlarmState] = useState(\"\");\r\n\r\n  const deleteCharacter = (id) => {\r\n    // console.log(id);\r\n    // const indexValue = userTodoData.findIndex((anItem) => {\r\n    //   return anItem._id === id;\r\n    // });\r\n    // let newArr = [...userTodoData];\r\n    // newArr.splice(indexValue, 1);\r\n    // setUserTodoData(newArr);\r\n    // showDeleteIcon(false);\r\n\r\n    axios\r\n      .delete(\r\n        `${backendUrl}/loado/api/homeworks/${itemId}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          response.data.totalLength % limit === 0\r\n        ) {\r\n          if (activePage <= response.data.totalLength / limit) {\r\n            viewPage(activePage);\r\n          } else if (activePage > response.data.totalLength / limit) {\r\n            activePage = response.data.totalLength / limit;\r\n            viewPage(activePage);\r\n          }\r\n        } else {\r\n          viewPage(activePage);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  const dontChangeCharacter = (id) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].dontChange = !dontChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setDontChangeState(!dontChangeState);\r\n    setUserTodoData(newArr);\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  // 원래 1회 실행으로 useEffect에 []를 넣었지만 이걸 넣으니 되돌아가기가 안됨... 그래서 [] 빼보니 됨\r\n  useEffect(() => {\r\n    let element = document.getElementById(`${itemId}_${characterName}`);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowDontChange(!showDontChange);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column>\r\n        <Image\r\n          src={characterCdn[character]}\r\n          size=\"mini\"\r\n          avatar\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n        />\r\n        {deviceType === \"mobile\" && <br />}\r\n        <span\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n          className={alarmCharacter ? \"alarmLight\" : \"\"}\r\n          id={`${itemId}_${characterName}`}\r\n          data-options={itemId}\r\n        >\r\n          {characterName}\r\n        </span>\r\n        {(attributeChanged || weeklyAttributeChanged) && (\r\n          <Icon\r\n            name=\"edit\"\r\n            size=\"small\"\r\n            style={{ color: \"springgreen\", marginLeft: \"3px\" }}\r\n          />\r\n        )}\r\n        {deleteIcon && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name=\"trash\"\r\n                color=\"red\"\r\n                style={{ cursor: \"pointer\", marginLeft: \"1px\" }}\r\n                onClick={() => deleteCharacter(itemId)}\r\n              />\r\n            }\r\n            content={`'${characterName}'에 대한 정보를 삭제하시겠습니까?`}\r\n          />\r\n        )}\r\n        {showDontChange && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name={dontChangeState ? \"bell\" : \"bell slash\"}\r\n                color=\"yellow\"\r\n                style={{ cursor: \"pointer\", marginLeft: \"1px\" }}\r\n                onClick={() => dontChangeCharacter(itemId)}\r\n              />\r\n            }\r\n            content={\r\n              dontChangeState\r\n                ? `'${characterName}' 휴식게이지 고정취소`\r\n                : `'${characterName}' 휴식게이지 고정`\r\n            }\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterAvatar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextArea, Icon } from \"semantic-ui-react\";\r\n\r\nfunction PerIdNote({ item, userTodoData, setUserTodoData, deviceType }) {\r\n  const [showTextArea, setShowTextArea] = useState(false);\r\n  const [textValue, setTextValue] = useState(item.note);\r\n\r\n  const dontChangeCharacter = (id, theText) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"note\"] = theText;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  const changeText = (event) => {\r\n    if (event.target.value.length > 20) return;\r\n    setTextValue(event.target.value);\r\n    dontChangeCharacter(item._id, event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!showTextArea ? (\r\n        <>\r\n          {item.note}{\" \"}\r\n          <Icon\r\n            inverted\r\n            name=\"pencil square\"\r\n            color=\"pink\"\r\n            onClick={() => setShowTextArea(!showTextArea)}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </>\r\n      ) : deviceType === \"mobile\" ? (\r\n        <TextArea\r\n          style={{ width: \"100%\" }}\r\n          value={textValue}\r\n          onChange={(event) => changeText(event)}\r\n        />\r\n      ) : (\r\n        <TextArea value={textValue} onChange={(event) => changeText(event)} />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport default PerIdNote;\r\n","import React, { useState } from 'react';\r\nimport { Grid, Dropdown, Checkbox } from 'semantic-ui-react';\r\n\r\nfunction changeArr(arr, match, dataValue, type) {\r\n  const indexValue = arr.findIndex((anItem) => {\r\n    return anItem._id === match;\r\n  });\r\n  let newArr = [...arr];\r\n  newArr[indexValue][type] = dataValue;\r\n  newArr[indexValue]['attributeChanged'] = true;\r\n  return newArr;\r\n}\r\n\r\nfunction ChaosDunValue({\r\n  chaosItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${chaosItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${chaosItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${chaosItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [chaosData, setChaosData] = useState(chaosItem.chaosDone);\r\n\r\n  // 체크박스로 숙제를 체크하고 싶다는 피드백에 따라 작성\r\n  const [chaosDataChecked, setChaosDataChecked] = useState(\r\n    chaosItem.chaosDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setChaosData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      chaosItem._id,\r\n      data.value,\r\n      'chaosDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setChaosDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={chaosData}\r\n        />\r\n      ) : (\r\n        // 체크박스용\r\n        <Checkbox\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={chaosDataChecked}\r\n          value={chaosDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction GuardianDunValue({\r\n  guardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${guardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${guardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${guardianItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [guardianData, setGuardianData] = useState(guardianItem.guardianDone);\r\n\r\n  const [guardianDataChecked, setGuardianDataChecked] = useState(\r\n    guardianItem.guardianDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setGuardianData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      guardianItem._id,\r\n      data.value,\r\n      'guardianDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={guardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={guardianDataChecked}\r\n          value={guardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction EponaValue({\r\n  eponaItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${eponaItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${eponaItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${eponaItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${eponaItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [eponaData, setEponaData] = useState(eponaItem.eponaDone);\r\n\r\n  const [eponaDataChecked, setEponaDataChecked] = useState(\r\n    eponaItem.eponaDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setEponaData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      eponaItem._id,\r\n      data.value,\r\n      'eponaDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setEponaDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='epona'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={eponaData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='epona'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={eponaDataChecked}\r\n          value={eponaDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\n// Currently not used for nicer view\r\nfunction WeeklyGuardian({\r\n  weeklyGuardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${weeklyGuardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${weeklyGuardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${weeklyGuardianItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${weeklyGuardianItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [weeklyGuardianData, setWeeklyGuardianData] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone\r\n  );\r\n\r\n  const [weeklyGuardianDataChecked, setWeeklyGuardianDataChecked] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setWeeklyGuardianData(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === weeklyGuardianItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].guardianWeeklyDone = data.value;\r\n    newArr[indexValue]['attributeChanged'] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setWeeklyGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={weeklyGuardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={weeklyGuardianDataChecked}\r\n          value={weeklyGuardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport { ChaosDunValue, GuardianDunValue, EponaValue, WeeklyGuardian };\r\n","import React, { useState } from 'react';\r\nimport { Grid, Checkbox, Dropdown, Label } from 'semantic-ui-react';\r\n\r\nconst changeDatafunction = (\r\n  event,\r\n  data,\r\n  setItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  findIndexItem,\r\n  changeItem\r\n) => {\r\n  setItem(data.checked);\r\n  const indexValue = userTodoData.findIndex((anItem) => {\r\n    return anItem._id === findIndexItem._id;\r\n  });\r\n  let newArr = [...userTodoData];\r\n  newArr[indexValue][changeItem] = data.checked;\r\n  let attrChanged =\r\n    changeItem === 'abyssDungeonWeekly'\r\n      ? 'weeklyAttributeChanged'\r\n      : 'attributeChanged';\r\n  newArr[indexValue][attrChanged] = true;\r\n  setUserTodoData(newArr);\r\n};\r\n\r\nfunction AbyssDun2({ abyssDun2Item, userTodoData, setUserTodoData }) {\r\n  const [abyssDun2, setAbyssDun2] = useState(abyssDun2Item.abyssDungeon2);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='AbyssDun2'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbyssDun2,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abyssDun2Item,\r\n            'abyssDungeon2'\r\n          )\r\n        }\r\n        checked={abyssDun2}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbyssRaid({ idx, abyssRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abyssRaid, setAbyssRaid] = useState(abyssRaidItem.abyssDungeonWeekly);\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <Grid.Column style={{ display: 'flex' }}>\r\n        <Checkbox\r\n          name='AbyssRaid'\r\n          onChange={(event, data) =>\r\n            changeDatafunction(\r\n              event,\r\n              data,\r\n              setAbyssRaid,\r\n              userTodoData,\r\n              setUserTodoData,\r\n              abyssRaidItem,\r\n              'abyssDungeonWeekly'\r\n            )\r\n          }\r\n          checked={abyssRaid}\r\n        />\r\n      </Grid.Column>\r\n    )\r\n  );\r\n}\r\n\r\nfunction RehearsalAndDejavu({\r\n  rehearsalAndDejavuItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  idx,\r\n}) {\r\n  const options_combo1 = [\r\n    { key: 'kukuseitn', text: '쿠크리허설', value: 'kukuseitn' },\r\n    { key: 'abrel', text: '아브렐데쟈뷰', value: 'abrel' },\r\n  ];\r\n  const [rehearsalAndDejavu, setRehearsalAndDejavu] = useState(\r\n    rehearsalAndDejavuItem.rehearsalAndDejavu\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setRehearsalAndDejavu(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === rehearsalAndDejavuItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].rehearsalAndDejavu = data.value;\r\n    newArr[indexValue].weeklyAttributeChanged = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder='쿠크/아브렐'\r\n            fluid\r\n            multiple\r\n            selection\r\n            options={options_combo1}\r\n            value={rehearsalAndDejavu}\r\n            onChange={(event, data) => changeData(event, data)}\r\n          />\r\n        </Grid.Column>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nfunction ArgosRaid({ argosRaidItem, userTodoData, setUserTodoData }) {\r\n  const [argosRaid, setArgosRaid] = useState(argosRaidItem.argos);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='ArgosRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setArgosRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            argosRaidItem,\r\n            'argos'\r\n          )\r\n        }\r\n        checked={argosRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BaltanRaid({ baltanRaidItem, userTodoData, setUserTodoData }) {\r\n  const [baltanRaid, setBaltanRaid] = useState(baltanRaidItem.baltan);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='BaltanRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBaltanRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            baltanRaidItem,\r\n            'baltan'\r\n          )\r\n        }\r\n        checked={baltanRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BiakissRaid({ biakissRaidItem, userTodoData, setUserTodoData }) {\r\n  const [biakissRaid, setBiakissRaid] = useState(biakissRaidItem.biakiss);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='BiakissRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBiakissRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            biakissRaidItem,\r\n            'biakiss'\r\n          )\r\n        }\r\n        checked={biakissRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction KukseitnRaid({ kukseitnRaidItem, userTodoData, setUserTodoData }) {\r\n  const [kukseitnRaid, setKukseitnRaid] = useState(kukseitnRaidItem.kukuseitn);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='KukseitnRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setKukseitnRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            kukseitnRaidItem,\r\n            'kukuseitn'\r\n          )\r\n        }\r\n        checked={kukseitnRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbrelRaid({ abrelRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abrelRaid, setAbrelRaid] = useState(abrelRaidItem.abrel);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='AbrelRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbrelRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abrelRaidItem,\r\n            'abrel'\r\n          )\r\n        }\r\n        checked={abrelRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport {\r\n  AbyssDun2,\r\n  AbyssRaid,\r\n  RehearsalAndDejavu,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nfunction AddAndChange({ addCharacter, applyChanges }) {\r\n  return (\r\n    <div className=\"headerValueEnd\">\r\n      <Button inverted color=\"olive\" onClick={addCharacter}>\r\n        케릭터 추가\r\n      </Button>\r\n      <Button inverted color=\"red\" onClick={applyChanges}>\r\n        변경사항 저장\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAndChange;\r\n","import React from 'react';\r\nimport { Pagination } from 'semantic-ui-react';\r\n\r\nfunction PaginationComp({ pagination, activePage, pageChange, deviceType }) {\r\n  return (\r\n    <div className='headerValueCenter'>\r\n      <Pagination\r\n        // defaultActivePage={1}\r\n        firstItem={null}\r\n        lastItem={null}\r\n        pointing\r\n        secondary\r\n        totalPages={pagination}\r\n        activePage={activePage}\r\n        onPageChange={(event, data) => pageChange(event, data)}\r\n        size={deviceType === 'mobile' && 'mini'}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginationComp;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction SettingChange({\r\n  viewByCheckBox,\r\n  deviceType,\r\n  changeUserCheckBoxConfigurationFunction,\r\n}) {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  return (\r\n    <div className=\"headerValueStart\">\r\n      <Header size=\"medium\" style={{ color: \"white\", paddingTop: \"5px\" }}>\r\n        {deviceType !== \"mobile\" && today}{\" \"}\r\n        <Label\r\n          as=\"a\"\r\n          basic\r\n          image\r\n          style={{ marginLeft: \"30px\" }}\r\n          onClick={() =>\r\n            changeUserCheckBoxConfigurationFunction(!viewByCheckBox)\r\n          }\r\n        >\r\n          {!viewByCheckBox ? (\r\n            <>\r\n              <Icon name=\"checkmark box\" />\r\n              {deviceType !== \"mobile\" && \"로 보기\"}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Icon name=\"angle double down\" />\r\n              {deviceType !== \"mobile\" && \"로 보기\"}\r\n            </>\r\n          )}\r\n        </Label>\r\n      </Header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingChange;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction AlarmAndNote({\r\n  alarmTrue,\r\n  alarmRestValue,\r\n  userTodoData,\r\n  showNote,\r\n  setShowNote,\r\n}) {\r\n  return (\r\n    <Header\r\n      as=\"h4\"\r\n      style={{\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        padding: \".78571429em 1.5em .78571429em\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={alarmTrue ? \"alarm\" : \"alarm mute\"}\r\n          onClick={() => alarmRestValue(userTodoData)}\r\n        />\r\n        {\"  //  \"}\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={!showNote ? \"sticky note outline\" : \"angle double up\"}\r\n          onClick={() => setShowNote(!showNote)}\r\n        />\r\n      </div>\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default AlarmAndNote;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CharacterToDo.css\";\r\nimport AddCharacter from \"../Utils/AddCharacter\";\r\n\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Container,\r\n  Icon,\r\n  Dimmer,\r\n  Loader,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\nimport RestValue from \"../GridItem/RestValue\";\r\nimport CharacterAvatar from \"./CharacterAvatar\";\r\nimport PerIdNote from \"./PerIdNote\";\r\nimport {\r\n  ChaosDunValue,\r\n  GuardianDunValue,\r\n  EponaValue,\r\n  WeeklyGuardian,\r\n} from \"../GridItem/DungeonAndEpona\";\r\nimport {\r\n  AbyssDun2,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n} from \"../GridItem/AbyssAndRaid\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { backendUrl, axiosConfigAuth } from \"../Utils/ConstVar\";\r\nimport {\r\n  viewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n} from \"../Utils/ViewDataUtil\";\r\nimport AddAndChange from \"../HomeSubComp/AddAndChange\";\r\nimport PaginationComp from \"../HomeSubComp/PaginationComp\";\r\nimport SettingChange from \"../HomeSubComp/SettingChange\";\r\nimport AlarmAndNote from \"../HomeSubComp/AlarmAndNote\";\r\n\r\nfunction CharacterToDoRow({ limit, type }) {\r\n  const todayDate = new Date(Date.now());\r\n\r\n  const [userTodoData, setUserTodoData] = useState([]);\r\n\r\n  const [addCharacterModal, setAddCharacterModal] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const [pagination, setPagination] = useState(0);\r\n\r\n  const [viewByCheckBox, setViewByCheckBox] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const addCharacter = () => {\r\n    setAddCharacterModal(true);\r\n  };\r\n\r\n  const closeAddCharacter = () => {\r\n    setAddCharacterModal(false);\r\n  };\r\n\r\n  const viewPage = async (theActivePage, plusPage = 0) => {\r\n    setLoading(true);\r\n    setUserTodoData([]);\r\n\r\n    const resultData = await viewDataMain(\r\n      limit,\r\n      theActivePage,\r\n      setActivePage,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    if (resultData.success) {\r\n      setUserTodoData(resultData.viewData.data);\r\n      setPagination(resultData.setPage);\r\n    } else {\r\n      toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const applyChanges = async () => {\r\n    setLoading(true);\r\n\r\n    let submitData = userTodoData.filter(\r\n      (item) => item.attributeChanged === true\r\n    );\r\n\r\n    const applyResult = await applyChangesUtil(\r\n      submitData,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    setLoading(false);\r\n    if (applyResult) {\r\n      toastMessage(\"일부 변경사항이 제대로 반영되지 않았습니다\", \"error\");\r\n    }\r\n    viewPage();\r\n  };\r\n\r\n  const pageChange = async (event, data) => {\r\n    setLoading(true);\r\n    setActivePage(data.activePage);\r\n\r\n    // 샙트님 이거 2페이지에 있는 캐릭터 바꾸면 1페이지 같은 자리 있는것두 바뀌는거 같아여\r\n    // 이거 안 해주면 현재 페이지에서 바꾼 ID위치의 정보가 그대로 남아서 사용자에게 모든 페이지의 변경사항이 반영되는 것처럼 보임\r\n    setUserTodoData([]);\r\n\r\n    await axios\r\n      .get(\r\n        `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${data.activePage}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const changeUserCheckBoxConfigurationFunction = async (viewByCheckBox) => {\r\n    const result = await changeUserCheckBoxConfiguration(\r\n      viewByCheckBox,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n    if (result) {\r\n      setViewByCheckBox(viewByCheckBox);\r\n    }\r\n  };\r\n\r\n  // for alarm animation\r\n  const [alarmTrue, setAlarmTrue] = useState(true);\r\n\r\n  // for note per list\r\n  const [showNote, setShowNote] = useState(false);\r\n\r\n  const alarmRestValue = (todoList) => {\r\n    const alarmDataResult = alarmRestValueUtil(todoList, alarmTrue);\r\n    setUserTodoData(alarmDataResult.alarmList);\r\n    setAlarmTrue(alarmDataResult.alarm);\r\n  };\r\n\r\n  // if no user cookie then redirect to login page\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    !loginCookie && history.push(\"/login\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    viewPage();\r\n\r\n    async function callUsersCheckBoxValue() {\r\n      const resultData = await getUserCheckBoxConfiguration(\r\n        cookie.get(\"loadoUserToken\")\r\n      );\r\n      setViewByCheckBox(resultData);\r\n    }\r\n    callUsersCheckBoxValue();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Segment\r\n          className=\"fullPage\"\r\n          style={{ height: \"94vh\", border: \"none\" }}\r\n        >\r\n          <Dimmer active>\r\n            <Loader size=\"big\">로딩중</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      ) : (\r\n        <Segment id=\"gridSegment\">\r\n          <Grid className=\"fullPage\">\r\n            <Container id=\"gridContainer\">\r\n              <Grid.Column width={16}>\r\n                <Segment\r\n                  basic\r\n                  className=\"contentHeader\"\r\n                  style={{ marginBottom: \"0px\" }}\r\n                >\r\n                  <SettingChange\r\n                    viewByCheckBox={viewByCheckBox}\r\n                    setViewByCheckBox={setViewByCheckBox}\r\n                    changeUserCheckBoxConfigurationFunction={\r\n                      changeUserCheckBoxConfigurationFunction\r\n                    }\r\n                  />\r\n                  <PaginationComp\r\n                    pagination={pagination}\r\n                    activePage={activePage}\r\n                    pageChange={pageChange}\r\n                  />\r\n                  <AddAndChange\r\n                    addCharacter={addCharacter}\r\n                    applyChanges={applyChanges}\r\n                  />\r\n                </Segment>\r\n                <Segment\r\n                  basic\r\n                  style={{ backgroundColor: \"dimgray\", marginTop: \"0px\" }}\r\n                >\r\n                  <Grid columns={limit + 1}>\r\n                    <Grid.Row\r\n                      style={{\r\n                        borderBottom: !showNote && \"0.05rem inset ivory\",\r\n                      }}\r\n                    >\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <AlarmAndNote\r\n                          alarmTrue={alarmTrue}\r\n                          alarmRestValue={alarmRestValue}\r\n                          userTodoData={userTodoData}\r\n                          showNote={showNote}\r\n                          setShowNote={setShowNote}\r\n                        />\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <CharacterAvatar\r\n                          itemId={item._id}\r\n                          character={item.character}\r\n                          characterName={item.characterName}\r\n                          attributeChanged={item.attributeChanged}\r\n                          weeklyAttributeChanged={item.weeklyAttributeChanged}\r\n                          axiosConfigAuth={axiosConfigAuth}\r\n                          viewPage={viewPage}\r\n                          alarmCharacter={item.alarmCharacter}\r\n                          limit={limit}\r\n                          dontChange={item.dontChange}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                          activePage={activePage}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    {showNote && (\r\n                      <Grid.Row\r\n                        style={{\r\n                          padding: 0,\r\n                          borderBottom: \"0.05rem inset ivory\",\r\n                          paddingBottom: \"7px\",\r\n                        }}\r\n                      >\r\n                        <Grid.Column />\r\n                        {userTodoData.map((item, idx) => (\r\n                          <PerIdNote\r\n                            item={item}\r\n                            userTodoData={userTodoData}\r\n                            setUserTodoData={setUserTodoData}\r\n                          />\r\n                        ))}\r\n                      </Grid.Row>\r\n                    )}\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <Icon name=\"calendar check outline\" />\r\n                        휴식게이지\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <RestValue\r\n                          item={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/chaosDun.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>카오스던전</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <ChaosDunValue\r\n                          chaosItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                          viewByCheckBox={viewByCheckBox}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/guardianDun.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>가디언토벌</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <GuardianDunValue\r\n                          guardianItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                          viewByCheckBox={viewByCheckBox}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/epona.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>에포나</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <EponaValue\r\n                          eponaItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                          viewByCheckBox={viewByCheckBox}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/guardianDun.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>주간가디언</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <WeeklyGuardian\r\n                          weeklyGuardianItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                          viewByCheckBox={viewByCheckBox}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/abyss2types.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>오레하2종</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <AbyssDun2\r\n                          abyssDun2Item={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    {/* 원정대 주간 컨탠츠는 안 보이게 하기로 결정 */}\r\n                    {/* <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/abyssWeekly.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>어비스레이드</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbyssRaid\r\n                        idx={idx}\r\n                        abyssRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/rehearsal.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>리허설, 데쟈뷰</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <RehearsalAndDejavu\r\n                        rehearsalAndDejavuItem={item}\r\n                        idx={idx}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row> */}\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/argos.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>아르고스</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <ArgosRaid\r\n                          argosRaidItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow baltanRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/baltan.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>발탄</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <BaltanRaid\r\n                          baltanRaidItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/biakiss.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>비아키스</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <BiakissRaid\r\n                          biakissRaidItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/kukuseitn.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>쿠크세이튼</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <KukseitnRaid\r\n                          kukseitnRaidItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"abrelRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/abrel.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>아브렐슈드</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <AbrelRaid\r\n                          abrelRaidItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                  </Grid>\r\n                </Segment>\r\n              </Grid.Column>\r\n            </Container>\r\n          </Grid>\r\n        </Segment>\r\n      )}\r\n\r\n      {addCharacterModal && (\r\n        <AddCharacter\r\n          addCharacterModal={addCharacterModal}\r\n          closeAddCharacter={closeAddCharacter}\r\n          userTodoData={userTodoData}\r\n          axiosConfigAuth={axiosConfigAuth}\r\n          viewPage={viewPage}\r\n          limit={limit}\r\n          activePage={activePage}\r\n        />\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDoRow;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Image,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  List,\r\n  Button,\r\n  Dropdown,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { characterCdn, characterKorean } from \"../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { backendUrl } from \"../Utils/ConstVar\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport \"./AddCharacter.css\";\r\n\r\nfunction AddCharacter({\r\n  addCharacterModal,\r\n  closeAddCharacter,\r\n  userTodoData,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  limit,\r\n}) {\r\n  const [selectCharacterModal, setSelectCharacterModal] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState(\"\");\r\n  const [characterName, setCharacterName] = useState(\"\");\r\n  const [chaosRestValue, setChaosRestValue] = useState(0);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(0);\r\n  const [eponaRestValue, setEponaRestValue] = useState(0);\r\n  const regex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]+$/;\r\n  const regexNumber = /^[0-9]+$/;\r\n\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n  const mobileInputRef = useRef();\r\n\r\n  const closeSelectCharacter = () => setSelectCharacterModal(false);\r\n\r\n  const modalShow = () => {\r\n    setSelectCharacterModal(true);\r\n  };\r\n\r\n  const classSelected = (event) => {\r\n    let selectedClass;\r\n    if (event.target.className.indexOf(\"image\") > 0) {\r\n      selectedClass = event.target.dataset.options;\r\n    } else {\r\n      selectedClass = event.target.className.split(\" \")[2];\r\n    }\r\n    setSelectedCharacter(selectedClass);\r\n    setSelectCharacterModal(false);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeAddCharacterModal = () => {\r\n    setSelectedCharacter(\"\");\r\n    setCharacterName(\"\");\r\n    setChaosRestValue(0);\r\n    setGuardianRestValue(0);\r\n    setEponaRestValue(0);\r\n    closeAddCharacter();\r\n  };\r\n\r\n  const changeInputCharName = (event, data) => {\r\n    const insertedValue = data.value;\r\n    if (insertedValue.length === 0) {\r\n      setCharacterName(\"\");\r\n      return;\r\n    }\r\n    if (!regex.test(insertedValue) || insertedValue.length > 12) return;\r\n    setCharacterName(insertedValue);\r\n  };\r\n\r\n  const changeRestValue = (event, data) => {\r\n    event.preventDefault();\r\n    if (!regexNumber.test(event.target.value)) return;\r\n    if (event.target.id === \"chaosChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = chaosRestValue + (changedValue - chaosRestValue) * 10;\r\n      if (valueOutput < 0) setChaosRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValue(valueOutput);\r\n      else setChaosRestValue(100);\r\n    }\r\n    if (event.target.id === \"guardianChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput =\r\n        guardianRestValue + (changedValue - guardianRestValue) * 10;\r\n      if (valueOutput < 0) setGuardianRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValue(valueOutput);\r\n      else setGuardianRestValue(100);\r\n    }\r\n    if (event.target.id === \"eponaChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = eponaRestValue + (changedValue - eponaRestValue) * 10;\r\n      if (valueOutput < 0) setEponaRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValue(valueOutput);\r\n      else setEponaRestValue(100);\r\n    }\r\n  };\r\n\r\n  const confirmAddCharacter = () => {\r\n    const createdData = {\r\n      // _id: \"5d725a037b292f5f8ceff795\",\r\n      // user: \"5d7a514b5d2c12c7449be042\",\r\n      character: selectedCharacter,\r\n      characterName: characterName,\r\n      date: Date.now(),\r\n      // idx: 2,\r\n      chaosRestValue,\r\n      guardianRestValue,\r\n      eponaRestValue,\r\n      chaosDone: 0,\r\n      guardianDone: 0,\r\n      eponaDone: 0,\r\n      guardianWeeklyDone: 0,\r\n      abyssDungeon2: false,\r\n      // abyssDungeonWeekly: true,\r\n      // rehearsalAndDejavu: [\"kukuseitn\", \"abrel\"],\r\n      argos: false,\r\n      baltan: false,\r\n      biakiss: false,\r\n      kukuseitn: false,\r\n      abrel: false,\r\n      attributeChanged: false,\r\n      weeklyAttributeChanged: false,\r\n      createdAt: Date.now(),\r\n    };\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/homeworks`,\r\n        createdData,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        // setUserTodoData([...userTodoData, response.data.data]);\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          userTodoData.length % limit === 0\r\n        ) {\r\n          viewPage(false, true, response.data.totalLength);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n        closeAddCharacterModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.error, {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        closeAddCharacterModal();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const classElements = document.getElementsByClassName(\r\n      \"characterClassContent\"\r\n    );\r\n    let eventAdd;\r\n    for (let index = 0; index < classElements.length; index++) {\r\n      eventAdd = classElements[index].addEventListener(\"click\", (event) => {\r\n        classSelected(event);\r\n      });\r\n    }\r\n    return () => {\r\n      for (let index = 0; index < classElements.length; index++) {\r\n        classElements[index].removeEventListener(\"click\", eventAdd);\r\n      }\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById(\"characterNameInputId\");\r\n    const enterEvent = element.addEventListener(\"keypress\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        console.log(buttonRef.current);\r\n        if (buttonRef.current) buttonRef.current.click();\r\n      }\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"keypress\", enterEvent);\r\n    };\r\n  }, []);\r\n\r\n  // for mobile\r\n  const [fullList, setFullList] = useState([]);\r\n  const [mobileDropDownList, setMobileDropDownList] = useState([]);\r\n  useEffect(() => {\r\n    const aList = [];\r\n    for (var key in characterCdn) {\r\n      const addItem = {\r\n        key,\r\n        text: characterKorean[key],\r\n        value: key,\r\n        image: { avatar: true, src: characterCdn[key] },\r\n      };\r\n      aList.push(addItem);\r\n    }\r\n    setFullList(aList);\r\n    setMobileDropDownList(aList);\r\n    if (mobileInputRef.current) mobileInputRef.current.focus();\r\n  }, [selectCharacterModal]);\r\n  const filterDropDown = (event, data) => {\r\n    if (!data.value) {\r\n      setMobileDropDownList(fullList);\r\n      return;\r\n    }\r\n\r\n    const filteredList = fullList.filter((item) => {\r\n      return item.text.indexOf(data.value) > -1;\r\n    });\r\n    setMobileDropDownList(filteredList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={addCharacterModal}\r\n        onClose={closeAddCharacterModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: \"dimgray\" }}>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            {!selectedCharacter ? (\r\n              <>\r\n                <span className=\"itemHeaderAttribute1\">클래스:</span>\r\n                <Icon\r\n                  name=\"add square\"\r\n                  size=\"large\"\r\n                  color=\"white\"\r\n                  onClick={modalShow}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"itemHeaderAttribute2\">클래스:</span>\r\n                <span onClick={() => setSelectCharacterModal(true)}>\r\n                  <Image\r\n                    src={characterCdn[selectedCharacter]}\r\n                    size=\"mini\"\r\n                    avatar\r\n                  />\r\n                  {characterKorean[selectedCharacter]}\r\n                </span>\r\n              </>\r\n            )}\r\n          </Header>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            <span style={{ marginRight: \"40px\" }}>케릭명:</span>\r\n            <Input\r\n              transparent\r\n              placeholder=\"케릭터명\"\r\n              style={{ color: \"white\" }}\r\n              className=\"charNameInput\"\r\n              value={characterName}\r\n              ref={inputRef}\r\n              id=\"characterNameInputId\"\r\n              onChange={(event, data) => changeInputCharName(event, data)}\r\n            />\r\n          </Header>\r\n          <Header className=\"itemHeaderRest\" as=\"h4\">\r\n            <List divided selection>\r\n              <List.Item>\r\n                <Label horizontal>카오스던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={chaosRestValue}\r\n                  id=\"chaosChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>가디언던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={guardianRestValue}\r\n                  id=\"guardianChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>에포나</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={eponaRestValue}\r\n                  id=\"eponaChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n            </List>\r\n          </Header>\r\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <Button\r\n              circular\r\n              color=\"google plus\"\r\n              icon=\"cancel\"\r\n              onClick={closeAddCharacterModal}\r\n            />\r\n            <Button\r\n              circular\r\n              color=\"twitter\"\r\n              icon=\"check\"\r\n              onClick={confirmAddCharacter}\r\n            />\r\n            <button\r\n              ref={buttonRef}\r\n              onClick={confirmAddCharacter}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n      {selectCharacterModal && (\r\n        <Modal\r\n          open={selectCharacterModal}\r\n          onClose={closeSelectCharacter}\r\n          // centered={false}\r\n          className=\"classSelectModal\"\r\n        >\r\n          <Modal.Header\r\n            style={{\r\n              backgroundColor: \"#384862\",\r\n              color: \"white\",\r\n              borderBottom: \"1px solid white\",\r\n            }}\r\n          >\r\n            클래스선택\r\n          </Modal.Header>\r\n          <Modal.Content style={{ backgroundColor: \"#384862\", color: \"white\" }}>\r\n            <Segment>\r\n              <Input\r\n                icon=\"search\"\r\n                iconPosition=\"left\"\r\n                className=\"search\"\r\n                ref={mobileInputRef}\r\n                onChange={(event, data) => filterDropDown(event, data)}\r\n              />\r\n              <br />\r\n              <Dropdown open={true}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Header icon=\"tags\" content=\"직업\" />\r\n                  <Dropdown.Menu scrolling>\r\n                    {mobileDropDownList.map((option) => (\r\n                      <Dropdown.Item\r\n                        key={option.value}\r\n                        {...option}\r\n                        onClick={(event, data) => {\r\n                          setSelectedCharacter(data.value);\r\n                          setSelectCharacterModal(false);\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </Dropdown.Menu>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Segment>\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Modal, Image, Button } from \"semantic-ui-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { characterCdn } from \"../../_data/characterDefinition\";\r\n\r\nfunction RestValueMobile({ item, userTodoData, setUserTodoData }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(item._id);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowModal(true);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  // if you use setShowModal directly in Modal onClose, react will throw error\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [chaosRestValue, setChaosRestValue] = useState(item.chaosRestValue);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValue, setEponaRestValue] = useState(item.eponaRestValue);\r\n\r\n  const [chaosRestValueChange, setChaosRestValueChange] = useState(\r\n    item.chaosRestValue\r\n  );\r\n  const [guardianRestValueChange, setGuardianRestValueChange] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValueChange, setEponaRestValueChange] = useState(\r\n    item.eponaRestValue\r\n  );\r\n\r\n  const valueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"chaosChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        chaosRestValueChange + (changedValue - chaosRestValueChange) * 10;\r\n      if (valueOutput < 0) setChaosRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValueChange(valueOutput);\r\n      else setChaosRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"guardianChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        guardianRestValueChange + (changedValue - guardianRestValueChange) * 10;\r\n      if (valueOutput < 0) setGuardianRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValueChange(valueOutput);\r\n      else setGuardianRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"eponaChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        eponaRestValueChange + (changedValue - eponaRestValueChange) * 10;\r\n      if (valueOutput < 0) setEponaRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValueChange(valueOutput);\r\n      else setEponaRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const confirmValue = () => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === item._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"chaosRestValue\"] = chaosRestValueChange;\r\n    newArr[indexValue][\"guardianRestValue\"] = guardianRestValueChange;\r\n    newArr[indexValue][\"eponaRestValue\"] = eponaRestValueChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column id={item._id}>\r\n        카오스: {item.chaosRestValue}\r\n        <br />\r\n        가디언: {item.guardianRestValue}\r\n        <br />\r\n        에포나: {item.eponaRestValue}\r\n      </Grid.Column>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Header>\r\n          <Image src={characterCdn[item.character]} size=\"mini\" avatar />\r\n          {item.characterName}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextField\r\n            id=\"chaosChange\"\r\n            type=\"number\"\r\n            label=\"카오스던전\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={chaosRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"guardianChange\"\r\n            type=\"number\"\r\n            label=\"가디언토벌\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={guardianRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"eponaChange\"\r\n            type=\"number\"\r\n            label=\"에포나\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={eponaRestValueChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={closeModal}>\r\n            취소\r\n          </Button>\r\n          <Button positive onClick={confirmValue}>\r\n            확인\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestValueMobile;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction AlarmAndNoteMobile({\r\n  alarmTrue,\r\n  alarmRestValue,\r\n  userTodoData,\r\n  showNote,\r\n  setShowNote,\r\n}) {\r\n  return (\r\n    <Header\r\n      as=\"h4\"\r\n      style={{\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        padding: \".78571429em 1.5em .78571429em\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={alarmTrue ? \"alarm\" : \"alarm mute\"}\r\n          onClick={() => alarmRestValue(userTodoData)}\r\n        />\r\n        {\"  //  \"}\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={!showNote ? \"sticky note outline\" : \"angle double up\"}\r\n          onClick={() => setShowNote(!showNote)}\r\n        />\r\n      </div>\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default AlarmAndNoteMobile;\r\n","import { Image } from 'semantic-ui-react';\r\n\r\nconst showContentPopupValue = (content) => {\r\n  const justContent = (\r\n    <div\r\n      style={{\r\n        backgroundColor: 'rgb(56, 72, 98)',\r\n        color: 'white',\r\n        padding: '5px',\r\n        fontSize: '10px',\r\n      }}\r\n    >\r\n      {content}\r\n    </div>\r\n  );\r\n\r\n  const contentKeyKorToEng = {\r\n    휴식게이지: 'calendar',\r\n    카오스던전: 'chaosDun',\r\n    가디언던전: 'guardianDun',\r\n    에포나: 'epona',\r\n    주간가디언: 'guardianDun',\r\n    어비스던전: 'abyss2types',\r\n    아르고스: 'argos',\r\n    발탄: 'baltan',\r\n    비아키스: 'biakiss',\r\n    쿠크세이튼: 'kukuseitn',\r\n    아브렐슈드: 'abrel',\r\n  };\r\n\r\n  const imageContent = (\r\n    <div>\r\n      <Image\r\n        src={`./images/loa_icons/${contentKeyKorToEng[content]}.png`}\r\n        avatar\r\n        className='contentImage'\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return [imageContent, justContent];\r\n};\r\n\r\nexport { showContentPopupValue };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CharacterToDo.css\";\r\nimport AddCharacterMobile from \"../Utils/AddCharacterMobile\";\r\n\r\nimport { Segment, Grid, Icon, Dimmer, Loader, Popup } from \"semantic-ui-react\";\r\nimport RestValueMobile from \"../GridItem/RestValueMobile\";\r\nimport CharacterAvatar from \"./CharacterAvatar\";\r\nimport {\r\n  ChaosDunValue,\r\n  GuardianDunValue,\r\n  EponaValue,\r\n  WeeklyGuardian,\r\n} from \"../GridItem/DungeonAndEpona\";\r\nimport {\r\n  AbyssDun2,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n} from \"../GridItem/AbyssAndRaid\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { backendUrl, axiosConfigAuth } from \"../Utils/ConstVar\";\r\nimport {\r\n  viewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n} from \"../Utils/ViewDataUtil\";\r\nimport AddAndChange from \"../HomeSubComp/AddAndChange\";\r\nimport PaginationComp from \"../HomeSubComp/PaginationComp\";\r\nimport SettingChange from \"../HomeSubComp/SettingChange\";\r\nimport AlarmAndNoteMobile from \"../HomeSubComp/AlarmAndNoteMobile\";\r\nimport { showContentPopupValue } from \"../Utils/ContentDefinition\";\r\nimport PerIdNote from \"./PerIdNote\";\r\n\r\nfunction CharacterToDoRowMobile({ limit, type }) {\r\n  const [userTodoData, setUserTodoData] = useState([]);\r\n\r\n  const [addCharacterModal, setAddCharacterModal] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const [pagination, setPagination] = useState(0);\r\n\r\n  const [viewByCheckBox, setViewByCheckBox] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const addCharacter = () => {\r\n    setAddCharacterModal(true);\r\n  };\r\n\r\n  const closeAddCharacter = () => {\r\n    setAddCharacterModal(false);\r\n  };\r\n\r\n  const viewPage = async (minusOne = false, plusOne = false, plusPage = 0) => {\r\n    setLoading(true);\r\n    setUserTodoData([]);\r\n\r\n    const resultData = await viewDataMain(\r\n      minusOne,\r\n      plusOne,\r\n      plusPage,\r\n      limit,\r\n      activePage,\r\n      setActivePage,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    if (resultData.success) {\r\n      setUserTodoData(resultData.viewData.data);\r\n      setPagination(resultData.setPage);\r\n    } else {\r\n      toastMessage(\"데이터를 불러오지 못했습니다\", \"error\", \"mobile\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const applyChanges = async () => {\r\n    setLoading(true);\r\n\r\n    let submitData = userTodoData.filter(\r\n      (item) => item.attributeChanged === true\r\n    );\r\n\r\n    const applyResult = await applyChangesUtil(\r\n      submitData,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    setLoading(false);\r\n    if (applyResult) {\r\n      toastMessage(\"일부 변경사항이 제대로 반영되지 않았습니다\", \"error\");\r\n    }\r\n    viewPage();\r\n  };\r\n\r\n  const pageChange = async (event, data) => {\r\n    setLoading(true);\r\n    setActivePage(data.activePage);\r\n\r\n    // 샙트님 이거 2페이지에 있는 캐릭터 바꾸면 1페이지 같은 자리 있는것두 바뀌는거 같아여\r\n    // 이거 안 해주면 현재 페이지에서 바꾼 ID위치의 정보가 그대로 남아서 사용자에게 모든 페이지의 변경사항이 반영되는 것처럼 보임\r\n    setUserTodoData([]);\r\n\r\n    await axios\r\n      .get(\r\n        `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${data.activePage}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const changeUserCheckBoxConfigurationFunction = async (viewByCheckBox) => {\r\n    const result = await changeUserCheckBoxConfiguration(\r\n      viewByCheckBox,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n    if (result) {\r\n      setViewByCheckBox(viewByCheckBox);\r\n    }\r\n  };\r\n\r\n  // for alarm animation\r\n  const [alarmTrue, setAlarmTrue] = useState(true);\r\n\r\n  // for note per list\r\n  const [showNote, setShowNote] = useState(false);\r\n\r\n  const alarmRestValue = (todoList) => {\r\n    const alarmDataResult = alarmRestValueUtil(todoList, alarmTrue);\r\n    setUserTodoData(alarmDataResult.alarmList);\r\n    setAlarmTrue(alarmDataResult.alarm);\r\n  };\r\n\r\n  // if no user cookie then redirect to login page\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    !loginCookie && history.push(\"/login\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    viewPage();\r\n\r\n    async function callUsersCheckBoxValue() {\r\n      const resultData = await getUserCheckBoxConfiguration(\r\n        cookie.get(\"loadoUserToken\")\r\n      );\r\n      setViewByCheckBox(resultData);\r\n    }\r\n    callUsersCheckBoxValue();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Segment\r\n          className=\"fullPage\"\r\n          style={{ height: \"94vh\", border: \"none\" }}\r\n        >\r\n          <Dimmer active>\r\n            <Loader size=\"big\">로딩중</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      ) : (\r\n        <Segment id=\"mobileMainPageSegment\">\r\n          <PaginationComp\r\n            pagination={pagination}\r\n            activePage={activePage}\r\n            pageChange={pageChange}\r\n            deviceType=\"mobile\"\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              marginTop: \"20px\",\r\n              justifyContent: \"space-between\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <SettingChange\r\n              viewByCheckBox={viewByCheckBox}\r\n              changeUserCheckBoxConfigurationFunction={\r\n                changeUserCheckBoxConfigurationFunction\r\n              }\r\n              deviceType=\"mobile\"\r\n            />\r\n            <AddAndChange\r\n              addCharacter={addCharacter}\r\n              applyChanges={applyChanges}\r\n              style={{ fontSize: \"5px\" }}\r\n            />\r\n          </div>\r\n          <Segment basic id=\"mobileSegmentGrid\">\r\n            <Grid columns={limit + 1}>\r\n              <Grid.Row\r\n                style={{\r\n                  borderBottom: !showNote && \"0.05rem inset ivory\",\r\n                }}\r\n              >\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <AlarmAndNoteMobile\r\n                    alarmTrue={alarmTrue}\r\n                    alarmRestValue={alarmRestValue}\r\n                    userTodoData={userTodoData}\r\n                    showNote={showNote}\r\n                    setShowNote={setShowNote}\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <CharacterAvatar\r\n                    itemId={item._id}\r\n                    character={item.character}\r\n                    characterName={item.characterName}\r\n                    attributeChanged={item.attributeChanged}\r\n                    weeklyAttributeChanged={item.weeklyAttributeChanged}\r\n                    axiosConfigAuth={axiosConfigAuth}\r\n                    viewPage={viewPage}\r\n                    alarmCharacter={item.alarmCharacter}\r\n                    limit={limit}\r\n                    dontChange={item.dontChange}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    deviceType=\"mobile\"\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              {showNote && (\r\n                <Grid.Row\r\n                  style={{\r\n                    padding: 0,\r\n                    borderBottom: \"0.05rem inset ivory\",\r\n                    paddingBottom: \"7px\",\r\n                  }}\r\n                >\r\n                  <Grid.Column />\r\n                  {userTodoData.map((item, idx) => (\r\n                    <PerIdNote\r\n                      item={item}\r\n                      userTodoData={userTodoData}\r\n                      setUserTodoData={setUserTodoData}\r\n                      deviceType=\"mobile\"\r\n                    />\r\n                  ))}\r\n                </Grid.Row>\r\n              )}\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={\r\n                      <Icon\r\n                        name=\"calendar check outline\"\r\n                        style={{ fontSize: \"21px\" }}\r\n                      />\r\n                    }\r\n                    content={showContentPopupValue(\"휴식게이지\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <RestValueMobile\r\n                    item={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"카오스던전\")[0]}\r\n                    content={showContentPopupValue(\"카오스던전\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <ChaosDunValue\r\n                    chaosItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"가디언던전\")[0]}\r\n                    content={showContentPopupValue(\"가디언던전\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <GuardianDunValue\r\n                    guardianItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"에포나\")[0]}\r\n                    content={showContentPopupValue(\"에포나\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <EponaValue\r\n                    eponaItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"주간가디언\")[0]}\r\n                    content={showContentPopupValue(\"주간가디언\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <WeeklyGuardian\r\n                    weeklyGuardianItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"어비스던전\")[0]}\r\n                    content={showContentPopupValue(\"어비스던전\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <AbyssDun2\r\n                    abyssDun2Item={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"아르고스\")[0]}\r\n                    content={showContentPopupValue(\"아르고스\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <ArgosRaid\r\n                    argosRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow baltanRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"발탄\")[0]}\r\n                    content={showContentPopupValue(\"발탄\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <BaltanRaid\r\n                    baltanRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"비아키스\")[0]}\r\n                    content={showContentPopupValue(\"비아키스\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <BiakissRaid\r\n                    biakissRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"쿠크세이튼\")[0]}\r\n                    content={showContentPopupValue(\"쿠크세이튼\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <KukseitnRaid\r\n                    kukseitnRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"abrelRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"아브렐슈드\")[0]}\r\n                    content={showContentPopupValue(\"아브렐슈드\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <AbrelRaid\r\n                    abrelRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        </Segment>\r\n      )}\r\n\r\n      {addCharacterModal && (\r\n        <AddCharacterMobile\r\n          addCharacterModal={addCharacterModal}\r\n          closeAddCharacter={closeAddCharacter}\r\n          userTodoData={userTodoData}\r\n          axiosConfigAuth={axiosConfigAuth}\r\n          viewPage={viewPage}\r\n          limit={limit}\r\n        />\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDoRowMobile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { backendUrl, axiosConfig } from '../Utils/ConstVar';\r\n\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState('로그인이 필요합니다');\r\n  const [user, setUser] = useState({\r\n    id: cookie.get('loginId') ? cookie.get('loginId') : '',\r\n    password: '',\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/login`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set('loadoUserToken', token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set('loadoUserCookie', JSON.stringify(userCookie));\r\n          history.push('/userhomework');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.request);\r\n        // console.log(err.response);\r\n        // console.log(err.message);\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get('loadoUserToken');\r\n    loginCookie && history.push('/userhomework');\r\n  }, []);\r\n\r\n  return (\r\n    <div id='divLoginPage'>\r\n      <Grid\r\n        textAlign='center'\r\n        style={{ height: '100vh', margin: '0px' }}\r\n        verticalAlign='middle'\r\n        id='loginPage'\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as='h2' textAlign='center' style={{ color: '#394855' }}>\r\n            <Image src='https://react.semantic-ui.com/logo.png' />{' '}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size='large' onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon='user'\r\n                iconPosition='left'\r\n                placeholder='ID'\r\n                name='id'\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='lock'\r\n                iconPosition='left'\r\n                placeholder='비밀번호'\r\n                type='password'\r\n                name='password'\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <Button color='teal' fluid size='large' type='submit'>\r\n                로그인\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            계정이 없으신가요?{' '}\r\n            <a href='#' onClick={() => history.push('/register')}>\r\n              가입\r\n            </a>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <div class='custom-shape-divider-bottom-1634800167'>\r\n        <svg\r\n          data-name='Layer 1'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox='0 0 1200 120'\r\n          preserveAspectRatio='none'\r\n        >\r\n          <path\r\n            d='M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z'\r\n            opacity='.25'\r\n            class='shape-fill'\r\n          ></path>\r\n          <path\r\n            d='M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z'\r\n            opacity='.5'\r\n            class='shape-fill'\r\n          ></path>\r\n          <path\r\n            d='M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z'\r\n            class='shape-fill'\r\n          ></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { backendUrl, axiosConfig } from '../Utils/ConstVar';\r\n\r\nimport './Login.css';\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState('회원가입');\r\n  const [user, setUser] = useState({\r\n    id: '',\r\n    password: '',\r\n    name: '',\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/register`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n          name: user.name,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set('loadoUserToken', token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set('loadoUserCookie', JSON.stringify(userCookie));\r\n          history.push('/userhomework');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id='divLoginPage'>\r\n      <Grid\r\n        textAlign='center'\r\n        style={{ height: '100vh', margin: '0px' }}\r\n        verticalAlign='middle'\r\n        id='loginPage'\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as='h2' textAlign='center' style={{ color: '#394855' }}>\r\n            <Image src='https://react.semantic-ui.com/logo.png' />{' '}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size='large' onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon='user'\r\n                iconPosition='left'\r\n                placeholder='ID'\r\n                name='id'\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='lock'\r\n                iconPosition='left'\r\n                placeholder='비밀번호'\r\n                type='password'\r\n                name='password'\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='quote left'\r\n                iconPosition='left'\r\n                placeholder='이름'\r\n                name='name'\r\n                onChange={handleChange}\r\n                value={user.name}\r\n              />\r\n\r\n              <Button color='teal' fluid size='large' type='submit'>\r\n                가입\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            비밀번호를 잊어버리시면 복구가 불가능합니다\r\n            <br />\r\n            [비밀번호는 암호화되어 저장됩니다]\r\n            <br />\r\n            [예시: .....APvs6TgQOG5d8byxYdLJOD0O6Am.....]\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <div class='custom-shape-divider-bottom-1634800167'>\r\n        <svg\r\n          data-name='Layer 1'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox='0 0 1200 120'\r\n          preserveAspectRatio='none'\r\n        >\r\n          <path\r\n            d='M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z'\r\n            opacity='.25'\r\n            class='shape-fill'\r\n          ></path>\r\n          <path\r\n            d='M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z'\r\n            opacity='.5'\r\n            class='shape-fill'\r\n          ></path>\r\n          <path\r\n            d='M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z'\r\n            class='shape-fill'\r\n          ></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../Home/CharacterToDo.css\";\r\nimport { Segment, Grid, Header, Icon } from \"semantic-ui-react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport cookie from \"js-cookie\";\r\nimport { getLoadoLogs } from \"../Utils/ViewDataUtil\";\r\n\r\nimport \"./Dashboard.css\";\r\n\r\nimport { characterKorean } from \"../../_data/characterDefinition\";\r\n\r\nfunction Dashboard() {\r\n  const [lineLabels, setlineLabels] = useState();\r\n  const [lineData, setlineData] = useState();\r\n  const [barLabels, setBarLabels] = useState();\r\n  const [barData, setBarData] = useState();\r\n\r\n  const [userCount, setUserCount] = useState();\r\n  const [userLoadoCount, setUserLoadoCount] = useState();\r\n  const [loadologs, setLoadoLogs] = useState();\r\n\r\n  useEffect(() => {\r\n    async function getLoadoLogsFunction() {\r\n      let resultData = await getLoadoLogs(cookie.get(\"loadoUserToken\"));\r\n      if (!resultData) return;\r\n      resultData.log.sort(function (a, b) {\r\n        const keyA = new Date(a.dateValue);\r\n        const keyB = new Date(b.dateValue);\r\n        // Compare the 2 dates\r\n        if (keyA < keyB) return -1;\r\n        if (keyA > keyB) return 1;\r\n        return 0;\r\n      });\r\n      const labels = [];\r\n      const data = [];\r\n      resultData.log.map((item) => {\r\n        labels.push(item.dateValue);\r\n        data.push(item.count);\r\n      });\r\n      setlineLabels(labels);\r\n      setlineData(data);\r\n\r\n      setUserCount(resultData.userCount);\r\n      setUserLoadoCount(resultData.hwCount);\r\n      setLoadoLogs(resultData.logsCount);\r\n\r\n      const barLabels = [];\r\n      const barData = [];\r\n\r\n      console.log(resultData);\r\n\r\n      resultData.jobGroupingResult.map((item, idx) => {\r\n        // if (idx > 15) return;\r\n        barLabels.push(characterKorean[item._id]);\r\n        barData.push(item.characterCount);\r\n      });\r\n\r\n      setBarLabels(barLabels);\r\n      setBarData(barData);\r\n    }\r\n    getLoadoLogsFunction();\r\n  }, []);\r\n\r\n  const chartjsLineData = {\r\n    labels: lineLabels,\r\n    datasets: [\r\n      {\r\n        label: \"\",\r\n        data: lineData,\r\n        fill: false,\r\n        backgroundColor: \"rgb(255, 99, 132)\",\r\n        borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartjsLineOptions = {\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"이용 현황\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartjsBarData = {\r\n    labels: barLabels,\r\n    datasets: [\r\n      {\r\n        label: \"\",\r\n        data: barData,\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartjsBarOptions = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"직업 현황\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [12, 19, 3, 5, 2, 3],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Segment className=\"fullPage\" id=\"dashboardPage\" style={{ border: \"none\" }}>\r\n      <Grid columns={2}>\r\n        <Grid.Row>\r\n          <Grid.Column style={{ margin: \"auto\", textAlign: \"center\" }}>\r\n            <Header as=\"h2\" className=\"dashboardHeader\">\r\n              <Icon name=\"users\" />\r\n              등록된 사용자 수 : {userCount} 명\r\n            </Header>\r\n            <Header as=\"h2\" className=\"dashboardHeader\">\r\n              <Icon name=\"book\" />\r\n              등록된 숙제 수 : {userLoadoCount} 개\r\n            </Header>\r\n            <Header as=\"h2\" className=\"dashboardHeader\">\r\n              <Icon name=\"pencil square\" />\r\n              일주일 로그 수 : {loadologs} 개\r\n            </Header>\r\n          </Grid.Column>\r\n          <Grid.Column className=\"lineGraphAreaColumn\">\r\n            <div id=\"lineGraphArea\">\r\n              <Line\r\n                data={chartjsLineData}\r\n                options={chartjsLineOptions}\r\n                className=\"lineGraph\"\r\n              />\r\n            </div>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <br />\r\n      <div\r\n        style={{\r\n          height: \"500px\",\r\n          width: \"60%\",\r\n          backgroundColor: \"white\",\r\n          margin: \"0 auto\",\r\n        }}\r\n      >\r\n        <Bar\r\n          data={chartjsBarData}\r\n          options={chartjsBarOptions}\r\n          className=\"lineGraph\"\r\n        />\r\n      </div>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport { Grid, Segment } from 'semantic-ui-react';\r\nimport NavHeader from './Components/Nav/NavHeader';\r\nimport NavHeaderMobile from './Components/Nav/NavHeaderMobile';\r\nimport CharacterToDo from './Components/Home/CharacterToDo';\r\nimport CharacterToDoRow from './Components/Home/CharacterToDoRow';\r\nimport CharacterToDoRowMobile from './Components/Home/CharacterToDoRowMobile';\r\nimport Login from './Components/Home/Login';\r\nimport Register from './Components/Home/Register';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { createMedia } from '@artsy/fresnel';\r\nimport Dashboard from './Components/Dashboard/Dashboard';\r\n\r\nconst AppMedia = createMedia({\r\n  breakpoints: { zero: 0, mobile: 549, tablet: 850, computer: 1080 },\r\n});\r\n\r\nconst mediaStyles = AppMedia.createMediaStyle();\r\nconst { Media, MediaContextProvider } = AppMedia;\r\n\r\nfunction App() {\r\n  return (\r\n    <MediaContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/userhomework'>\r\n            <>\r\n              <Media between={['zero', 'tablet']}>\r\n                <Segment\r\n                  style={{\r\n                    backgroundColor: '#384862',\r\n                    padding: '0px',\r\n                    border: 'none',\r\n                    height: '100%',\r\n                    width: '100%',\r\n                  }}\r\n                >\r\n                  <NavHeaderMobile />\r\n                  <CharacterToDoRowMobile\r\n                    limit={3}\r\n                    type='mobile'\r\n                    style={{ padding: '0px' }}\r\n                  />\r\n                </Segment>\r\n              </Media>\r\n              <Media between={['tablet', 'computer']}>\r\n                <Segment id='biggerThanTablet'>\r\n                  <NavHeader />\r\n                  <CharacterToDoRow limit={6} type='mobile' />\r\n                </Segment>\r\n              </Media>\r\n              <Media greaterThanOrEqual='computer'>\r\n                <Segment id='biggerThanTablet'>\r\n                  <NavHeader />\r\n                  <CharacterToDoRow limit={8} type='computer' />\r\n                </Segment>\r\n              </Media>\r\n              {/* <Grid stackable style={{ border: \"none\" }}>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    background: \"lightCoral\",\r\n                  }}\r\n                >\r\n                  <Grid.Column style={{ border: \"none\" }}>\r\n                    <NavHeader />\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    paddingTop: \"0rem\",\r\n                    height: \"94vh\",\r\n                    backgroundColor: \"#384862\",\r\n                  }}\r\n                >\r\n                  <Grid.Column>\r\n                    <Media between={[\"zero\", \"tablet\"]}>\r\n                      <CharacterToDoRowMobile limit={4} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media between={[\"tablet\", \"computer\"]}>\r\n                      <CharacterToDoRow limit={6} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media greaterThanOrEqual=\"computer\">\r\n                      <CharacterToDoRow limit={8} type=\"computer\" />\r\n                    </Media>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid> */}\r\n            </>\r\n          </Route>\r\n          <Route path='/dashboard'>\r\n            <NavHeader />\r\n            <Dashboard />\r\n          </Route>\r\n          <Route path='/login'>\r\n            <Login />\r\n          </Route>\r\n          <Route path='/register'>\r\n            <Register />\r\n          </Route>\r\n          <Route path='/' exact>\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </MediaContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}