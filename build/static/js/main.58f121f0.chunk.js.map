{"version":3,"sources":["Components/Utils/ConstVar.js","Components/Nav/HistoryModal.js","_data/characterDefinition.js","Components/Utils/ViewDataUtil.js","Components/HomeSubComp/ChangePosition.js","Components/Nav/NavHeader.js","Components/Nav/NavHeaderMobile.js","Components/Home/CharacterToDo.js","Components/Utils/AddCharacter.js","Components/GridItem/RestValue.js","Components/Home/CharacterAvatar.js","Components/Home/PerIdNote.js","Components/GridItem/DungeonAndEpona.js","Components/GridItem/AbyssAndRaid.js","Components/HomeSubComp/AddAndChange.js","Components/HomeSubComp/PaginationComp.js","Components/HomeSubComp/SettingChange.js","Components/HomeSubComp/AlarmAndNote.js","Components/Home/CharacterToDoRow.js","Components/Utils/AddCharacterMobile.js","Components/GridItem/RestValueMobile.js","Components/HomeSubComp/AlarmAndNoteMobile.js","Components/Utils/ContentDefinition.js","Components/Home/CharacterToDoRowMobile.js","Components/Home/Login.js","Components/Home/Register.js","App.js","index.js"],"names":["backendUrl","process","axiosConfig","headers","axiosConfigAuth","userCookie","Authorization","HistoryModal","showUpdateHistoryModal","setShowUpdateHistoryModal","setNoticeAlert","changeNotificationToFalse","useEffect","Modal","open","onClose","closeOnDimmerClick","Header","className","style","backgroundColor","color","borderBottom","Content","Grid","Row","padding","Column","width","characterCdn","berserker","warlord","destroyer","holyknight","battlemaster","infighter","soulmaster","lancemaster","striker","devilhunter","blaster","hawkeye","scouter","gunslinger","summoner","arcana","bard","sorceress","blade","demonic","reaper","characterKorean","viewDataMain","minusOne","plusOne","plusPage","limit","activePage","setActivePage","a","searchString","Math","floor","axios","get","then","response","totalLength","data","setPage","viewData","success","catch","err","axiosResult","allViewDataMain","dataLength","applyChangesUtil","submitData","errorOccured","index","length","put","_id","getUserCheckBoxConfiguration","viewByCheckBox","result","changeUserCheckBoxConfiguration","alarmRestValueUtil","todoList","alarmTrue","alarmList","alarm","map","item","idx","chaosRestValue","guardianRestValue","eponaRestValue","alarmCharacter","toastMessage","msg","type","deviceType","alert","toast","error","position","POSITION","TOP_LEFT","info","BOTTOM_LEFT","ChangePosition","dragStartIndex","changeRowModal","setChangeRowModal","useState","userTodoData","setUserTodoData","labelText","setLabelText","changedIndexArr","setChangedIndexArr","saveChanges","distinctIndexData","Array","from","Set","sendData","filter","includes","cookie","window","location","reload","resultData","console","log","callData","dragStart","this","getAttribute","dragOver","e","preventDefault","dragDrop","dragEndIndex","fromIndex","toIndex","itemFrom","itemTo","itemFromIdx","itemToIdx","push","swapItems","classList","remove","dragEnter","add","dragLeave","draggables","document","querySelectorAll","forEach","draggable","addEventListener","removeEventListener","size","Label","as","ribbon","marginLeft","onClick","columns","sort","b","marginRight","Image","avatar","src","character","characterName","NavHeader","userIdString","userValue","JSON","parse","history","useHistory","setOpen","noticeAlert","restValueBatch","post","newNotice","checkNewlyUpdate","Menu","height","borderRadius","marginBottom","borderless","Item","id","fontStyle","Icon","name","Popup","on","onOpen","trigger","userName","Button","content","Divider","userId","set","NavHeaderMobile","display","cursor","CharacterToDo","AddCharacter","addCharacterModal","closeAddCharacter","viewPage","selectCharacterModal","setSelectCharacterModal","selectedCharacter","setSelectedCharacter","setCharacterName","setChaosRestValue","setGuardianRestValue","setEponaRestValue","regex","regexNumber","inputRef","useRef","buttonRef","classSelected","event","selectedClass","target","indexOf","dataset","options","split","current","focus","closeAddCharacterModal","changeRestValue","test","value","changedValue","valueOutput","confirmAddCharacter","createdData","date","Date","now","chaosDone","guardianDone","eponaDone","guardianWeeklyDone","abyssDungeon2","argos","baltan","biakiss","kukuseitn","abrel","attributeChanged","weeklyAttributeChanged","createdAt","eventAdd","classElements","getElementsByClassName","element","getElementById","enterEvent","key","click","closeIcon","Input","transparent","placeholder","ref","onChange","insertedValue","changeInputCharName","List","divided","selection","horizontal","justifyContent","circular","icon","marginTop","autoClose","RestValue","showModal","setShowModal","rightclickEvent","closeModal","chaosRestValueChange","setChaosRestValueChange","guardianRestValueChange","setGuardianRestValueChange","eponaRestValueChange","setEponaRestValueChange","valueChange","TextField","label","Actions","negative","positive","indexValue","findIndex","anItem","newArr","CharacterAvatar","itemId","dontChange","deleteIcon","showDeleteIcon","showDontChange","setShowDontChange","dontChangeState","setDontChangeState","delete","message","dontChangeCharacter","PerIdNote","showTextArea","setShowTextArea","note","textValue","setTextValue","changeText","theText","TextArea","inverted","changeArr","arr","match","dataValue","ChaosDunValue","chaosItem","text","chaosData","setChaosData","chaosDataChecked","setChaosDataChecked","changeData","paddingTop","Checkbox","checked","changeDataChecked","Dropdown","GuardianDunValue","guardianItem","guardianData","setGuardianData","guardianDataChecked","setGuardianDataChecked","EponaValue","eponaItem","eponaData","setEponaData","eponaDataChecked","setEponaDataChecked","WeeklyGuardian","weeklyGuardianItem","weeklyGuardianData","setWeeklyGuardianData","weeklyGuardianDataChecked","setWeeklyGuardianDataChecked","changeDatafunction","setItem","findIndexItem","changeItem","attrChanged","AbyssDun2","abyssDun2Item","abyssDun2","setAbyssDun2","ArgosRaid","argosRaidItem","argosRaid","setArgosRaid","BaltanRaid","baltanRaidItem","baltanRaid","setBaltanRaid","BiakissRaid","biakissRaidItem","biakissRaid","setBiakissRaid","KukseitnRaid","kukseitnRaidItem","kukseitnRaid","setKukseitnRaid","AbrelRaid","abrelRaidItem","abrelRaid","setAbrelRaid","AddAndChange","addCharacter","applyChanges","PaginationComp","pagination","pageChange","Pagination","firstItem","lastItem","pointing","secondary","totalPages","onPageChange","SettingChange","changeUserCheckBoxConfigurationFunction","todayDate","today","getFullYear","getMonth","getDate","basic","image","AlarmAndNote","alarmRestValue","showNote","setShowNote","CharacterToDoRow","setAddCharacterModal","loading","setLoading","setPagination","setViewByCheckBox","applyResult","setAlarmTrue","callUsersCheckBoxValue","Segment","border","Dimmer","active","Loader","Container","alarmDataResult","paddingBottom","mobileInputRef","fullList","setFullList","mobileDropDownList","setMobileDropDownList","aList","addItem","iconPosition","filteredList","filterDropDown","scrolling","option","RestValueMobile","AlarmAndNoteMobile","showContentPopupValue","justContent","fontSize","휴식게이지","카오스던전","가디언던전","에포나","주간가디언","어비스던전","아르고스","발탄","비아키스","쿠크세이튼","아브렐슈드","CharacterToDoRowMobile","pinned","AddCharacterMobile","Login","loginMessage","setLoginMessage","password","user","setUser","handleChange","prev","textAlign","verticalAlign","maxWidth","Form","onSubmit","token","stringify","stacked","fluid","Message","href","Register","AppMedia","createMedia","breakpoints","zero","mobile","tablet","computer","Media","createMediaStyle","MediaContextProvider","App","path","between","greaterThanOrEqual","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.58f121f0.chunk.js","sourcesContent":["const backendUrl = process.env.REACT_APP_BACKENDURL;\r\n\r\nconst axiosConfig = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst axiosConfigAuth = (userCookie) => {\r\n  const bearer = `Bearer ${userCookie}`;\r\n  return {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: bearer,\r\n    },\r\n  };\r\n};\r\n\r\nexport { backendUrl, axiosConfig, axiosConfigAuth };\r\n","import React, { useEffect } from \"react\";\r\nimport { Modal, Grid } from \"semantic-ui-react\";\r\nimport \"./HistoryModal.css\";\r\n\r\nfunction HistoryModal({\r\n  showUpdateHistoryModal,\r\n  setShowUpdateHistoryModal,\r\n  setNoticeAlert,\r\n  changeNotificationToFalse,\r\n}) {\r\n  useEffect(() => {\r\n    changeNotificationToFalse();\r\n    setNoticeAlert(false);\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      open={showUpdateHistoryModal}\r\n      onClose={() => setShowUpdateHistoryModal(false)}\r\n      closeOnDimmerClick\r\n    >\r\n      <Modal.Header\r\n        className=\"modalHeader\"\r\n        style={{\r\n          backgroundColor: \"#384862\",\r\n          color: \"white\",\r\n          borderBottom: \"1px solid white\",\r\n        }}\r\n      >\r\n        작업/업데이트 내역\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Grid>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-06\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              직업명 오타 수정 : 아르라카 {\"->\"} 아르카나\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-07\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>가입 시 암호화 관련 설명 추가</Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-08\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              케릭터명 입력 후 엔터 이벤트를 등록하기 위해 [케릭터 추가] 팝업\r\n              등장 내부로직 수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-09\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              (버튼이 안 보이는 분들을 위해) 케릭터 추가 기능에서 클래스 선택 및\r\n              케릭터명 입력 후 엔터 시 케릭터가 추가되는 기능 추가\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-10\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              유지보수 및 코드 분석을 위해 내부 코드 리팩토링 진행 및 간결하게\r\n              수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-12\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 9월10일 업데이트 후 첫 로그인 시 화면에 아무것도 안 뜨던 현상\r\n              수정, 컨탠츠에 마우스 올리면 행의 색갈이 바뀌도록 수정\r\n              <br />\r\n              2. 카던, 가디언, 에포나에 숫자로 선택할 필요없이 체크로 선택하여\r\n              저장하기 가능토록 수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-16\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 케릭터 순서 변경 기능 추가 (우측 상단 이름 클릭 후 순서변경)\r\n              <br />\r\n              2. 깜빡거림으로 사용자가 업데이트 내용을 확인할 수 있도록 추가 및\r\n              작업 내역 확인 후 깜빡거림 멈추는 기능 추가\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-21\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              어플리케이션 업그레이드 비용 지불 및 다음날부터 내부에서 06시\r\n              휴식게이지 반영되도록 수정 (잘 안될 수도 있음), 안되면\r\n              개인휴식게이지반영 적용 요청\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-22\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>작업/업데이트 내역 화면 수정</Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-26\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>모바일웹 기능 개발</Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-27\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              아무나 06시 초기화를 할 수 없도록 암호화 진행. 즉, 소스 공개 가능\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-28\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. <span style={{ color: \"red\" }}>[버그픽스]</span> 순서변경에서\r\n              버그가 발생하던 부분 해결. 사용자가 1회 케릭터 추가 또는 삭제 한번\r\n              해줘야 모든게 제대로 작동\r\n              <br />\r\n              2. 아이폰으로 접속 시 강제 줌인 되는 현상 수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-30\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 모바일 노트 기록 기능 추가\r\n              <br />\r\n              2. 숫자체크 또는 체크박스 사용자설정 유지하는 기능 개발완료\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default HistoryModal;\r\n","const characterCdn = {\r\n  berserker:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/berserker_s.png',\r\n  warlord:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/warlord_s.png',\r\n  destroyer:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/destroyer_s.png',\r\n  holyknight:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/holyknight_s.png',\r\n  battlemaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/battlemaster_s.png',\r\n  infighter:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/infighter_s.png',\r\n  soulmaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/soulmaster_s.png',\r\n  lancemaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/lancemaster_s.png',\r\n  striker:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/striker_s.png',\r\n  devilhunter:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/devilhunter_s.png',\r\n  blaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blaster_s.png',\r\n  hawkeye:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/hawkeye_s.png',\r\n  scouter:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/scouter_s.png',\r\n  gunslinger:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/gunslinger_s.png',\r\n  summoner:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/summoner_s.png',\r\n  arcana:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/arcana_s.png',\r\n  bard: 'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/bard_s.png',\r\n  sorceress:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/sorceress_s.png',\r\n  blade:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blade_s.png',\r\n  demonic:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/demonic_s.png',\r\n  reaper:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/reaper_s.png',\r\n};\r\n\r\nconst characterKorean = {\r\n  arcana: '아르카나',\r\n  bard: '바드',\r\n  battlemaster: '배틀마스터',\r\n  berserker: '버서커',\r\n  blade: '블레이드',\r\n  blaster: '블래스터',\r\n  demonic: '데모닉',\r\n  destroyer: '디스트로이어',\r\n  devilhunter: '데빌헌터',\r\n  gunslinger: '건슬링어',\r\n  hawkeye: '호크아이',\r\n  holyknight: '홀리나이트',\r\n  infighter: '인파이터',\r\n  lancemaster: '창술사',\r\n  reaper: '리퍼',\r\n  scouter: '스카우터',\r\n  sorceress: '소서리스',\r\n  soulmaster: '기공사',\r\n  striker: '스트라이커',\r\n  summoner: '서머너',\r\n  warlord: '워로드',\r\n};\r\n\r\nconst characterEnglish = {\r\n  아르카나: 'arcana',\r\n  바드: 'bard',\r\n  배틀마스터: 'battlemaster',\r\n  버서커: 'berserker',\r\n  블래이드: 'blade',\r\n  블래스터: 'blaster',\r\n  데모닉: 'demonic',\r\n  디스트로이어: 'destroyer',\r\n  데빌헌터: 'devilhunter',\r\n  건슬링어: 'gunslinger',\r\n  호크아이: 'hawkeye',\r\n  홀리나이트: 'holyknight',\r\n  인파이터: 'infighter',\r\n  창술사: 'lancemaster',\r\n  리퍼: 'reaper',\r\n  스카우터: 'scouter',\r\n  소서리스: 'sorceress',\r\n  기공사: 'soulmaster',\r\n  스트라이커: 'striker',\r\n  서머너: 'summoner',\r\n  워로드: 'warlord',\r\n};\r\n\r\nexport { characterCdn, characterKorean, characterEnglish };\r\n","import axios from \"axios\";\r\nimport { backendUrl, axiosConfigAuth } from \"./ConstVar\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nasync function viewDataMain(\r\n  minusOne,\r\n  plusOne,\r\n  plusPage,\r\n  limit,\r\n  activePage,\r\n  setActivePage,\r\n  userCookie\r\n) {\r\n  let searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${activePage}`;\r\n\r\n  if (minusOne) {\r\n    searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n      activePage - 1\r\n    }`;\r\n    setActivePage(activePage - 1);\r\n  } else if (plusOne) {\r\n    searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n      Math.floor(plusPage / limit) + 1\r\n    }`;\r\n    setActivePage(Math.floor(plusPage / limit) + 1);\r\n  }\r\n\r\n  const axiosResult = await axios\r\n    .get(searchString, axiosConfigAuth(userCookie))\r\n    .then((response) => {\r\n      const totalLength = response.data.totalLength;\r\n      let setPage = 0;\r\n      if (totalLength) {\r\n        const totalPage =\r\n          totalLength / limit - Math.floor(totalLength / limit) > 0\r\n            ? Math.floor(totalLength / limit) + 1\r\n            : Math.floor(totalLength / limit);\r\n        setPage = totalPage;\r\n      } else {\r\n        setPage = 1;\r\n      }\r\n      return {\r\n        viewData: response.data,\r\n        success: true,\r\n        setPage,\r\n      };\r\n    })\r\n    .catch((err) => {\r\n      return {\r\n        viewData: [],\r\n        success: true,\r\n        setPage: 1,\r\n      };\r\n    });\r\n  return axiosResult;\r\n}\r\n\r\nasync function allViewDataMain(userCookie) {\r\n  let searchString = `${backendUrl}/loado/api/homeworks/getAllHomework`;\r\n  const axiosResult = await axios\r\n    .get(searchString, axiosConfigAuth(userCookie))\r\n    .then((response) => {\r\n      return {\r\n        viewData: response.data,\r\n        success: true,\r\n        dataLength: response.data.totalLength,\r\n      };\r\n    });\r\n  return axiosResult;\r\n}\r\n\r\nasync function applyChangesUtil(submitData, userCookie) {\r\n  let errorOccured = false;\r\n\r\n  for (let index = 0; index < submitData.length; index++) {\r\n    await axios\r\n      .put(\r\n        `${backendUrl}/loado/api/homeworks/${submitData[index]._id}`,\r\n        {\r\n          data: submitData[index],\r\n        },\r\n        axiosConfigAuth(userCookie)\r\n      )\r\n      .then((response) => {})\r\n      .catch((err) => {\r\n        errorOccured = true;\r\n      });\r\n  }\r\n  return errorOccured;\r\n}\r\n\r\nasync function getUserCheckBoxConfiguration(userCookie) {\r\n  const result = await axios\r\n    .get(\r\n      `${backendUrl}/loado/api/userConfigure/viewbycheckbox`,\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data.viewByCheckBox;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nasync function changeUserCheckBoxConfiguration(viewByCheckBox, userCookie) {\r\n  const result = await axios\r\n    .put(\r\n      `${backendUrl}/loado/api/userConfigure/viewbycheckbox`,\r\n      {\r\n        viewByCheckBox,\r\n      },\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data.success;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nfunction alarmRestValueUtil(todoList, alarmTrue) {\r\n  let alarmList = [];\r\n  let alarm = false;\r\n\r\n  // 알람 중지\r\n  if (!alarmTrue) {\r\n    alarmList = todoList.map((item, idx) => {\r\n      item.alarmCharacter = false;\r\n      return item;\r\n    });\r\n    alarm = true;\r\n  }\r\n  // 알람 온\r\n  else {\r\n    alarmList = todoList.map((item, idx) => {\r\n      if (\r\n        item.chaosRestValue >= 40 ||\r\n        item.guardianRestValue >= 40 ||\r\n        item.eponaRestValue >= 60\r\n      ) {\r\n        item.alarmCharacter = true;\r\n      }\r\n      return item;\r\n    });\r\n    alarm = false;\r\n  }\r\n  return {\r\n    alarmList,\r\n    alarm,\r\n  };\r\n}\r\n\r\nfunction toastMessage(msg, type, deviceType = \"notMobile\") {\r\n  if (deviceType === \"mobile\") {\r\n    alert(\"came to mobile\");\r\n    if (type === \"error\") {\r\n      return toast.error(msg, {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n    } else if (type === \"info\") {\r\n      return toast.info(msg, {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n    }\r\n  } else {\r\n    alert(\"came to not mobile\");\r\n    if (type === \"error\") {\r\n      return toast.error(msg, {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n      });\r\n    } else if (type === \"info\") {\r\n      return toast.info(msg, {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  viewDataMain,\r\n  allViewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Grid, Image, Header, Label } from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { characterCdn, characterKorean } from '../../_data/characterDefinition';\r\n\r\nimport { allViewDataMain, applyChangesUtil } from '../Utils/ViewDataUtil';\r\n\r\nfunction ChangePosition({ changeRowModal, setChangeRowModal }) {\r\n  const [userTodoData, setUserTodoData] = useState();\r\n  const [labelText, setLabelText] = useState('저장');\r\n\r\n  const [changedIndexArr, setChangedIndexArr] = useState([]);\r\n\r\n  const saveChanges = async () => {\r\n    setLabelText('저장중입니다');\r\n    // ES6 distinct values\r\n    const distinctIndexData = Array.from(new Set(changedIndexArr));\r\n    const sendData = userTodoData.filter((item, index) =>\r\n      distinctIndexData.includes(index)\r\n    );\r\n    const applyResult = await applyChangesUtil(\r\n      sendData,\r\n      cookie.get('loadoUserToken')\r\n    );\r\n\r\n    if (applyResult) {\r\n      setLabelText('저장에 실패했습니다');\r\n      return;\r\n    }\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function callData() {\r\n      const resultData = await allViewDataMain(cookie.get('loadoUserToken'));\r\n      console.log(resultData.viewData.data);\r\n      setUserTodoData(resultData.viewData.data);\r\n    }\r\n    callData();\r\n  }, []);\r\n\r\n  let dragStartIndex;\r\n\r\n  useEffect(() => {\r\n    function dragStart() {\r\n      dragStartIndex = +this.getAttribute('data-index');\r\n    }\r\n\r\n    function dragOver(e) {\r\n      //   console.log(\"Event: \", \"dragover\");\r\n      //   nothing happens and the reason\r\n      // for that is basically the drag over event is getting in the way.\r\n      // So we want the read the only reason I have drag over here is to prevent the default action.\r\n      e.preventDefault();\r\n    }\r\n\r\n    function dragDrop() {\r\n      const dragEndIndex = +this.getAttribute('data-index');\r\n      swapItems(dragStartIndex, dragEndIndex);\r\n      this.classList.remove('over');\r\n    }\r\n\r\n    function dragEnter() {\r\n      this.classList.add('over');\r\n    }\r\n    function dragLeave() {\r\n      this.classList.remove('over');\r\n    }\r\n\r\n    // Swap list iteams that are drag and drop\r\n    function swapItems(fromIndex, toIndex) {\r\n      const itemFrom = userTodoData[fromIndex - 1];\r\n      const itemTo = userTodoData[toIndex - 1];\r\n\r\n      const itemFromIdx = itemFrom.idx;\r\n      const itemToIdx = itemTo.idx;\r\n\r\n      itemFrom.idx = itemToIdx;\r\n      itemTo.idx = itemFromIdx;\r\n\r\n      userTodoData[fromIndex - 1] = itemTo;\r\n      userTodoData[toIndex - 1] = itemFrom;\r\n\r\n      changedIndexArr.push(fromIndex - 1);\r\n      changedIndexArr.push(toIndex - 1);\r\n      setChangedIndexArr(changedIndexArr);\r\n\r\n      console.log(changedIndexArr);\r\n\r\n      setUserTodoData([]); // 정보가 남아서 초기화\r\n      setUserTodoData(userTodoData);\r\n    }\r\n\r\n    if (userTodoData) {\r\n      const draggables = document.querySelectorAll('.draggable');\r\n\r\n      draggables.forEach((draggable) => {\r\n        draggable.addEventListener('dragstart', dragStart);\r\n        draggable.addEventListener('dragover', dragOver);\r\n        draggable.addEventListener('drop', dragDrop);\r\n        draggable.addEventListener('dragenter', dragEnter);\r\n        draggable.addEventListener('dragleave', dragLeave);\r\n      });\r\n\r\n      return () => {\r\n        draggables.forEach((draggable) => {\r\n          draggable.removeEventListener('dragstart', dragStart);\r\n          draggable.addEventListener('dragover', dragOver);\r\n          draggable.addEventListener('drop', dragDrop);\r\n          draggable.addEventListener('dragenter', dragEnter);\r\n          draggable.addEventListener('dragleave', dragLeave);\r\n        });\r\n      };\r\n    }\r\n  }, [userTodoData]);\r\n\r\n  return (\r\n    <Modal\r\n      open={changeRowModal}\r\n      onClose={() => setChangeRowModal(false)}\r\n      closeOnDimmerClick\r\n      size='tiny'\r\n    >\r\n      <Modal.Header\r\n        style={{\r\n          backgroundColor: '#384862',\r\n          color: 'white',\r\n          borderBottom: '1px solid white',\r\n        }}\r\n      >\r\n        케릭터 순서변경\r\n        {userTodoData && (\r\n          <Label\r\n            as='a'\r\n            color='orange'\r\n            ribbon\r\n            style={{ marginLeft: '80px' }}\r\n            onClick={saveChanges}\r\n          >\r\n            {labelText}\r\n          </Label>\r\n        )}\r\n      </Modal.Header>\r\n      <Modal.Content style={{ backgroundColor: 'lavender' }}>\r\n        <Grid columns={10}>\r\n          {userTodoData &&\r\n            userTodoData\r\n              .sort(function (a, b) {\r\n                return a['idx'] - b['idx'];\r\n              })\r\n              .map((item, index) => (\r\n                <Grid.Row\r\n                  className='draggable'\r\n                  draggable={true}\r\n                  data-index={item.idx}\r\n                  style={{ borderBottom: '1px solid rgb(56, 72, 98)' }}\r\n                >\r\n                  <Grid.Column width={7}>\r\n                    <Header as='h5'>\r\n                      <span style={{ marginRight: '20px' }}>{index + 1}.</span>\r\n                      <Image avatar src={characterCdn[item.character]} />{' '}\r\n                      <span style={{ marginLeft: '10px' }}>\r\n                        {item.characterName}\r\n                      </span>\r\n                    </Header>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n        </Grid>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ChangePosition;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Menu, Header, Icon, Popup, Button, Divider } from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { backendUrl, axiosConfig, axiosConfigAuth } from '../Utils/ConstVar';\r\n\r\nimport HistoryModal from '../Nav/HistoryModal';\r\nimport ChangePosition from '../HomeSubComp/ChangePosition';\r\n\r\nimport './NavHeader.css';\r\n\r\nfunction NavHeader() {\r\n  let userIdString = cookie.get('loadoUserCookie');\r\n  let userValue = userIdString && JSON.parse(userIdString);\r\n  const history = useHistory();\r\n\r\n  const [showUpdateHistoryModal, setShowUpdateHistoryModal] = useState(false);\r\n  const [changeRowModal, setChangeRowModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [noticeAlert, setNoticeAlert] = useState(false);\r\n\r\n  const logoutUser = (userId) => {\r\n    cookie.set('loginId', userId);\r\n    cookie.remove('loadoUserCookie');\r\n    cookie.remove('loadoUserToken');\r\n    cookie.remove('token');\r\n    history.push('/login');\r\n  };\r\n\r\n  const restValueBatch = async () => {\r\n    let searchString = `${backendUrl}/loado/api/homeworks/loadoupdatepersonal`;\r\n    axios\r\n      .post(searchString, {}, axiosConfig)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        alert('휴식게이지를 반영하지 못했습니다');\r\n      });\r\n  };\r\n\r\n  const openChangeRowModal = () => {\r\n    setOpen(false);\r\n    setChangeRowModal(true);\r\n  };\r\n\r\n  const changeNotificationToFalse = async () => {\r\n    await axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/changeNotification`,\r\n        {},\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) return;\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function checkNewlyUpdate() {\r\n      const axiosResult = await axios\r\n        .post(\r\n          `${backendUrl}/loado/api/users/checkNotification`,\r\n          {},\r\n          axiosConfigAuth(cookie.get('loadoUserToken'))\r\n        )\r\n        .then((response) => {\r\n          if (response.data.success) setNoticeAlert(response.data.newNotice);\r\n        })\r\n        .catch((err) => {\r\n          setNoticeAlert(false);\r\n        });\r\n    }\r\n    checkNewlyUpdate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        style={{\r\n          backgroundColor: 'lightcoral',\r\n          height: '6vh',\r\n          borderRadius: '0px',\r\n          marginBottom: '0px',\r\n        }}\r\n        borderless\r\n      >\r\n        <Menu.Item>\r\n          <Header\r\n            size='large'\r\n            id='navTitle'\r\n            onClick={() =>\r\n              window.open(\r\n                'https://github.com/biglol10/loado-react/blob/main/README.md'\r\n              )\r\n            }\r\n          >\r\n            <span style={{ fontStyle: 'italic' }}>\r\n              <Icon name='game' />\r\n              LoaDo\r\n            </span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            onClick={() => setShowUpdateHistoryModal(!showUpdateHistoryModal)}\r\n            className={noticeAlert ? 'newNoticeAlert headerItem' : 'headerItem'}\r\n          >\r\n            <Icon name='cube' />\r\n            작업 내역\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            className='headerItem'\r\n            onClick={() => restValueBatch()}\r\n          >\r\n            <Icon name='box' />\r\n            휴식게이지반영\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item className='personIconItem'>\r\n          <Popup\r\n            on='click'\r\n            position='top right'\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={\r\n              <Header size='small' className='personIcon'>\r\n                <Icon name='user' />\r\n                {userValue && userValue.userName}\r\n              </Header>\r\n            }\r\n          >\r\n            <p>케릭터 순서를 바꾸시겠습니까?</p>\r\n            <Button\r\n              color='blue'\r\n              content='순서변경'\r\n              onClick={openChangeRowModal}\r\n            />\r\n            <Divider />\r\n            <p>로그아웃 하시겠습니까?</p>\r\n            <Button\r\n              color='red'\r\n              content='로그아웃'\r\n              onClick={() => logoutUser(userValue.userId)}\r\n            />\r\n          </Popup>\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {showUpdateHistoryModal && (\r\n        <HistoryModal\r\n          showUpdateHistoryModal={showUpdateHistoryModal}\r\n          setShowUpdateHistoryModal={setShowUpdateHistoryModal}\r\n          setNoticeAlert={setNoticeAlert}\r\n          changeNotificationToFalse={changeNotificationToFalse}\r\n        />\r\n      )}\r\n\r\n      {changeRowModal && (\r\n        <ChangePosition\r\n          changeRowModal={changeRowModal}\r\n          setChangeRowModal={setChangeRowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Menu,\r\n  Header,\r\n  Icon,\r\n  Popup,\r\n  Button,\r\n  Modal,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { backendUrl, axiosConfig, axiosConfigAuth } from '../Utils/ConstVar';\r\n\r\nimport HistoryModal from '../Nav/HistoryModal';\r\nimport ChangePosition from '../HomeSubComp/ChangePosition';\r\n\r\nimport './NavHeader.css';\r\n\r\nfunction NavHeaderMobile() {\r\n  let userIdString = cookie.get('loadoUserCookie');\r\n  let userValue = userIdString && JSON.parse(userIdString);\r\n  const history = useHistory();\r\n\r\n  const [showUpdateHistoryModal, setShowUpdateHistoryModal] = useState(false);\r\n  const [changeRowModal, setChangeRowModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [noticeAlert, setNoticeAlert] = useState(false);\r\n\r\n  const [mobileSize, setMobileSize] = useState(false);\r\n\r\n  const logoutUser = (userId) => {\r\n    cookie.set('loginId', userId);\r\n    cookie.remove('loadoUserCookie');\r\n    cookie.remove('loadoUserToken');\r\n    cookie.remove('token');\r\n    history.push('/login');\r\n  };\r\n\r\n  const restValueBatch = async () => {\r\n    let searchString = `${backendUrl}/loado/api/homeworks/loadoupdatepersonal`;\r\n    axios\r\n      .post(searchString, {}, axiosConfig)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        alert('휴식게이지를 반영하지 못했습니다');\r\n      });\r\n  };\r\n\r\n  const openChangeRowModal = () => {\r\n    setOpen(false);\r\n    setChangeRowModal(true);\r\n  };\r\n\r\n  const changeNotificationToFalse = async () => {\r\n    await axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/changeNotification`,\r\n        {},\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) return;\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function checkNewlyUpdate() {\r\n      const axiosResult = await axios\r\n        .post(\r\n          `${backendUrl}/loado/api/users/checkNotification`,\r\n          {},\r\n          axiosConfigAuth(cookie.get('loadoUserToken'))\r\n        )\r\n        .then((response) => {\r\n          if (response.data.success) setNoticeAlert(response.data.newNotice);\r\n        })\r\n        .catch((err) => {\r\n          setNoticeAlert(false);\r\n        });\r\n    }\r\n    checkNewlyUpdate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        style={{\r\n          backgroundColor: 'lightcoral',\r\n          height: '6vh',\r\n          borderRadius: '0px',\r\n          marginBottom: '0px',\r\n          width: '100%',\r\n        }}\r\n        borderless\r\n      >\r\n        <Menu.Item>\r\n          <Header\r\n            size='large'\r\n            id='navTitleMobile'\r\n            onClick={() =>\r\n              window.open(\r\n                'https://github.com/biglol10/loado-react/blob/main/README.md'\r\n              )\r\n            }\r\n          >\r\n            <span style={{ fontStyle: 'italic' }}>\r\n              <Icon name='game' />\r\n              LoaDo\r\n            </span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item style={{ marginLeft: 'auto' }}>\r\n          <Popup\r\n            on='click'\r\n            position='top right'\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={\r\n              <Header\r\n                size='small'\r\n                style={{\r\n                  color: 'white',\r\n                  padding: '0 50px',\r\n                  display: 'flex',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                <Icon name='user' />\r\n                {userValue && userValue.userName}\r\n              </Header>\r\n            }\r\n          >\r\n            <p>개인휴식게이지 반영</p>\r\n            <Button\r\n              color='teal'\r\n              content='휴게반영'\r\n              onClick={() => restValueBatch()}\r\n            />\r\n            <Divider />\r\n            <p>로그아웃 하시겠습니까?</p>\r\n            <Button\r\n              color='red'\r\n              content='로그아웃'\r\n              onClick={() => logoutUser(userValue.userId)}\r\n            />\r\n          </Popup>\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {showUpdateHistoryModal && (\r\n        <HistoryModal\r\n          showUpdateHistoryModal={showUpdateHistoryModal}\r\n          setShowUpdateHistoryModal={setShowUpdateHistoryModal}\r\n          setNoticeAlert={setNoticeAlert}\r\n          changeNotificationToFalse={changeNotificationToFalse}\r\n        />\r\n      )}\r\n\r\n      {changeRowModal && (\r\n        <ChangePosition\r\n          changeRowModal={changeRowModal}\r\n          setChangeRowModal={setChangeRowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeaderMobile;\r\n","import React, { useState } from \"react\";\r\nimport \"./CharacterToDo.css\";\r\nimport { Header, Button, Segment, Grid, Container } from \"semantic-ui-react\";\r\nimport TodoComponent from \"../Todo/TodoComponent\";\r\nimport todoData from \"../../_data/todoData.js\";\r\n\r\nfunction CharacterToDo() {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  const [userTodoData, setUserTodoData] = useState(todoData);\r\n\r\n  const [iconId, setIconId] = useState(\"\");\r\n\r\n  const [changedList, setChangedList] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <Grid className=\"fullPage\">\r\n        <Container\r\n          style={{ width: \"95%\", marginLeft: \"2.5%\", marginRight: \"2.5%\" }}\r\n        >\r\n          <Grid.Column width={16}>\r\n            <Segment basic style={{ marginBottom: \"0px\" }}>\r\n              <Header\r\n                size=\"huge\"\r\n                style={{ color: \"deepskyblue\", textAlign: \"center\" }}\r\n              >\r\n                로아 숙제관리\r\n              </Header>\r\n            </Segment>\r\n            <Segment basic className=\"contentHeader\">\r\n              <div className=\"headerValueStart\">\r\n                <Header size=\"medium\" style={{ color: \"white\" }}>\r\n                  {today}{\" \"}\r\n                  <span style={{ marginLeft: \"40px\" }}>\r\n                    금일 06:00 ~ 명일 05:59\r\n                  </span>\r\n                </Header>\r\n              </div>\r\n              <div className=\"headerValueEnd\">\r\n                <Button inverted color=\"red\">\r\n                  변경사항 저장\r\n                </Button>\r\n              </div>\r\n            </Segment>\r\n            <Segment basic style={{ backgroundColor: \"slategrey\" }}>\r\n              <Grid columns={16}>\r\n                <Grid.Row style={{ borderBottom: \"0.05rem inset ivory\" }}>\r\n                  <Grid.Column style={{ width: \"150px\" }}></Grid.Column>\r\n                  <Grid.Column width={2}>휴식게이지</Grid.Column>\r\n                  <Grid.Column width={12}>\r\n                    <Grid columns=\"equal\">\r\n                      <Grid.Row>\r\n                        <Grid.Column>카오스던전</Grid.Column>\r\n                        <Grid.Column>가디언토벌</Grid.Column>\r\n                        <Grid.Column>에포나</Grid.Column>\r\n                        <Grid.Column>가디언레이드</Grid.Column>\r\n                        <Grid.Column>어비스2종</Grid.Column>\r\n                        <Grid.Column width={2}>주간던전</Grid.Column>\r\n                        <Grid.Column>아르고스</Grid.Column>\r\n                        <Grid.Column>발탄</Grid.Column>\r\n                        <Grid.Column>비아키스</Grid.Column>\r\n                        <Grid.Column>쿠크세이튼</Grid.Column>\r\n                        <Grid.Column>아브렐슈드</Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                {userTodoData.map((item, idx) => (\r\n                  <TodoComponent\r\n                    listId={item._id}\r\n                    userTodoData={item}\r\n                    setUserTodoData={setUserTodoData}\r\n                    iconId={iconId}\r\n                    setIconId={setIconId}\r\n                    setChangedList={setChangedList}\r\n                    thisItemChanged={\r\n                      changedList.includes(item._id)\r\n                        ? \"thisItemChanged\"\r\n                        : \"thisItemNotChanged\"\r\n                    }\r\n                  />\r\n                ))}\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Container>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDo;\r\n","import React, { useState, useEffect, useRef, innerRef } from 'react';\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  List,\r\n  Button,\r\n} from 'semantic-ui-react';\r\nimport { characterCdn, characterKorean } from '../../_data/characterDefinition';\r\nimport axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { backendUrl } from '../Utils/ConstVar';\r\nimport cookie from 'js-cookie';\r\n\r\nimport './AddCharacter.css';\r\n\r\nfunction AddCharacter({\r\n  addCharacterModal,\r\n  closeAddCharacter,\r\n  userTodoData,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  limit,\r\n}) {\r\n  const [selectCharacterModal, setSelectCharacterModal] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState('');\r\n  const [characterName, setCharacterName] = useState('');\r\n  const [chaosRestValue, setChaosRestValue] = useState(0);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(0);\r\n  const [eponaRestValue, setEponaRestValue] = useState(0);\r\n  const regex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]+$/;\r\n  const regexNumber = /^[0-9]+$/;\r\n\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n\r\n  const closeSelectCharacter = () => setSelectCharacterModal(false);\r\n\r\n  const modalShow = () => {\r\n    setSelectCharacterModal(true);\r\n  };\r\n\r\n  const classSelected = (event) => {\r\n    let selectedClass;\r\n    if (event.target.className.indexOf('image') > 0) {\r\n      selectedClass = event.target.dataset.options;\r\n    } else {\r\n      selectedClass = event.target.className.split(' ')[2];\r\n    }\r\n    setSelectedCharacter(selectedClass);\r\n    setSelectCharacterModal(false);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeAddCharacterModal = () => {\r\n    setSelectedCharacter('');\r\n    setCharacterName('');\r\n    setChaosRestValue(0);\r\n    setGuardianRestValue(0);\r\n    setEponaRestValue(0);\r\n    closeAddCharacter();\r\n  };\r\n\r\n  const changeInputCharName = (event, data) => {\r\n    const insertedValue = data.value;\r\n    if (insertedValue.length === 0) {\r\n      setCharacterName('');\r\n      return;\r\n    }\r\n    if (!regex.test(insertedValue) || insertedValue.length > 12) return;\r\n    setCharacterName(insertedValue);\r\n  };\r\n\r\n  const changeRestValue = (event, data) => {\r\n    event.preventDefault();\r\n    if (!regexNumber.test(event.target.value)) return;\r\n    if (event.target.id === 'chaosChange') {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = chaosRestValue + (changedValue - chaosRestValue) * 10;\r\n      if (valueOutput < 0) setChaosRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValue(valueOutput);\r\n      else setChaosRestValue(100);\r\n    }\r\n    if (event.target.id === 'guardianChange') {\r\n      const changedValue = event.target.value;\r\n      const valueOutput =\r\n        guardianRestValue + (changedValue - guardianRestValue) * 10;\r\n      if (valueOutput < 0) setGuardianRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValue(valueOutput);\r\n      else setGuardianRestValue(100);\r\n    }\r\n    if (event.target.id === 'eponaChange') {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = eponaRestValue + (changedValue - eponaRestValue) * 10;\r\n      if (valueOutput < 0) setEponaRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValue(valueOutput);\r\n      else setEponaRestValue(100);\r\n    }\r\n  };\r\n\r\n  const confirmAddCharacter = () => {\r\n    const createdData = {\r\n      // _id: \"5d725a037b292f5f8ceff795\",\r\n      // user: \"5d7a514b5d2c12c7449be042\",\r\n      character: selectedCharacter,\r\n      characterName: characterName,\r\n      date: Date.now(),\r\n      // idx: 2,\r\n      chaosRestValue,\r\n      guardianRestValue,\r\n      eponaRestValue,\r\n      chaosDone: 0,\r\n      guardianDone: 0,\r\n      eponaDone: 0,\r\n      guardianWeeklyDone: 0,\r\n      abyssDungeon2: false,\r\n      // abyssDungeonWeekly: true,\r\n      // rehearsalAndDejavu: [\"kukuseitn\", \"abrel\"],\r\n      argos: false,\r\n      baltan: false,\r\n      biakiss: false,\r\n      kukuseitn: false,\r\n      abrel: false,\r\n      attributeChanged: false,\r\n      weeklyAttributeChanged: false,\r\n      createdAt: Date.now(),\r\n    };\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/homeworks`,\r\n        createdData,\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        // setUserTodoData([...userTodoData, response.data.data]);\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          userTodoData.length % limit === 0\r\n        ) {\r\n          viewPage(false, true, response.data.totalLength);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n        closeAddCharacterModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.error, {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        closeAddCharacterModal();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const classElements = document.getElementsByClassName(\r\n      'characterClassContent'\r\n    );\r\n    let eventAdd;\r\n    for (let index = 0; index < classElements.length; index++) {\r\n      eventAdd = classElements[index].addEventListener('click', (event) => {\r\n        classSelected(event);\r\n      });\r\n    }\r\n    return () => {\r\n      for (let index = 0; index < classElements.length; index++) {\r\n        classElements[index].removeEventListener('click', eventAdd);\r\n      }\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById('characterNameInputId');\r\n    const enterEvent = element.addEventListener('keypress', (event) => {\r\n      if (event.key === 'Enter') {\r\n        console.log(buttonRef.current);\r\n        if (buttonRef.current) buttonRef.current.click();\r\n      }\r\n    });\r\n    return () => {\r\n      element.removeEventListener('keypress', enterEvent);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size='mini'\r\n        open={addCharacterModal}\r\n        onClose={closeAddCharacterModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: 'dimgray' }}>\r\n          <Header className='itemHeader' as='h4'>\r\n            {!selectedCharacter ? (\r\n              <>\r\n                <span className='itemHeaderAttribute1'>클래스:</span>\r\n                <Icon\r\n                  name='add square'\r\n                  size='large'\r\n                  color='white'\r\n                  onClick={modalShow}\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className='itemHeaderAttribute2'>클래스:</span>\r\n                <span onClick={() => setSelectCharacterModal(true)}>\r\n                  <Image\r\n                    src={characterCdn[selectedCharacter]}\r\n                    size='mini'\r\n                    avatar\r\n                  />\r\n                  {characterKorean[selectedCharacter]}\r\n                </span>\r\n              </>\r\n            )}\r\n          </Header>\r\n          <Header className='itemHeader' as='h4'>\r\n            <span style={{ marginRight: '40px' }}>케릭명:</span>\r\n            <Input\r\n              transparent\r\n              placeholder='케릭터명'\r\n              style={{ color: 'white' }}\r\n              className='charNameInput'\r\n              value={characterName}\r\n              ref={inputRef}\r\n              id='characterNameInputId'\r\n              onChange={(event, data) => changeInputCharName(event, data)}\r\n            />\r\n          </Header>\r\n          <Header className='itemHeaderRest' as='h4'>\r\n            <List divided selection>\r\n              <List.Item>\r\n                <Label horizontal>카오스던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: 'white' }}\r\n                  className='charNameInput'\r\n                  value={chaosRestValue}\r\n                  id='chaosChange'\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>가디언던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: 'white' }}\r\n                  className='charNameInput'\r\n                  value={guardianRestValue}\r\n                  id='guardianChange'\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>에포나</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: 'white' }}\r\n                  className='charNameInput'\r\n                  value={eponaRestValue}\r\n                  id='eponaChange'\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n            </List>\r\n          </Header>\r\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Button\r\n              circular\r\n              color='google plus'\r\n              icon='cancel'\r\n              onClick={closeAddCharacterModal}\r\n            />\r\n            <Button\r\n              circular\r\n              color='twitter'\r\n              icon='check'\r\n              onClick={confirmAddCharacter}\r\n            />\r\n            <button\r\n              ref={buttonRef}\r\n              onClick={confirmAddCharacter}\r\n              style={{ display: 'none' }}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <Modal\r\n        open={selectCharacterModal}\r\n        onClose={closeSelectCharacter}\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n        className='classSelectModal'\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            backgroundColor: '#384862',\r\n            color: 'white',\r\n            borderBottom: '1px solid white',\r\n          }}\r\n        >\r\n          클래스\r\n        </Modal.Header>\r\n        <Modal.Content style={{ backgroundColor: '#384862', color: 'white' }}>\r\n          <Grid columns={6}>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  전사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column\r\n                className='characterClassContent berserker'\r\n                name='berserker'\r\n              >\r\n                <Image\r\n                  src={characterCdn.berserker}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='berserker'\r\n                />\r\n                버서커\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent warlord'>\r\n                <Image\r\n                  src={characterCdn.warlord}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='warlord'\r\n                />\r\n                워로드\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent destroyer'>\r\n                <Image\r\n                  src={characterCdn.destroyer}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='destroyer'\r\n                />\r\n                디스트로이어\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent holyknight'>\r\n                <Image\r\n                  src={characterCdn.holyknight}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='holyknight'\r\n                />\r\n                홀리나이트\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  무도가\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent battlemaster'>\r\n                <Image\r\n                  src={characterCdn.battlemaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='battlemaster'\r\n                />\r\n                배틀마스터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent infighter'>\r\n                <Image\r\n                  src={characterCdn.infighter}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='infighter'\r\n                />\r\n                인파이터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent soulmaster'>\r\n                <Image\r\n                  src={characterCdn.soulmaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='soulmaster'\r\n                />\r\n                기공사\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent lancemaster'>\r\n                <Image\r\n                  src={characterCdn.lancemaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='lancemaster'\r\n                />\r\n                창술사\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent striker'>\r\n                <Image\r\n                  src={characterCdn.striker}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='striker'\r\n                />\r\n                스트라이커\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  헌터\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent devilhunter'>\r\n                <Image\r\n                  src={characterCdn.devilhunter}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='devilhunter'\r\n                />\r\n                데빌헌터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent blaster'>\r\n                <Image\r\n                  src={characterCdn.blaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='blaster'\r\n                />\r\n                블래스터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent hawkeye'>\r\n                <Image\r\n                  src={characterCdn.hawkeye}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='hawkeye'\r\n                />\r\n                호크아이\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent scouter'>\r\n                <Image\r\n                  src={characterCdn.scouter}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='scouter'\r\n                />\r\n                스카우터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent gunslinger'>\r\n                <Image\r\n                  src={characterCdn.gunslinger}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='gunslinger'\r\n                />\r\n                건슬링어\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  마법사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent summoner'>\r\n                <Image\r\n                  src={characterCdn.summoner}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='summoner'\r\n                />\r\n                서머너\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent arcana'>\r\n                <Image\r\n                  src={characterCdn.arcana}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='arcana'\r\n                />\r\n                아르카나\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent bard'>\r\n                <Image\r\n                  src={characterCdn.bard}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='bard'\r\n                />\r\n                바드\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent sorceress'>\r\n                <Image\r\n                  src={characterCdn.sorceress}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='sorceress'\r\n                />\r\n                소서리스\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  암살자\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent blade'>\r\n                <Image\r\n                  src={characterCdn.blade}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='blade'\r\n                />\r\n                블레이드\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent demonic'>\r\n                <Image\r\n                  src={characterCdn.demonic}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='demonic'\r\n                />\r\n                데모닉\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent reaper'>\r\n                <Image\r\n                  src={characterCdn.reaper}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='reaper'\r\n                />\r\n                리퍼\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Modal, Image, Button } from \"semantic-ui-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { characterCdn } from \"../../_data/characterDefinition\";\r\n\r\nfunction RestValue({ item, userTodoData, setUserTodoData }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(item._id);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowModal(true);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  // if you use setShowModal directly in Modal onClose, react will throw error\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [chaosRestValue, setChaosRestValue] = useState(item.chaosRestValue);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValue, setEponaRestValue] = useState(item.eponaRestValue);\r\n\r\n  const [chaosRestValueChange, setChaosRestValueChange] = useState(\r\n    item.chaosRestValue\r\n  );\r\n  const [guardianRestValueChange, setGuardianRestValueChange] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValueChange, setEponaRestValueChange] = useState(\r\n    item.eponaRestValue\r\n  );\r\n\r\n  const valueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"chaosChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        chaosRestValueChange + (changedValue - chaosRestValueChange) * 10;\r\n      if (valueOutput < 0) setChaosRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValueChange(valueOutput);\r\n      else setChaosRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"guardianChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        guardianRestValueChange + (changedValue - guardianRestValueChange) * 10;\r\n      if (valueOutput < 0) setGuardianRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValueChange(valueOutput);\r\n      else setGuardianRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"eponaChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        eponaRestValueChange + (changedValue - eponaRestValueChange) * 10;\r\n      if (valueOutput < 0) setEponaRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValueChange(valueOutput);\r\n      else setEponaRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const confirmValue = () => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === item._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"chaosRestValue\"] = chaosRestValueChange;\r\n    newArr[indexValue][\"guardianRestValue\"] = guardianRestValueChange;\r\n    newArr[indexValue][\"eponaRestValue\"] = eponaRestValueChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column id={item._id}>\r\n        카던: {item.chaosRestValue}\r\n        <br />\r\n        가디언: {item.guardianRestValue}\r\n        <br />\r\n        에포나: {item.eponaRestValue}\r\n      </Grid.Column>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Header>\r\n          <Image src={characterCdn[item.character]} size=\"mini\" avatar />\r\n          {item.characterName}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextField\r\n            id=\"chaosChange\"\r\n            type=\"number\"\r\n            label=\"카오스던전\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={chaosRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"guardianChange\"\r\n            type=\"number\"\r\n            label=\"가디언토벌\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={guardianRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"eponaChange\"\r\n            type=\"number\"\r\n            label=\"에포나\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={eponaRestValueChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={closeModal}>\r\n            취소\r\n          </Button>\r\n          <Button positive onClick={confirmValue}>\r\n            확인\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestValue;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Image, Icon, Popup } from 'semantic-ui-react';\r\nimport { characterCdn } from '../../_data/characterDefinition';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\nimport './CharacterAvatarCss.css';\r\nimport { backendUrl } from '../Utils/ConstVar';\r\n\r\nfunction CharacterAvatar({\r\n  itemId,\r\n  character,\r\n  characterName,\r\n  attributeChanged,\r\n  weeklyAttributeChanged,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  alarmCharacter,\r\n  limit,\r\n  dontChange,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  deviceType,\r\n}) {\r\n  const [deleteIcon, showDeleteIcon] = useState(false);\r\n\r\n  const [showDontChange, setShowDontChange] = useState(false);\r\n\r\n  const [dontChangeState, setDontChangeState] = useState(dontChange);\r\n\r\n  const [alarmState, setAlarmState] = useState('');\r\n\r\n  const deleteCharacter = (id) => {\r\n    // console.log(id);\r\n    // const indexValue = userTodoData.findIndex((anItem) => {\r\n    //   return anItem._id === id;\r\n    // });\r\n    // let newArr = [...userTodoData];\r\n    // newArr.splice(indexValue, 1);\r\n    // setUserTodoData(newArr);\r\n    // showDeleteIcon(false);\r\n\r\n    axios\r\n      .delete(\r\n        `${backendUrl}/loado/api/homeworks/${itemId}`,\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          response.data.totalLength % limit === 0\r\n        ) {\r\n          viewPage(true, false);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  const dontChangeCharacter = (id) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].dontChange = !dontChange;\r\n    newArr[indexValue]['attributeChanged'] = true;\r\n    setDontChangeState(!dontChangeState);\r\n    setUserTodoData(newArr);\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  // 원래 1회 실행으로 useEffect에 []를 넣었지만 이걸 넣으니 되돌아가기가 안됨... 그래서 [] 빼보니 됨\r\n  useEffect(() => {\r\n    let element = document.getElementById(`${itemId}_${characterName}`);\r\n    const rightclickEvent = element.addEventListener('contextmenu', (event) => {\r\n      event.preventDefault();\r\n      setShowDontChange(!showDontChange);\r\n    });\r\n    return () => {\r\n      element.removeEventListener('contextmenu', rightclickEvent);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column>\r\n        <Image\r\n          src={characterCdn[character]}\r\n          size='mini'\r\n          avatar\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n        />\r\n        {deviceType === 'mobile' && <br />}\r\n        <span\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n          className={alarmCharacter ? 'alarmLight' : ''}\r\n          id={`${itemId}_${characterName}`}\r\n          data-options={itemId}\r\n        >\r\n          {characterName}\r\n        </span>\r\n        {(attributeChanged || weeklyAttributeChanged) && (\r\n          <Icon\r\n            name='edit'\r\n            size='small'\r\n            style={{ color: 'springgreen', marginLeft: '3px' }}\r\n          />\r\n        )}\r\n        {deleteIcon && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name='trash'\r\n                color='red'\r\n                style={{ cursor: 'pointer', marginLeft: '1px' }}\r\n                onClick={() => deleteCharacter(itemId)}\r\n              />\r\n            }\r\n            content={`'${characterName}'에 대한 정보를 삭제하시겠습니까?`}\r\n          />\r\n        )}\r\n        {showDontChange && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name={dontChangeState ? 'bell' : 'bell slash'}\r\n                color='yellow'\r\n                style={{ cursor: 'pointer', marginLeft: '1px' }}\r\n                onClick={() => dontChangeCharacter(itemId)}\r\n              />\r\n            }\r\n            content={\r\n              dontChangeState\r\n                ? `'${characterName}' 휴식게이지 고정취소`\r\n                : `'${characterName}' 휴식게이지 고정`\r\n            }\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterAvatar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextArea, Icon } from \"semantic-ui-react\";\r\n\r\nfunction PerIdNote({ item, userTodoData, setUserTodoData, deviceType }) {\r\n  const [showTextArea, setShowTextArea] = useState(false);\r\n  const [textValue, setTextValue] = useState(item.note);\r\n\r\n  const dontChangeCharacter = (id, theText) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"note\"] = theText;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  const changeText = (event) => {\r\n    if (event.target.value.length > 20) return;\r\n    setTextValue(event.target.value);\r\n    dontChangeCharacter(item._id, event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!showTextArea ? (\r\n        <>\r\n          {item.note}{\" \"}\r\n          <Icon\r\n            inverted\r\n            name=\"pencil square\"\r\n            color=\"pink\"\r\n            onClick={() => setShowTextArea(!showTextArea)}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </>\r\n      ) : deviceType === \"mobile\" ? (\r\n        <TextArea\r\n          style={{ width: \"100%\" }}\r\n          value={textValue}\r\n          onChange={(event) => changeText(event)}\r\n        />\r\n      ) : (\r\n        <TextArea value={textValue} onChange={(event) => changeText(event)} />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport default PerIdNote;\r\n","import React, { useState } from 'react';\r\nimport { Grid, Dropdown, Checkbox } from 'semantic-ui-react';\r\n\r\nfunction changeArr(arr, match, dataValue, type) {\r\n  const indexValue = arr.findIndex((anItem) => {\r\n    return anItem._id === match;\r\n  });\r\n  let newArr = [...arr];\r\n  newArr[indexValue][type] = dataValue;\r\n  newArr[indexValue]['attributeChanged'] = true;\r\n  return newArr;\r\n}\r\n\r\nfunction ChaosDunValue({\r\n  chaosItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${chaosItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${chaosItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${chaosItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [chaosData, setChaosData] = useState(chaosItem.chaosDone);\r\n\r\n  // 체크박스로 숙제를 체크하고 싶다는 피드백에 따라 작성\r\n  const [chaosDataChecked, setChaosDataChecked] = useState(\r\n    chaosItem.chaosDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setChaosData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      chaosItem._id,\r\n      data.value,\r\n      'chaosDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setChaosDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={chaosData}\r\n        />\r\n      ) : (\r\n        // 체크박스용\r\n        <Checkbox\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={chaosDataChecked}\r\n          value={chaosDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction GuardianDunValue({\r\n  guardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${guardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${guardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${guardianItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [guardianData, setGuardianData] = useState(guardianItem.guardianDone);\r\n\r\n  const [guardianDataChecked, setGuardianDataChecked] = useState(\r\n    guardianItem.guardianDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setGuardianData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      guardianItem._id,\r\n      data.value,\r\n      'guardianDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={guardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={guardianDataChecked}\r\n          value={guardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction EponaValue({\r\n  eponaItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${eponaItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${eponaItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${eponaItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${eponaItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [eponaData, setEponaData] = useState(eponaItem.eponaDone);\r\n\r\n  const [eponaDataChecked, setEponaDataChecked] = useState(\r\n    eponaItem.eponaDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setEponaData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      eponaItem._id,\r\n      data.value,\r\n      'eponaDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setEponaDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='epona'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={eponaData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='epona'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={eponaDataChecked}\r\n          value={eponaDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\n// Currently not used for nicer view\r\nfunction WeeklyGuardian({\r\n  weeklyGuardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${weeklyGuardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${weeklyGuardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${weeklyGuardianItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${weeklyGuardianItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [weeklyGuardianData, setWeeklyGuardianData] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone\r\n  );\r\n\r\n  const [weeklyGuardianDataChecked, setWeeklyGuardianDataChecked] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setWeeklyGuardianData(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === weeklyGuardianItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].guardianWeeklyDone = data.value;\r\n    newArr[indexValue]['attributeChanged'] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setWeeklyGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={weeklyGuardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={weeklyGuardianDataChecked}\r\n          value={weeklyGuardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport { ChaosDunValue, GuardianDunValue, EponaValue, WeeklyGuardian };\r\n","import React, { useState } from 'react';\r\nimport { Grid, Checkbox, Dropdown, Label } from 'semantic-ui-react';\r\n\r\nconst changeDatafunction = (\r\n  event,\r\n  data,\r\n  setItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  findIndexItem,\r\n  changeItem\r\n) => {\r\n  setItem(data.checked);\r\n  const indexValue = userTodoData.findIndex((anItem) => {\r\n    return anItem._id === findIndexItem._id;\r\n  });\r\n  let newArr = [...userTodoData];\r\n  newArr[indexValue][changeItem] = data.checked;\r\n  let attrChanged =\r\n    changeItem === 'abyssDungeonWeekly'\r\n      ? 'weeklyAttributeChanged'\r\n      : 'attributeChanged';\r\n  newArr[indexValue][attrChanged] = true;\r\n  setUserTodoData(newArr);\r\n};\r\n\r\nfunction AbyssDun2({ abyssDun2Item, userTodoData, setUserTodoData }) {\r\n  const [abyssDun2, setAbyssDun2] = useState(abyssDun2Item.abyssDungeon2);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='AbyssDun2'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbyssDun2,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abyssDun2Item,\r\n            'abyssDungeon2'\r\n          )\r\n        }\r\n        checked={abyssDun2}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbyssRaid({ idx, abyssRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abyssRaid, setAbyssRaid] = useState(abyssRaidItem.abyssDungeonWeekly);\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <Grid.Column style={{ display: 'flex' }}>\r\n        <Checkbox\r\n          name='AbyssRaid'\r\n          onChange={(event, data) =>\r\n            changeDatafunction(\r\n              event,\r\n              data,\r\n              setAbyssRaid,\r\n              userTodoData,\r\n              setUserTodoData,\r\n              abyssRaidItem,\r\n              'abyssDungeonWeekly'\r\n            )\r\n          }\r\n          checked={abyssRaid}\r\n        />\r\n      </Grid.Column>\r\n    )\r\n  );\r\n}\r\n\r\nfunction RehearsalAndDejavu({\r\n  rehearsalAndDejavuItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  idx,\r\n}) {\r\n  const options_combo1 = [\r\n    { key: 'kukuseitn', text: '쿠크리허설', value: 'kukuseitn' },\r\n    { key: 'abrel', text: '아브렐데쟈뷰', value: 'abrel' },\r\n  ];\r\n  const [rehearsalAndDejavu, setRehearsalAndDejavu] = useState(\r\n    rehearsalAndDejavuItem.rehearsalAndDejavu\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setRehearsalAndDejavu(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === rehearsalAndDejavuItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].rehearsalAndDejavu = data.value;\r\n    newArr[indexValue].weeklyAttributeChanged = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder='쿠크/아브렐'\r\n            fluid\r\n            multiple\r\n            selection\r\n            options={options_combo1}\r\n            value={rehearsalAndDejavu}\r\n            onChange={(event, data) => changeData(event, data)}\r\n          />\r\n        </Grid.Column>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nfunction ArgosRaid({ argosRaidItem, userTodoData, setUserTodoData }) {\r\n  const [argosRaid, setArgosRaid] = useState(argosRaidItem.argos);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='ArgosRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setArgosRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            argosRaidItem,\r\n            'argos'\r\n          )\r\n        }\r\n        checked={argosRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BaltanRaid({ baltanRaidItem, userTodoData, setUserTodoData }) {\r\n  const [baltanRaid, setBaltanRaid] = useState(baltanRaidItem.baltan);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='BaltanRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBaltanRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            baltanRaidItem,\r\n            'baltan'\r\n          )\r\n        }\r\n        checked={baltanRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BiakissRaid({ biakissRaidItem, userTodoData, setUserTodoData }) {\r\n  const [biakissRaid, setBiakissRaid] = useState(biakissRaidItem.biakiss);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='BiakissRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBiakissRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            biakissRaidItem,\r\n            'biakiss'\r\n          )\r\n        }\r\n        checked={biakissRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction KukseitnRaid({ kukseitnRaidItem, userTodoData, setUserTodoData }) {\r\n  const [kukseitnRaid, setKukseitnRaid] = useState(kukseitnRaidItem.kukuseitn);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='KukseitnRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setKukseitnRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            kukseitnRaidItem,\r\n            'kukuseitn'\r\n          )\r\n        }\r\n        checked={kukseitnRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbrelRaid({ abrelRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abrelRaid, setAbrelRaid] = useState(abrelRaidItem.abrel);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='AbrelRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbrelRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abrelRaidItem,\r\n            'abrel'\r\n          )\r\n        }\r\n        checked={abrelRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport {\r\n  AbyssDun2,\r\n  AbyssRaid,\r\n  RehearsalAndDejavu,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nfunction AddAndChange({ addCharacter, applyChanges }) {\r\n  return (\r\n    <div className=\"headerValueEnd\">\r\n      <Button inverted color=\"olive\" onClick={addCharacter}>\r\n        케릭터 추가\r\n      </Button>\r\n      <Button inverted color=\"red\" onClick={applyChanges}>\r\n        변경사항 저장\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAndChange;\r\n","import React from 'react';\r\nimport { Pagination } from 'semantic-ui-react';\r\n\r\nfunction PaginationComp({ pagination, activePage, pageChange, deviceType }) {\r\n  return (\r\n    <div className='headerValueCenter'>\r\n      <Pagination\r\n        // defaultActivePage={1}\r\n        firstItem={null}\r\n        lastItem={null}\r\n        pointing\r\n        secondary\r\n        totalPages={pagination}\r\n        activePage={activePage}\r\n        onPageChange={(event, data) => pageChange(event, data)}\r\n        size={deviceType === 'mobile' && 'mini'}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginationComp;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction SettingChange({\r\n  viewByCheckBox,\r\n  deviceType,\r\n  changeUserCheckBoxConfigurationFunction,\r\n}) {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  return (\r\n    <div className=\"headerValueStart\">\r\n      <Header size=\"medium\" style={{ color: \"white\", paddingTop: \"5px\" }}>\r\n        {deviceType !== \"mobile\" && today}{\" \"}\r\n        <Label\r\n          as=\"a\"\r\n          basic\r\n          image\r\n          style={{ marginLeft: \"30px\" }}\r\n          onClick={() =>\r\n            changeUserCheckBoxConfigurationFunction(!viewByCheckBox)\r\n          }\r\n        >\r\n          {!viewByCheckBox ? (\r\n            <>\r\n              <Icon name=\"checkmark box\" />\r\n              {deviceType !== \"mobile\" && \"로 보기\"}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Icon name=\"angle double down\" />\r\n              {deviceType !== \"mobile\" && \"로 보기\"}\r\n            </>\r\n          )}\r\n        </Label>\r\n      </Header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingChange;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction AlarmAndNote({\r\n  alarmTrue,\r\n  alarmRestValue,\r\n  userTodoData,\r\n  showNote,\r\n  setShowNote,\r\n}) {\r\n  return (\r\n    <Header\r\n      as=\"h4\"\r\n      style={{\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        padding: \".78571429em 1.5em .78571429em\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={alarmTrue ? \"alarm\" : \"alarm mute\"}\r\n          onClick={() => alarmRestValue(userTodoData)}\r\n        />\r\n        {\"  //  \"}\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={!showNote ? \"sticky note outline\" : \"angle double up\"}\r\n          onClick={() => setShowNote(!showNote)}\r\n        />\r\n      </div>\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default AlarmAndNote;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CharacterToDo.css\";\r\nimport AddCharacter from \"../Utils/AddCharacter\";\r\n\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Container,\r\n  Icon,\r\n  Dimmer,\r\n  Loader,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\nimport RestValue from \"../GridItem/RestValue\";\r\nimport CharacterAvatar from \"./CharacterAvatar\";\r\nimport PerIdNote from \"./PerIdNote\";\r\nimport {\r\n  ChaosDunValue,\r\n  GuardianDunValue,\r\n  EponaValue,\r\n  WeeklyGuardian,\r\n} from \"../GridItem/DungeonAndEpona\";\r\nimport {\r\n  AbyssDun2,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n} from \"../GridItem/AbyssAndRaid\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { backendUrl, axiosConfigAuth } from \"../Utils/ConstVar\";\r\nimport {\r\n  viewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n} from \"../Utils/ViewDataUtil\";\r\nimport AddAndChange from \"../HomeSubComp/AddAndChange\";\r\nimport PaginationComp from \"../HomeSubComp/PaginationComp\";\r\nimport SettingChange from \"../HomeSubComp/SettingChange\";\r\nimport AlarmAndNote from \"../HomeSubComp/AlarmAndNote\";\r\n\r\nfunction CharacterToDoRow({ limit, type }) {\r\n  const todayDate = new Date(Date.now());\r\n\r\n  const [userTodoData, setUserTodoData] = useState([]);\r\n\r\n  const [addCharacterModal, setAddCharacterModal] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const [pagination, setPagination] = useState(0);\r\n\r\n  const [viewByCheckBox, setViewByCheckBox] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const addCharacter = () => {\r\n    setAddCharacterModal(true);\r\n  };\r\n\r\n  const closeAddCharacter = () => {\r\n    setAddCharacterModal(false);\r\n  };\r\n\r\n  const viewPage = async (minusOne = false, plusOne = false, plusPage = 0) => {\r\n    setLoading(true);\r\n    setUserTodoData([]);\r\n\r\n    const resultData = await viewDataMain(\r\n      minusOne,\r\n      plusOne,\r\n      plusPage,\r\n      limit,\r\n      activePage,\r\n      setActivePage,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    if (resultData.success) {\r\n      setUserTodoData(resultData.viewData.data);\r\n      setPagination(resultData.setPage);\r\n    } else {\r\n      toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const applyChanges = async () => {\r\n    setLoading(true);\r\n\r\n    let submitData = userTodoData.filter(\r\n      (item) => item.attributeChanged === true\r\n    );\r\n\r\n    const applyResult = await applyChangesUtil(\r\n      submitData,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    setLoading(false);\r\n    if (applyResult) {\r\n      toastMessage(\"일부 변경사항이 제대로 반영되지 않았습니다\", \"error\");\r\n    }\r\n    viewPage();\r\n  };\r\n\r\n  const pageChange = async (event, data) => {\r\n    setLoading(true);\r\n    setActivePage(data.activePage);\r\n\r\n    // 샙트님 이거 2페이지에 있는 캐릭터 바꾸면 1페이지 같은 자리 있는것두 바뀌는거 같아여\r\n    // 이거 안 해주면 현재 페이지에서 바꾼 ID위치의 정보가 그대로 남아서 사용자에게 모든 페이지의 변경사항이 반영되는 것처럼 보임\r\n    setUserTodoData([]);\r\n\r\n    await axios\r\n      .get(\r\n        `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${data.activePage}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const changeUserCheckBoxConfigurationFunction = async (viewByCheckBox) => {\r\n    const result = await changeUserCheckBoxConfiguration(\r\n      viewByCheckBox,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n    if (result) {\r\n      setViewByCheckBox(viewByCheckBox);\r\n    }\r\n  };\r\n\r\n  // for alarm animation\r\n  const [alarmTrue, setAlarmTrue] = useState(true);\r\n\r\n  // for note per list\r\n  const [showNote, setShowNote] = useState(false);\r\n\r\n  const alarmRestValue = (todoList) => {\r\n    const alarmDataResult = alarmRestValueUtil(todoList, alarmTrue);\r\n    setUserTodoData(alarmDataResult.alarmList);\r\n    setAlarmTrue(alarmDataResult.alarm);\r\n  };\r\n\r\n  // if no user cookie then redirect to login page\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    !loginCookie && history.push(\"/login\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    viewPage();\r\n\r\n    async function callUsersCheckBoxValue() {\r\n      const resultData = await getUserCheckBoxConfiguration(\r\n        cookie.get(\"loadoUserToken\")\r\n      );\r\n      setViewByCheckBox(resultData);\r\n    }\r\n    callUsersCheckBoxValue();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Segment\r\n          className=\"fullPage\"\r\n          style={{ height: \"94vh\", border: \"none\" }}\r\n        >\r\n          <Dimmer active>\r\n            <Loader size=\"big\">로딩중</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      ) : (\r\n        <Segment id=\"gridSegment\">\r\n          <Grid className=\"fullPage\">\r\n            <Container id=\"gridContainer\">\r\n              <Grid.Column width={16}>\r\n                <Segment\r\n                  basic\r\n                  className=\"contentHeader\"\r\n                  style={{ marginBottom: \"0px\" }}\r\n                >\r\n                  <SettingChange\r\n                    viewByCheckBox={viewByCheckBox}\r\n                    setViewByCheckBox={setViewByCheckBox}\r\n                    changeUserCheckBoxConfigurationFunction={\r\n                      changeUserCheckBoxConfigurationFunction\r\n                    }\r\n                  />\r\n                  <PaginationComp\r\n                    pagination={pagination}\r\n                    activePage={activePage}\r\n                    pageChange={pageChange}\r\n                  />\r\n                  <AddAndChange\r\n                    addCharacter={addCharacter}\r\n                    applyChanges={applyChanges}\r\n                  />\r\n                </Segment>\r\n                <Segment\r\n                  basic\r\n                  style={{ backgroundColor: \"dimgray\", marginTop: \"0px\" }}\r\n                >\r\n                  <Grid columns={limit + 1}>\r\n                    <Grid.Row\r\n                      style={{\r\n                        borderBottom: !showNote && \"0.05rem inset ivory\",\r\n                      }}\r\n                    >\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <AlarmAndNote\r\n                          alarmTrue={alarmTrue}\r\n                          alarmRestValue={alarmRestValue}\r\n                          userTodoData={userTodoData}\r\n                          showNote={showNote}\r\n                          setShowNote={setShowNote}\r\n                        />\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <CharacterAvatar\r\n                          itemId={item._id}\r\n                          character={item.character}\r\n                          characterName={item.characterName}\r\n                          attributeChanged={item.attributeChanged}\r\n                          weeklyAttributeChanged={item.weeklyAttributeChanged}\r\n                          axiosConfigAuth={axiosConfigAuth}\r\n                          viewPage={viewPage}\r\n                          alarmCharacter={item.alarmCharacter}\r\n                          limit={limit}\r\n                          dontChange={item.dontChange}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    {showNote && (\r\n                      <Grid.Row\r\n                        style={{\r\n                          padding: 0,\r\n                          borderBottom: \"0.05rem inset ivory\",\r\n                          paddingBottom: \"7px\",\r\n                        }}\r\n                      >\r\n                        <Grid.Column />\r\n                        {userTodoData.map((item, idx) => (\r\n                          <PerIdNote\r\n                            item={item}\r\n                            userTodoData={userTodoData}\r\n                            setUserTodoData={setUserTodoData}\r\n                          />\r\n                        ))}\r\n                      </Grid.Row>\r\n                    )}\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <Icon name=\"calendar check outline\" />\r\n                        휴식게이지\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <RestValue\r\n                          item={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/chaosDun.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>카오스던전</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <ChaosDunValue\r\n                          chaosItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                          viewByCheckBox={viewByCheckBox}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/guardianDun.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>가디언토벌</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <GuardianDunValue\r\n                          guardianItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                          viewByCheckBox={viewByCheckBox}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/epona.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>에포나</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <EponaValue\r\n                          eponaItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                          viewByCheckBox={viewByCheckBox}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/guardianDun.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>주간가디언</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <WeeklyGuardian\r\n                          weeklyGuardianItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                          viewByCheckBox={viewByCheckBox}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/abyss2types.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>오레하2종</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <AbyssDun2\r\n                          abyssDun2Item={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    {/* 원정대 주간 컨탠츠는 안 보이게 하기로 결정 */}\r\n                    {/* <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/abyssWeekly.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>어비스레이드</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbyssRaid\r\n                        idx={idx}\r\n                        abyssRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/rehearsal.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>리허설, 데쟈뷰</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <RehearsalAndDejavu\r\n                        rehearsalAndDejavuItem={item}\r\n                        idx={idx}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row> */}\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/argos.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>아르고스</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <ArgosRaid\r\n                          argosRaidItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow baltanRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/baltan.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>발탄</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <BaltanRaid\r\n                          baltanRaidItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/biakiss.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>비아키스</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <BiakissRaid\r\n                          biakissRaidItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/kukuseitn.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>쿠크세이튼</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <KukseitnRaid\r\n                          kukseitnRaidItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    <Grid.Row className=\"abrelRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <div>\r\n                          <Image\r\n                            src=\"./images/loa_icons/abrel.png\"\r\n                            avatar\r\n                            className=\"contentImage\"\r\n                          />\r\n                          <span>아브렐슈드</span>\r\n                        </div>\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <AbrelRaid\r\n                          abrelRaidItem={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                  </Grid>\r\n                </Segment>\r\n              </Grid.Column>\r\n            </Container>\r\n          </Grid>\r\n        </Segment>\r\n      )}\r\n\r\n      {addCharacterModal && (\r\n        <AddCharacter\r\n          addCharacterModal={addCharacterModal}\r\n          closeAddCharacter={closeAddCharacter}\r\n          userTodoData={userTodoData}\r\n          axiosConfigAuth={axiosConfigAuth}\r\n          viewPage={viewPage}\r\n          limit={limit}\r\n        />\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDoRow;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Image,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  List,\r\n  Button,\r\n  Dropdown,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { characterCdn, characterKorean } from \"../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { backendUrl } from \"../Utils/ConstVar\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport \"./AddCharacter.css\";\r\n\r\nfunction AddCharacter({\r\n  addCharacterModal,\r\n  closeAddCharacter,\r\n  userTodoData,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  limit,\r\n}) {\r\n  const [selectCharacterModal, setSelectCharacterModal] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState(\"\");\r\n  const [characterName, setCharacterName] = useState(\"\");\r\n  const [chaosRestValue, setChaosRestValue] = useState(0);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(0);\r\n  const [eponaRestValue, setEponaRestValue] = useState(0);\r\n  const regex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]+$/;\r\n  const regexNumber = /^[0-9]+$/;\r\n\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n  const mobileInputRef = useRef();\r\n\r\n  const closeSelectCharacter = () => setSelectCharacterModal(false);\r\n\r\n  const modalShow = () => {\r\n    setSelectCharacterModal(true);\r\n  };\r\n\r\n  const classSelected = (event) => {\r\n    let selectedClass;\r\n    if (event.target.className.indexOf(\"image\") > 0) {\r\n      selectedClass = event.target.dataset.options;\r\n    } else {\r\n      selectedClass = event.target.className.split(\" \")[2];\r\n    }\r\n    setSelectedCharacter(selectedClass);\r\n    setSelectCharacterModal(false);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeAddCharacterModal = () => {\r\n    setSelectedCharacter(\"\");\r\n    setCharacterName(\"\");\r\n    setChaosRestValue(0);\r\n    setGuardianRestValue(0);\r\n    setEponaRestValue(0);\r\n    closeAddCharacter();\r\n  };\r\n\r\n  const changeInputCharName = (event, data) => {\r\n    const insertedValue = data.value;\r\n    if (insertedValue.length === 0) {\r\n      setCharacterName(\"\");\r\n      return;\r\n    }\r\n    if (!regex.test(insertedValue) || insertedValue.length > 12) return;\r\n    setCharacterName(insertedValue);\r\n  };\r\n\r\n  const changeRestValue = (event, data) => {\r\n    event.preventDefault();\r\n    if (!regexNumber.test(event.target.value)) return;\r\n    if (event.target.id === \"chaosChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = chaosRestValue + (changedValue - chaosRestValue) * 10;\r\n      if (valueOutput < 0) setChaosRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValue(valueOutput);\r\n      else setChaosRestValue(100);\r\n    }\r\n    if (event.target.id === \"guardianChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput =\r\n        guardianRestValue + (changedValue - guardianRestValue) * 10;\r\n      if (valueOutput < 0) setGuardianRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValue(valueOutput);\r\n      else setGuardianRestValue(100);\r\n    }\r\n    if (event.target.id === \"eponaChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = eponaRestValue + (changedValue - eponaRestValue) * 10;\r\n      if (valueOutput < 0) setEponaRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValue(valueOutput);\r\n      else setEponaRestValue(100);\r\n    }\r\n  };\r\n\r\n  const confirmAddCharacter = () => {\r\n    const createdData = {\r\n      // _id: \"5d725a037b292f5f8ceff795\",\r\n      // user: \"5d7a514b5d2c12c7449be042\",\r\n      character: selectedCharacter,\r\n      characterName: characterName,\r\n      date: Date.now(),\r\n      // idx: 2,\r\n      chaosRestValue,\r\n      guardianRestValue,\r\n      eponaRestValue,\r\n      chaosDone: 0,\r\n      guardianDone: 0,\r\n      eponaDone: 0,\r\n      guardianWeeklyDone: 0,\r\n      abyssDungeon2: false,\r\n      // abyssDungeonWeekly: true,\r\n      // rehearsalAndDejavu: [\"kukuseitn\", \"abrel\"],\r\n      argos: false,\r\n      baltan: false,\r\n      biakiss: false,\r\n      kukuseitn: false,\r\n      abrel: false,\r\n      attributeChanged: false,\r\n      weeklyAttributeChanged: false,\r\n      createdAt: Date.now(),\r\n    };\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/homeworks`,\r\n        createdData,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        // setUserTodoData([...userTodoData, response.data.data]);\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          userTodoData.length % limit === 0\r\n        ) {\r\n          viewPage(false, true, response.data.totalLength);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n        closeAddCharacterModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.error, {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        closeAddCharacterModal();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const classElements = document.getElementsByClassName(\r\n      \"characterClassContent\"\r\n    );\r\n    let eventAdd;\r\n    for (let index = 0; index < classElements.length; index++) {\r\n      eventAdd = classElements[index].addEventListener(\"click\", (event) => {\r\n        classSelected(event);\r\n      });\r\n    }\r\n    return () => {\r\n      for (let index = 0; index < classElements.length; index++) {\r\n        classElements[index].removeEventListener(\"click\", eventAdd);\r\n      }\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById(\"characterNameInputId\");\r\n    const enterEvent = element.addEventListener(\"keypress\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        console.log(buttonRef.current);\r\n        if (buttonRef.current) buttonRef.current.click();\r\n      }\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"keypress\", enterEvent);\r\n    };\r\n  }, []);\r\n\r\n  // for mobile\r\n  const [fullList, setFullList] = useState([]);\r\n  const [mobileDropDownList, setMobileDropDownList] = useState([]);\r\n  useEffect(() => {\r\n    const aList = [];\r\n    for (var key in characterCdn) {\r\n      const addItem = {\r\n        key,\r\n        text: characterKorean[key],\r\n        value: key,\r\n        image: { avatar: true, src: characterCdn[key] },\r\n      };\r\n      aList.push(addItem);\r\n    }\r\n    setFullList(aList);\r\n    setMobileDropDownList(aList);\r\n    if (mobileInputRef.current) mobileInputRef.current.focus();\r\n  }, [selectCharacterModal]);\r\n  const filterDropDown = (event, data) => {\r\n    if (!data.value) {\r\n      setMobileDropDownList(fullList);\r\n      return;\r\n    }\r\n\r\n    const filteredList = fullList.filter((item) => {\r\n      return item.text.indexOf(data.value) > -1;\r\n    });\r\n    setMobileDropDownList(filteredList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={addCharacterModal}\r\n        onClose={closeAddCharacterModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: \"dimgray\" }}>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            {!selectedCharacter ? (\r\n              <>\r\n                <span className=\"itemHeaderAttribute1\">클래스:</span>\r\n                <Icon\r\n                  name=\"add square\"\r\n                  size=\"large\"\r\n                  color=\"white\"\r\n                  onClick={modalShow}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"itemHeaderAttribute2\">클래스:</span>\r\n                <span onClick={() => setSelectCharacterModal(true)}>\r\n                  <Image\r\n                    src={characterCdn[selectedCharacter]}\r\n                    size=\"mini\"\r\n                    avatar\r\n                  />\r\n                  {characterKorean[selectedCharacter]}\r\n                </span>\r\n              </>\r\n            )}\r\n          </Header>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            <span style={{ marginRight: \"40px\" }}>케릭명:</span>\r\n            <Input\r\n              transparent\r\n              placeholder=\"케릭터명\"\r\n              style={{ color: \"white\" }}\r\n              className=\"charNameInput\"\r\n              value={characterName}\r\n              ref={inputRef}\r\n              id=\"characterNameInputId\"\r\n              onChange={(event, data) => changeInputCharName(event, data)}\r\n            />\r\n          </Header>\r\n          <Header className=\"itemHeaderRest\" as=\"h4\">\r\n            <List divided selection>\r\n              <List.Item>\r\n                <Label horizontal>카오스던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={chaosRestValue}\r\n                  id=\"chaosChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>가디언던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={guardianRestValue}\r\n                  id=\"guardianChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>에포나</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={eponaRestValue}\r\n                  id=\"eponaChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n            </List>\r\n          </Header>\r\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <Button\r\n              circular\r\n              color=\"google plus\"\r\n              icon=\"cancel\"\r\n              onClick={closeAddCharacterModal}\r\n            />\r\n            <Button\r\n              circular\r\n              color=\"twitter\"\r\n              icon=\"check\"\r\n              onClick={confirmAddCharacter}\r\n            />\r\n            <button\r\n              ref={buttonRef}\r\n              onClick={confirmAddCharacter}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n      {selectCharacterModal && (\r\n        <Modal\r\n          open={selectCharacterModal}\r\n          onClose={closeSelectCharacter}\r\n          // centered={false}\r\n          className=\"classSelectModal\"\r\n        >\r\n          <Modal.Header\r\n            style={{\r\n              backgroundColor: \"#384862\",\r\n              color: \"white\",\r\n              borderBottom: \"1px solid white\",\r\n            }}\r\n          >\r\n            클래스선택\r\n          </Modal.Header>\r\n          <Modal.Content style={{ backgroundColor: \"#384862\", color: \"white\" }}>\r\n            <Segment>\r\n              <Input\r\n                icon=\"search\"\r\n                iconPosition=\"left\"\r\n                className=\"search\"\r\n                ref={mobileInputRef}\r\n                onChange={(event, data) => filterDropDown(event, data)}\r\n              />\r\n              <br />\r\n              <Dropdown open={true}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Header icon=\"tags\" content=\"직업\" />\r\n                  <Dropdown.Menu scrolling>\r\n                    {mobileDropDownList.map((option) => (\r\n                      <Dropdown.Item\r\n                        key={option.value}\r\n                        {...option}\r\n                        onClick={(event, data) => {\r\n                          setSelectedCharacter(data.value);\r\n                          setSelectCharacterModal(false);\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </Dropdown.Menu>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Segment>\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Modal, Image, Button } from \"semantic-ui-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { characterCdn } from \"../../_data/characterDefinition\";\r\n\r\nfunction RestValueMobile({ item, userTodoData, setUserTodoData }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(item._id);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowModal(true);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  // if you use setShowModal directly in Modal onClose, react will throw error\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [chaosRestValue, setChaosRestValue] = useState(item.chaosRestValue);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValue, setEponaRestValue] = useState(item.eponaRestValue);\r\n\r\n  const [chaosRestValueChange, setChaosRestValueChange] = useState(\r\n    item.chaosRestValue\r\n  );\r\n  const [guardianRestValueChange, setGuardianRestValueChange] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValueChange, setEponaRestValueChange] = useState(\r\n    item.eponaRestValue\r\n  );\r\n\r\n  const valueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"chaosChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        chaosRestValueChange + (changedValue - chaosRestValueChange) * 10;\r\n      if (valueOutput < 0) setChaosRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValueChange(valueOutput);\r\n      else setChaosRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"guardianChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        guardianRestValueChange + (changedValue - guardianRestValueChange) * 10;\r\n      if (valueOutput < 0) setGuardianRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValueChange(valueOutput);\r\n      else setGuardianRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"eponaChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        eponaRestValueChange + (changedValue - eponaRestValueChange) * 10;\r\n      if (valueOutput < 0) setEponaRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValueChange(valueOutput);\r\n      else setEponaRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const confirmValue = () => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === item._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"chaosRestValue\"] = chaosRestValueChange;\r\n    newArr[indexValue][\"guardianRestValue\"] = guardianRestValueChange;\r\n    newArr[indexValue][\"eponaRestValue\"] = eponaRestValueChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column id={item._id}>\r\n        카오스: {item.chaosRestValue}\r\n        <br />\r\n        가디언: {item.guardianRestValue}\r\n        <br />\r\n        에포나: {item.eponaRestValue}\r\n      </Grid.Column>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Header>\r\n          <Image src={characterCdn[item.character]} size=\"mini\" avatar />\r\n          {item.characterName}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextField\r\n            id=\"chaosChange\"\r\n            type=\"number\"\r\n            label=\"카오스던전\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={chaosRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"guardianChange\"\r\n            type=\"number\"\r\n            label=\"가디언토벌\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={guardianRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"eponaChange\"\r\n            type=\"number\"\r\n            label=\"에포나\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={eponaRestValueChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={closeModal}>\r\n            취소\r\n          </Button>\r\n          <Button positive onClick={confirmValue}>\r\n            확인\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestValueMobile;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction AlarmAndNoteMobile({\r\n  alarmTrue,\r\n  alarmRestValue,\r\n  userTodoData,\r\n  showNote,\r\n  setShowNote,\r\n}) {\r\n  return (\r\n    <Header\r\n      as=\"h4\"\r\n      style={{\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        padding: \".78571429em 1.5em .78571429em\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={alarmTrue ? \"alarm\" : \"alarm mute\"}\r\n          onClick={() => alarmRestValue(userTodoData)}\r\n        />\r\n        {\"  //  \"}\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={!showNote ? \"sticky note outline\" : \"angle double up\"}\r\n          onClick={() => setShowNote(!showNote)}\r\n        />\r\n      </div>\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default AlarmAndNoteMobile;\r\n","import { Image } from 'semantic-ui-react';\r\n\r\nconst showContentPopupValue = (content) => {\r\n  const justContent = (\r\n    <div\r\n      style={{\r\n        backgroundColor: 'rgb(56, 72, 98)',\r\n        color: 'white',\r\n        padding: '5px',\r\n        fontSize: '10px',\r\n      }}\r\n    >\r\n      {content}\r\n    </div>\r\n  );\r\n\r\n  const contentKeyKorToEng = {\r\n    휴식게이지: 'calendar',\r\n    카오스던전: 'chaosDun',\r\n    가디언던전: 'guardianDun',\r\n    에포나: 'epona',\r\n    주간가디언: 'guardianDun',\r\n    어비스던전: 'abyss2types',\r\n    아르고스: 'argos',\r\n    발탄: 'baltan',\r\n    비아키스: 'biakiss',\r\n    쿠크세이튼: 'kukuseitn',\r\n    아브렐슈드: 'abrel',\r\n  };\r\n\r\n  const imageContent = (\r\n    <div>\r\n      <Image\r\n        src={`./images/loa_icons/${contentKeyKorToEng[content]}.png`}\r\n        avatar\r\n        className='contentImage'\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return [imageContent, justContent];\r\n};\r\n\r\nexport { showContentPopupValue };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CharacterToDo.css\";\r\nimport AddCharacterMobile from \"../Utils/AddCharacterMobile\";\r\n\r\nimport { Segment, Grid, Icon, Dimmer, Loader, Popup } from \"semantic-ui-react\";\r\nimport RestValueMobile from \"../GridItem/RestValueMobile\";\r\nimport CharacterAvatar from \"./CharacterAvatar\";\r\nimport {\r\n  ChaosDunValue,\r\n  GuardianDunValue,\r\n  EponaValue,\r\n  WeeklyGuardian,\r\n} from \"../GridItem/DungeonAndEpona\";\r\nimport {\r\n  AbyssDun2,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n} from \"../GridItem/AbyssAndRaid\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { backendUrl, axiosConfigAuth } from \"../Utils/ConstVar\";\r\nimport {\r\n  viewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n} from \"../Utils/ViewDataUtil\";\r\nimport AddAndChange from \"../HomeSubComp/AddAndChange\";\r\nimport PaginationComp from \"../HomeSubComp/PaginationComp\";\r\nimport SettingChange from \"../HomeSubComp/SettingChange\";\r\nimport AlarmAndNoteMobile from \"../HomeSubComp/AlarmAndNoteMobile\";\r\nimport { showContentPopupValue } from \"../Utils/ContentDefinition\";\r\nimport PerIdNote from \"./PerIdNote\";\r\n\r\nfunction CharacterToDoRowMobile({ limit, type }) {\r\n  const [userTodoData, setUserTodoData] = useState([]);\r\n\r\n  const [addCharacterModal, setAddCharacterModal] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const [pagination, setPagination] = useState(0);\r\n\r\n  const [viewByCheckBox, setViewByCheckBox] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const addCharacter = () => {\r\n    setAddCharacterModal(true);\r\n  };\r\n\r\n  const closeAddCharacter = () => {\r\n    setAddCharacterModal(false);\r\n  };\r\n\r\n  const viewPage = async (minusOne = false, plusOne = false, plusPage = 0) => {\r\n    setLoading(true);\r\n    setUserTodoData([]);\r\n\r\n    const resultData = await viewDataMain(\r\n      minusOne,\r\n      plusOne,\r\n      plusPage,\r\n      limit,\r\n      activePage,\r\n      setActivePage,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    if (resultData.success) {\r\n      setUserTodoData(resultData.viewData.data);\r\n      setPagination(resultData.setPage);\r\n    } else {\r\n      toastMessage(\"데이터를 불러오지 못했습니다\", \"error\", \"mobile\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const applyChanges = async () => {\r\n    setLoading(true);\r\n\r\n    let submitData = userTodoData.filter(\r\n      (item) => item.attributeChanged === true\r\n    );\r\n\r\n    const applyResult = await applyChangesUtil(\r\n      submitData,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    setLoading(false);\r\n    if (applyResult) {\r\n      toastMessage(\"일부 변경사항이 제대로 반영되지 않았습니다\", \"error\");\r\n    }\r\n    viewPage();\r\n  };\r\n\r\n  const pageChange = async (event, data) => {\r\n    setLoading(true);\r\n    setActivePage(data.activePage);\r\n\r\n    // 샙트님 이거 2페이지에 있는 캐릭터 바꾸면 1페이지 같은 자리 있는것두 바뀌는거 같아여\r\n    // 이거 안 해주면 현재 페이지에서 바꾼 ID위치의 정보가 그대로 남아서 사용자에게 모든 페이지의 변경사항이 반영되는 것처럼 보임\r\n    setUserTodoData([]);\r\n\r\n    await axios\r\n      .get(\r\n        `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${data.activePage}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const changeUserCheckBoxConfigurationFunction = async (viewByCheckBox) => {\r\n    const result = await changeUserCheckBoxConfiguration(\r\n      viewByCheckBox,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n    if (result) {\r\n      setViewByCheckBox(viewByCheckBox);\r\n    }\r\n  };\r\n\r\n  // for alarm animation\r\n  const [alarmTrue, setAlarmTrue] = useState(true);\r\n\r\n  // for note per list\r\n  const [showNote, setShowNote] = useState(false);\r\n\r\n  const alarmRestValue = (todoList) => {\r\n    const alarmDataResult = alarmRestValueUtil(todoList, alarmTrue);\r\n    setUserTodoData(alarmDataResult.alarmList);\r\n    setAlarmTrue(alarmDataResult.alarm);\r\n  };\r\n\r\n  // if no user cookie then redirect to login page\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    !loginCookie && history.push(\"/login\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    viewPage();\r\n\r\n    async function callUsersCheckBoxValue() {\r\n      const resultData = await getUserCheckBoxConfiguration(\r\n        cookie.get(\"loadoUserToken\")\r\n      );\r\n      setViewByCheckBox(resultData);\r\n    }\r\n    callUsersCheckBoxValue();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Segment\r\n          className=\"fullPage\"\r\n          style={{ height: \"94vh\", border: \"none\" }}\r\n        >\r\n          <Dimmer active>\r\n            <Loader size=\"big\">로딩중</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      ) : (\r\n        <Segment id=\"mobileMainPageSegment\">\r\n          <PaginationComp\r\n            pagination={pagination}\r\n            activePage={activePage}\r\n            pageChange={pageChange}\r\n            deviceType=\"mobile\"\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              marginTop: \"20px\",\r\n              justifyContent: \"space-between\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <SettingChange\r\n              viewByCheckBox={viewByCheckBox}\r\n              changeUserCheckBoxConfigurationFunction={\r\n                changeUserCheckBoxConfigurationFunction\r\n              }\r\n              deviceType=\"mobile\"\r\n            />\r\n            <AddAndChange\r\n              addCharacter={addCharacter}\r\n              applyChanges={applyChanges}\r\n              style={{ fontSize: \"5px\" }}\r\n            />\r\n          </div>\r\n          <Segment basic id=\"mobileSegmentGrid\">\r\n            <Grid columns={limit + 1}>\r\n              <Grid.Row\r\n                style={{\r\n                  borderBottom: !showNote && \"0.05rem inset ivory\",\r\n                }}\r\n              >\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <AlarmAndNoteMobile\r\n                    alarmTrue={alarmTrue}\r\n                    alarmRestValue={alarmRestValue}\r\n                    userTodoData={userTodoData}\r\n                    showNote={showNote}\r\n                    setShowNote={setShowNote}\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <CharacterAvatar\r\n                    itemId={item._id}\r\n                    character={item.character}\r\n                    characterName={item.characterName}\r\n                    attributeChanged={item.attributeChanged}\r\n                    weeklyAttributeChanged={item.weeklyAttributeChanged}\r\n                    axiosConfigAuth={axiosConfigAuth}\r\n                    viewPage={viewPage}\r\n                    alarmCharacter={item.alarmCharacter}\r\n                    limit={limit}\r\n                    dontChange={item.dontChange}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    deviceType=\"mobile\"\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              {showNote && (\r\n                <Grid.Row\r\n                  style={{\r\n                    padding: 0,\r\n                    borderBottom: \"0.05rem inset ivory\",\r\n                    paddingBottom: \"7px\",\r\n                  }}\r\n                >\r\n                  <Grid.Column />\r\n                  {userTodoData.map((item, idx) => (\r\n                    <PerIdNote\r\n                      item={item}\r\n                      userTodoData={userTodoData}\r\n                      setUserTodoData={setUserTodoData}\r\n                      deviceType=\"mobile\"\r\n                    />\r\n                  ))}\r\n                </Grid.Row>\r\n              )}\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={\r\n                      <Icon\r\n                        name=\"calendar check outline\"\r\n                        style={{ fontSize: \"21px\" }}\r\n                      />\r\n                    }\r\n                    content={showContentPopupValue(\"휴식게이지\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <RestValueMobile\r\n                    item={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"카오스던전\")[0]}\r\n                    content={showContentPopupValue(\"카오스던전\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <ChaosDunValue\r\n                    chaosItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"가디언던전\")[0]}\r\n                    content={showContentPopupValue(\"가디언던전\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <GuardianDunValue\r\n                    guardianItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"에포나\")[0]}\r\n                    content={showContentPopupValue(\"에포나\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <EponaValue\r\n                    eponaItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"주간가디언\")[0]}\r\n                    content={showContentPopupValue(\"주간가디언\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <WeeklyGuardian\r\n                    weeklyGuardianItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"어비스던전\")[0]}\r\n                    content={showContentPopupValue(\"어비스던전\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <AbyssDun2\r\n                    abyssDun2Item={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"아르고스\")[0]}\r\n                    content={showContentPopupValue(\"아르고스\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <ArgosRaid\r\n                    argosRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow baltanRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"발탄\")[0]}\r\n                    content={showContentPopupValue(\"발탄\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <BaltanRaid\r\n                    baltanRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"비아키스\")[0]}\r\n                    content={showContentPopupValue(\"비아키스\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <BiakissRaid\r\n                    biakissRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"쿠크세이튼\")[0]}\r\n                    content={showContentPopupValue(\"쿠크세이튼\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <KukseitnRaid\r\n                    kukseitnRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"abrelRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"아브렐슈드\")[0]}\r\n                    content={showContentPopupValue(\"아브렐슈드\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <AbrelRaid\r\n                    abrelRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        </Segment>\r\n      )}\r\n\r\n      {addCharacterModal && (\r\n        <AddCharacterMobile\r\n          addCharacterModal={addCharacterModal}\r\n          closeAddCharacter={closeAddCharacter}\r\n          userTodoData={userTodoData}\r\n          axiosConfigAuth={axiosConfigAuth}\r\n          viewPage={viewPage}\r\n          limit={limit}\r\n        />\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDoRowMobile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { backendUrl, axiosConfig } from \"../Utils/ConstVar\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState(\"로그인이 필요합니다\");\r\n  const [user, setUser] = useState({\r\n    id: cookie.get(\"loginId\") ? cookie.get(\"loginId\") : \"\",\r\n    password: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/login`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set(\"loadoUserToken\", token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set(\"loadoUserCookie\", JSON.stringify(userCookie));\r\n          history.push(\"/userhomework\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.request);\r\n        // console.log(err.response);\r\n        // console.log(err.message);\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    loginCookie && history.push(\"/userhomework\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\", marginTop: \"0\", backgroundColor: \"dimgray\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as=\"h2\" textAlign=\"center\" style={{ color: \"white\" }}>\r\n            <Image src=\"https://react.semantic-ui.com/logo.png\" />{\" \"}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size=\"large\" onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"ID\"\r\n                name=\"id\"\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\r\n                로그인\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            계정이 없으신가요?{\" \"}\r\n            <a href=\"#\" onClick={() => history.push(\"/register\")}>\r\n              가입\r\n            </a>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { backendUrl, axiosConfig } from '../Utils/ConstVar';\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState('회원가입');\r\n  const [user, setUser] = useState({\r\n    id: '',\r\n    password: '',\r\n    name: '',\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/register`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n          name: user.name,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set('loadoUserToken', token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set('loadoUserCookie', JSON.stringify(userCookie));\r\n          history.push('/userhomework');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        textAlign='center'\r\n        style={{ height: '100vh', marginTop: '0', backgroundColor: 'dimgray' }}\r\n        verticalAlign='middle'\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as='h2' textAlign='center' style={{ color: 'white' }}>\r\n            <Image src='https://react.semantic-ui.com/logo.png' />{' '}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size='large' onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon='user'\r\n                iconPosition='left'\r\n                placeholder='ID'\r\n                name='id'\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='lock'\r\n                iconPosition='left'\r\n                placeholder='비밀번호'\r\n                type='password'\r\n                name='password'\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='quote left'\r\n                iconPosition='left'\r\n                placeholder='이름'\r\n                name='name'\r\n                onChange={handleChange}\r\n                value={user.name}\r\n              />\r\n\r\n              <Button color='teal' fluid size='large' type='submit'>\r\n                가입\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            비밀번호를 잊어버리시면 복구가 불가능합니다\r\n            <br />\r\n            [비밀번호는 암호화되어 저장됩니다]\r\n            <br />\r\n            [예시: .....APvs6TgQOG5d8byxYdLJOD0O6Am.....]\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Grid, Segment } from 'semantic-ui-react';\r\nimport NavHeader from './Components/Nav/NavHeader';\r\nimport NavHeaderMobile from './Components/Nav/NavHeaderMobile';\r\nimport CharacterToDo from './Components/Home/CharacterToDo';\r\nimport CharacterToDoRow from './Components/Home/CharacterToDoRow';\r\nimport CharacterToDoRowMobile from './Components/Home/CharacterToDoRowMobile';\r\nimport Login from './Components/Home/Login';\r\nimport Register from './Components/Home/Register';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { createMedia } from '@artsy/fresnel';\r\n\r\nconst AppMedia = createMedia({\r\n  breakpoints: { zero: 0, mobile: 549, tablet: 850, computer: 1080 },\r\n});\r\n\r\nconst mediaStyles = AppMedia.createMediaStyle();\r\nconst { Media, MediaContextProvider } = AppMedia;\r\n\r\nfunction App() {\r\n  return (\r\n    <MediaContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/userhomework'>\r\n            <>\r\n              <Media between={['zero', 'tablet']}>\r\n                <Segment\r\n                  style={{\r\n                    backgroundColor: '#384862',\r\n                    padding: '0px',\r\n                    border: 'none',\r\n                    height: '100%',\r\n                    width: '100%',\r\n                  }}\r\n                >\r\n                  <NavHeaderMobile />\r\n                  <CharacterToDoRowMobile\r\n                    limit={3}\r\n                    type='mobile'\r\n                    style={{ padding: '0px' }}\r\n                  />\r\n                </Segment>\r\n              </Media>\r\n              <Media between={['tablet', 'computer']}>\r\n                <Segment id='biggerThanTablet'>\r\n                  <NavHeader />\r\n                  <CharacterToDoRow limit={6} type='mobile' />\r\n                </Segment>\r\n              </Media>\r\n              <Media greaterThanOrEqual='computer'>\r\n                <Segment id='biggerThanTablet'>\r\n                  <NavHeader />\r\n                  <CharacterToDoRow limit={8} type='computer' />\r\n                </Segment>\r\n              </Media>\r\n              {/* <Grid stackable style={{ border: \"none\" }}>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    background: \"lightCoral\",\r\n                  }}\r\n                >\r\n                  <Grid.Column style={{ border: \"none\" }}>\r\n                    <NavHeader />\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    paddingTop: \"0rem\",\r\n                    height: \"94vh\",\r\n                    backgroundColor: \"#384862\",\r\n                  }}\r\n                >\r\n                  <Grid.Column>\r\n                    <Media between={[\"zero\", \"tablet\"]}>\r\n                      <CharacterToDoRowMobile limit={4} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media between={[\"tablet\", \"computer\"]}>\r\n                      <CharacterToDoRow limit={6} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media greaterThanOrEqual=\"computer\">\r\n                      <CharacterToDoRow limit={8} type=\"computer\" />\r\n                    </Media>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid> */}\r\n            </>\r\n          </Route>\r\n          <Route path='/login'>\r\n            <Login />\r\n          </Route>\r\n          <Route path='/register'>\r\n            <Register />\r\n          </Route>\r\n          <Route path='/' exact>\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </MediaContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}