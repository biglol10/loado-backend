{"version":3,"sources":["Components/Nav/NavHeader.js","Components/Home/CharacterToDo.js","_data/characterDefinition.js","Components/Utils/ConstVar.js","Components/Utils/AddCharacter.js","Components/GridItem/RestValue.js","Components/Home/CharacterAvatar.js","Components/GridItem/DungeonAndEpona.js","Components/GridItem/AbyssAndRaid.js","Components/Home/CharacterToDoRow.js","Components/Home/Login.js","App.js","index.js"],"names":["NavHeader","userIdString","cookie","get","userValue","JSON","parse","history","useHistory","Menu","style","backgroundColor","height","borderRadius","borderless","Item","Header","size","marginRight","marginLeft","color","fontStyle","Icon","name","padding","Popup","on","position","trigger","display","cursor","userName","Button","content","onClick","userId","set","remove","push","CharacterToDo","characterCdn","berserker","warlord","destroyer","holyknight","battlemaster","infighter","soulmaster","lancemaster","striker","devilhunter","blaster","hawkeye","scouter","gunslinger","summoner","arcana","bard","sorceress","blade","demonic","reaper","characterKorean","backendUrl","AddCharacter","addCharacterModal","closeAddCharacter","userTodoData","axiosConfig","viewPage","limit","useState","selectCharacterModal","setSelectCharacterModal","selectedCharacter","setSelectedCharacter","characterName","setCharacterName","chaosRestValue","setChaosRestValue","guardianRestValue","setGuardianRestValue","eponaRestValue","setEponaRestValue","regex","regexNumber","inputRef","useRef","classSelected","event","selectedClass","target","className","indexOf","dataset","options","split","current","focus","closeAddCharacterModal","changeRestValue","data","preventDefault","test","value","id","changedValue","valueOutput","useEffect","eventAdd","classElements","document","getElementsByClassName","index","length","addEventListener","removeEventListener","Modal","open","onClose","closeIcon","closeOnDimmerClick","Content","as","Image","src","avatar","Input","transparent","placeholder","ref","onChange","insertedValue","changeInputCharName","List","divided","selection","Label","horizontal","justifyContent","circular","icon","createdData","character","date","Date","now","chaosDone","guardianDone","eponaDone","guardianWeeklyDone","abyssDungeon2","argos","baltan","biakiss","kukuseitn","abrel","attributeChanged","weeklyAttributeChanged","createdAt","axios","post","then","response","totalLength","catch","err","toast","error","POSITION","BOTTOM_LEFT","borderBottom","Grid","columns","Row","Column","marginTop","autoClose","RestValue","item","setUserTodoData","showModal","setShowModal","element","getElementById","_id","rightclickEvent","closeModal","chaosRestValueChange","setChaosRestValueChange","guardianRestValueChange","setGuardianRestValueChange","eponaRestValueChange","setEponaRestValueChange","valueChange","e","TextField","type","label","Actions","negative","positive","indexValue","findIndex","anItem","newArr","CharacterAvatar","itemId","alarmCharacter","deleteIcon","showDeleteIcon","delete","console","log","message","ChaosDunValue","chaosItem","key","text","chaosData","setChaosData","paddingTop","Dropdown","changeData","GuardianDunValue","guardianItem","guardianData","setGuardianData","EponaValue","eponaItem","eponaData","setEponaData","WeeklyGuardian","weeklyGuardianItem","weeklyGuardianData","setWeeklyGuardianData","changeDatafunction","setItem","findIndexItem","changeItem","checked","attrChanged","AbyssDun2","abyssDun2Item","abyssDun2","setAbyssDun2","Checkbox","AbyssRaid","idx","abyssRaidItem","abyssDungeonWeekly","abyssRaid","setAbyssRaid","RehearsalAndDejavu","rehearsalAndDejavuItem","rehearsalAndDejavu","setRehearsalAndDejavu","width","fluid","multiple","ArgosRaid","argosRaidItem","argosRaid","setArgosRaid","BaltanRaid","baltanRaidItem","baltanRaid","setBaltanRaid","BiakissRaid","biakissRaidItem","biakissRaid","setBiakissRaid","KukseitnRaid","kukseitnRaidItem","kukseitnRaid","setKukseitnRaid","AbrelRaid","abrelRaidItem","abrelRaid","setAbrelRaid","CharacterToDoRow","todayDate","today","getFullYear","getMonth","getDate","setAddCharacterModal","loading","setLoading","activePage","setActivePage","pagination","setPagination","headers","Authorization","minusOne","plusOne","plusPage","searchString","Math","floor","totalPage","applyChanges","a","errorOccured","submitData","filter","put","weeklySubmitData","alarmTrue","setAlarmTrue","Segment","border","Dimmer","active","Loader","Container","basic","marginBottom","Pagination","firstItem","lastItem","pointing","secondary","totalPages","onPageChange","pageChange","inverted","background","todoList","alarmList","map","alarmList1","alarmRestValue","Login","loginMessage","setLoginMessage","password","user","setUser","handleChange","prev","textAlign","verticalAlign","maxWidth","Form","onSubmit","success","token","userCookie","stringify","stacked","iconPosition","Message","href","AppMedia","createMedia","breakpoints","zero","mobile","tablet","computer","Media","createMediaStyle","MediaContextProvider","App","path","stackable","paddingBottom","between","greaterThanOrEqual","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8ab53624.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Menu, Header, Icon, Popup, Button } from \"semantic-ui-react\";\r\nimport cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction NavHeader() {\r\n  let userIdString = cookie.get(\"loadoUserCookie\");\r\n  let userValue = userIdString && JSON.parse(userIdString);\r\n  const history = useHistory();\r\n\r\n  const logoutUser = (userId) => {\r\n    cookie.set(\"loginId\", userId);\r\n    cookie.remove(\"loadoUserCookie\");\r\n    cookie.remove(\"token\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        style={{\r\n          backgroundColor: \"lightcoral\",\r\n          height: \"6vh\",\r\n          borderRadius: \"0px\",\r\n        }}\r\n        borderless\r\n      >\r\n        <Menu.Item>\r\n          <Header\r\n            size=\"large\"\r\n            style={{ marginRight: \"150px\", marginLeft: \"50px\", color: \"white\" }}\r\n          >\r\n            <span style={{ fontStyle: \"italic\" }}>\r\n              <Icon name=\"game\" />\r\n              LoaDo\r\n            </span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header size=\"small\" style={{ color: \"white\", padding: \"0 50px\" }}>\r\n            <Icon name=\"list ul\" />\r\n            ToDo\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item style={{ marginLeft: \"auto\", marginRight: \"50px\" }}>\r\n          <Popup\r\n            on=\"click\"\r\n            position=\"top right\"\r\n            trigger={\r\n              <Header\r\n                size=\"small\"\r\n                style={{\r\n                  color: \"white\",\r\n                  padding: \"0 50px\",\r\n                  display: \"flex\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <Icon name=\"user\" />\r\n                {userValue && userValue.userName}\r\n              </Header>\r\n            }\r\n          >\r\n            <p>로그아웃 하시겠습니까?</p>\r\n            <Button\r\n              color=\"red\"\r\n              content=\"로그아웃\"\r\n              onClick={() => logoutUser(userValue.userId)}\r\n            />\r\n          </Popup>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeader;\r\n","import React, { useState } from \"react\";\r\nimport \"./CharacterToDo.css\";\r\nimport { Header, Button, Segment, Grid, Container } from \"semantic-ui-react\";\r\nimport TodoComponent from \"../Todo/TodoComponent\";\r\nimport todoData from \"../../_data/todoData.js\";\r\n\r\nfunction CharacterToDo() {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  const [userTodoData, setUserTodoData] = useState(todoData);\r\n\r\n  const [iconId, setIconId] = useState(\"\");\r\n\r\n  const [changedList, setChangedList] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <Grid className=\"fullPage\">\r\n        <Container\r\n          style={{ width: \"95%\", marginLeft: \"2.5%\", marginRight: \"2.5%\" }}\r\n        >\r\n          <Grid.Column width={16}>\r\n            <Segment basic style={{ marginBottom: \"0px\" }}>\r\n              <Header\r\n                size=\"huge\"\r\n                style={{ color: \"deepskyblue\", textAlign: \"center\" }}\r\n              >\r\n                로아 숙제관리\r\n              </Header>\r\n            </Segment>\r\n            <Segment basic className=\"contentHeader\">\r\n              <div className=\"headerValueStart\">\r\n                <Header size=\"medium\" style={{ color: \"white\" }}>\r\n                  {today}{\" \"}\r\n                  <span style={{ marginLeft: \"40px\" }}>\r\n                    금일 06:00 ~ 명일 05:59\r\n                  </span>\r\n                </Header>\r\n              </div>\r\n              <div className=\"headerValueEnd\">\r\n                <Button inverted color=\"red\">\r\n                  변경사항 저장\r\n                </Button>\r\n              </div>\r\n            </Segment>\r\n            <Segment basic style={{ backgroundColor: \"slategrey\" }}>\r\n              <Grid columns={16}>\r\n                <Grid.Row style={{ borderBottom: \"0.05rem inset ivory\" }}>\r\n                  <Grid.Column style={{ width: \"150px\" }}></Grid.Column>\r\n                  <Grid.Column width={2}>휴식게이지</Grid.Column>\r\n                  <Grid.Column width={12}>\r\n                    <Grid columns=\"equal\">\r\n                      <Grid.Row>\r\n                        <Grid.Column>카오스던전</Grid.Column>\r\n                        <Grid.Column>가디언토벌</Grid.Column>\r\n                        <Grid.Column>에포나</Grid.Column>\r\n                        <Grid.Column>가디언레이드</Grid.Column>\r\n                        <Grid.Column>어비스2종</Grid.Column>\r\n                        <Grid.Column width={2}>주간던전</Grid.Column>\r\n                        <Grid.Column>아르고스</Grid.Column>\r\n                        <Grid.Column>발탄</Grid.Column>\r\n                        <Grid.Column>비아키스</Grid.Column>\r\n                        <Grid.Column>쿠크세이튼</Grid.Column>\r\n                        <Grid.Column>아브렐슈드</Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                {userTodoData.map((item, idx) => (\r\n                  <TodoComponent\r\n                    listId={item._id}\r\n                    userTodoData={item}\r\n                    setUserTodoData={setUserTodoData}\r\n                    iconId={iconId}\r\n                    setIconId={setIconId}\r\n                    setChangedList={setChangedList}\r\n                    thisItemChanged={\r\n                      changedList.includes(item._id)\r\n                        ? \"thisItemChanged\"\r\n                        : \"thisItemNotChanged\"\r\n                    }\r\n                  />\r\n                ))}\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Container>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDo;\r\n","const characterCdn = {\r\n  berserker:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/berserker_s.png\",\r\n  warlord:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/warlord_s.png\",\r\n  destroyer:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/destroyer_s.png\",\r\n  holyknight:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/holyknight_s.png\",\r\n  battlemaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/battlemaster_s.png\",\r\n  infighter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/infighter_s.png\",\r\n  soulmaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/soulmaster_s.png\",\r\n  lancemaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/lancemaster_s.png\",\r\n  striker:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/striker_s.png\",\r\n  devilhunter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/devilhunter_s.png\",\r\n  blaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blaster_s.png\",\r\n  hawkeye:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/hawkeye_s.png\",\r\n  scouter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/scouter_s.png\",\r\n  gunslinger:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/gunslinger_s.png\",\r\n  summoner:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/summoner_s.png\",\r\n  arcana:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/arcana_s.png\",\r\n  bard: \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/bard_s.png\",\r\n  sorceress:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/sorceress_s.png\",\r\n  blade:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blade_s.png\",\r\n  demonic:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/demonic_s.png\",\r\n  reaper:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/reaper_s.png\",\r\n};\r\n\r\nconst characterKorean = {\r\n  arcana: \"아르카나\",\r\n  bard: \"바드\",\r\n  battlemaster: \"배틀마스터\",\r\n  berserker: \"버서커\",\r\n  blade: \"블레이드\",\r\n  blaster: \"블래스터\",\r\n  demonic: \"데모닉\",\r\n  destroyer: \"디스트로이어\",\r\n  devilhunter: \"데빌헌터\",\r\n  gunslinger: \"건슬링어\",\r\n  hawkeye: \"호크아이\",\r\n  holyknight: \"홀리나이트\",\r\n  infighter: \"인파이터\",\r\n  lancemaster: \"창술사\",\r\n  reaper: \"리퍼\",\r\n  scouter: \"스카우터\",\r\n  sorceress: \"소서리스\",\r\n  soulmaster: \"기공사\",\r\n  striker: \"스트라이커\",\r\n  summoner: \"서머너\",\r\n  warlord: \"워로드\",\r\n};\r\n\r\nexport { characterCdn, characterKorean };\r\n","const backendUrl = \"https://loado-app.herokuapp.com\";\r\n\r\nexport default backendUrl;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  List,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport { characterCdn, characterKorean } from \"../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport backendUrl from \"../Utils/ConstVar\";\r\n\r\nimport \"./AddCharacter.css\";\r\n\r\nfunction AddCharacter({\r\n  addCharacterModal,\r\n  closeAddCharacter,\r\n  userTodoData,\r\n  axiosConfig,\r\n  viewPage,\r\n  limit,\r\n}) {\r\n  const [selectCharacterModal, setSelectCharacterModal] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState(\"\");\r\n  const [characterName, setCharacterName] = useState(\"\");\r\n  const [chaosRestValue, setChaosRestValue] = useState(0);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(0);\r\n  const [eponaRestValue, setEponaRestValue] = useState(0);\r\n  const regex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]+$/;\r\n  const regexNumber = /^[0-9]+$/;\r\n\r\n  const inputRef = useRef();\r\n\r\n  const closeSelectCharacter = () => setSelectCharacterModal(false);\r\n\r\n  const modalShow = () => {\r\n    setSelectCharacterModal(true);\r\n  };\r\n\r\n  const classSelected = (event) => {\r\n    let selectedClass;\r\n    if (event.target.className.indexOf(\"image\") > 0) {\r\n      selectedClass = event.target.dataset.options;\r\n    } else {\r\n      selectedClass = event.target.className.split(\" \")[2];\r\n    }\r\n    setSelectedCharacter(selectedClass);\r\n    setSelectCharacterModal(false);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeAddCharacterModal = () => {\r\n    setSelectedCharacter(\"\");\r\n    setCharacterName(\"\");\r\n    setChaosRestValue(0);\r\n    setGuardianRestValue(0);\r\n    setEponaRestValue(0);\r\n    closeAddCharacter();\r\n  };\r\n\r\n  const changeInputCharName = (event, data) => {\r\n    const insertedValue = data.value;\r\n    if (insertedValue.length === 0) {\r\n      setCharacterName(\"\");\r\n      return;\r\n    }\r\n    if (!regex.test(insertedValue) || insertedValue.length > 12) return;\r\n    setCharacterName(insertedValue);\r\n  };\r\n\r\n  const changeRestValue = (event, data) => {\r\n    event.preventDefault();\r\n    if (!regexNumber.test(event.target.value)) return;\r\n    if (event.target.id === \"chaosChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = chaosRestValue + (changedValue - chaosRestValue) * 10;\r\n      if (valueOutput < 0) setChaosRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValue(valueOutput);\r\n      else setChaosRestValue(100);\r\n    }\r\n    if (event.target.id === \"guardianChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput =\r\n        guardianRestValue + (changedValue - guardianRestValue) * 10;\r\n      if (valueOutput < 0) setGuardianRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValue(valueOutput);\r\n      else setGuardianRestValue(100);\r\n    }\r\n    if (event.target.id === \"eponaChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = eponaRestValue + (changedValue - eponaRestValue) * 10;\r\n      if (valueOutput < 0) setEponaRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValue(valueOutput);\r\n      else setEponaRestValue(100);\r\n    }\r\n  };\r\n\r\n  const confirmAddCharacter = () => {\r\n    const createdData = {\r\n      // _id: \"5d725a037b292f5f8ceff795\",\r\n      // user: \"5d7a514b5d2c12c7449be042\",\r\n      character: selectedCharacter,\r\n      characterName: characterName,\r\n      date: Date.now(),\r\n      // idx: 2,\r\n      chaosRestValue,\r\n      guardianRestValue,\r\n      eponaRestValue,\r\n      chaosDone: 0,\r\n      guardianDone: 0,\r\n      eponaDone: 0,\r\n      guardianWeeklyDone: 0,\r\n      abyssDungeon2: false,\r\n      // abyssDungeonWeekly: true,\r\n      // rehearsalAndDejavu: [\"kukuseitn\", \"abrel\"],\r\n      argos: false,\r\n      baltan: false,\r\n      biakiss: false,\r\n      kukuseitn: false,\r\n      abrel: false,\r\n      attributeChanged: false,\r\n      weeklyAttributeChanged: false,\r\n      createdAt: Date.now(),\r\n    };\r\n    axios\r\n      .post(`${backendUrl}/loado/api/homeworks`, createdData, axiosConfig)\r\n      .then((response) => {\r\n        // setUserTodoData([...userTodoData, response.data.data]);\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          userTodoData.length % limit === 0\r\n        ) {\r\n          viewPage(false, true, response.data.totalLength);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n        closeAddCharacterModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.error, {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        closeAddCharacterModal();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const classElements = document.getElementsByClassName(\r\n      \"characterClassContent\"\r\n    );\r\n    let eventAdd;\r\n    for (let index = 0; index < classElements.length; index++) {\r\n      eventAdd = classElements[index].addEventListener(\"click\", (event) => {\r\n        classSelected(event);\r\n      });\r\n    }\r\n    return () => {\r\n      for (let index = 0; index < classElements.length; index++) {\r\n        classElements[index].removeEventListener(\"click\", eventAdd);\r\n      }\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={addCharacterModal}\r\n        onClose={closeAddCharacterModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: \"dimgray\" }}>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            {!selectedCharacter ? (\r\n              <>\r\n                <span className=\"itemHeaderAttribute1\">클래스:</span>\r\n                <Icon\r\n                  name=\"add square\"\r\n                  size=\"large\"\r\n                  color=\"white\"\r\n                  onClick={modalShow}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"itemHeaderAttribute2\">클래스:</span>\r\n                <span onClick={() => setSelectCharacterModal(true)}>\r\n                  <Image\r\n                    src={characterCdn[selectedCharacter]}\r\n                    size=\"mini\"\r\n                    avatar\r\n                  />\r\n                  {characterKorean[selectedCharacter]}\r\n                </span>\r\n              </>\r\n            )}\r\n          </Header>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            <span style={{ marginRight: \"40px\" }}>케릭명:</span>\r\n            <Input\r\n              transparent\r\n              placeholder=\"케릭터명\"\r\n              style={{ color: \"white\" }}\r\n              className=\"charNameInput\"\r\n              value={characterName}\r\n              ref={inputRef}\r\n              onChange={(event, data) => changeInputCharName(event, data)}\r\n            />\r\n          </Header>\r\n          <Header className=\"itemHeaderRest\" as=\"h4\">\r\n            <List divided selection>\r\n              <List.Item>\r\n                <Label horizontal>카오스던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={chaosRestValue}\r\n                  id=\"chaosChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>가디언던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={guardianRestValue}\r\n                  id=\"guardianChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>에포나</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={eponaRestValue}\r\n                  id=\"eponaChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n            </List>\r\n          </Header>\r\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <Button\r\n              circular\r\n              color=\"google plus\"\r\n              icon=\"cancel\"\r\n              onClick={closeAddCharacterModal}\r\n            />\r\n            <Button\r\n              circular\r\n              color=\"twitter\"\r\n              icon=\"check\"\r\n              onClick={confirmAddCharacter}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <Modal\r\n        open={selectCharacterModal}\r\n        onClose={closeSelectCharacter}\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n        className=\"classSelectModal\"\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            backgroundColor: \"#384862\",\r\n            color: \"white\",\r\n            borderBottom: \"1px solid white\",\r\n          }}\r\n        >\r\n          클래스\r\n        </Modal.Header>\r\n        <Modal.Content style={{ backgroundColor: \"#384862\", color: \"white\" }}>\r\n          <Grid columns={6}>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  전사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column\r\n                className=\"characterClassContent berserker\"\r\n                name=\"berserker\"\r\n              >\r\n                <Image\r\n                  src={characterCdn.berserker}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"berserker\"\r\n                />\r\n                버서커\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent warlord\">\r\n                <Image\r\n                  src={characterCdn.warlord}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"warlord\"\r\n                />\r\n                워로드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent destroyer\">\r\n                <Image\r\n                  src={characterCdn.destroyer}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"destroyer\"\r\n                />\r\n                디스트로이어\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent holyknight\">\r\n                <Image\r\n                  src={characterCdn.holyknight}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"holyknight\"\r\n                />\r\n                홀리나이트\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  무도가\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent battlemaster\">\r\n                <Image\r\n                  src={characterCdn.battlemaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"battlemaster\"\r\n                />\r\n                배틀마스터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent infighter\">\r\n                <Image\r\n                  src={characterCdn.infighter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"infighter\"\r\n                />\r\n                인파이터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent soulmaster\">\r\n                <Image\r\n                  src={characterCdn.soulmaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"soulmaster\"\r\n                />\r\n                기공사\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent lancemaster\">\r\n                <Image\r\n                  src={characterCdn.lancemaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"lancemaster\"\r\n                />\r\n                창술사\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent striker\">\r\n                <Image\r\n                  src={characterCdn.striker}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"striker\"\r\n                />\r\n                스트라이커\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  헌터\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent devilhunter\">\r\n                <Image\r\n                  src={characterCdn.devilhunter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"devilhunter\"\r\n                />\r\n                데빌헌터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent blaster\">\r\n                <Image\r\n                  src={characterCdn.blaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"blaster\"\r\n                />\r\n                블래스터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent hawkeye\">\r\n                <Image\r\n                  src={characterCdn.hawkeye}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"hawkeye\"\r\n                />\r\n                호크아이\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent scouter\">\r\n                <Image\r\n                  src={characterCdn.scouter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"scouter\"\r\n                />\r\n                스카우터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent gunslinger\">\r\n                <Image\r\n                  src={characterCdn.gunslinger}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"gunslinger\"\r\n                />\r\n                건슬링어\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  마법사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent summoner\">\r\n                <Image\r\n                  src={characterCdn.summoner}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"summoner\"\r\n                />\r\n                서머너\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent arcana\">\r\n                <Image\r\n                  src={characterCdn.arcana}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"arcana\"\r\n                />\r\n                아르라카\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent bard\">\r\n                <Image\r\n                  src={characterCdn.bard}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"bard\"\r\n                />\r\n                바드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent sorceress\">\r\n                <Image\r\n                  src={characterCdn.sorceress}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"sorceress\"\r\n                />\r\n                소서리스\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  암살자\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent blade\">\r\n                <Image\r\n                  src={characterCdn.blade}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"blade\"\r\n                />\r\n                블레이드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent demonic\">\r\n                <Image\r\n                  src={characterCdn.demonic}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"demonic\"\r\n                />\r\n                데모닉\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent reaper\">\r\n                <Image\r\n                  src={characterCdn.reaper}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"reaper\"\r\n                />\r\n                리퍼\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Modal, Image, Button } from \"semantic-ui-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nfunction RestValue({ item, userTodoData, setUserTodoData }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(item._id);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowModal(true);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  // if you use setShowModal directly in Modal onClose, react will throw error\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [chaosRestValue, setChaosRestValue] = useState(item.chaosRestValue);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValue, setEponaRestValue] = useState(item.eponaRestValue);\r\n\r\n  const [chaosRestValueChange, setChaosRestValueChange] = useState(\r\n    item.chaosRestValue\r\n  );\r\n  const [guardianRestValueChange, setGuardianRestValueChange] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValueChange, setEponaRestValueChange] = useState(\r\n    item.eponaRestValue\r\n  );\r\n\r\n  const valueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"chaosChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        chaosRestValueChange + (changedValue - chaosRestValueChange) * 10;\r\n      if (valueOutput < 0) setChaosRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValueChange(valueOutput);\r\n      else setChaosRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"guardianChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        guardianRestValueChange + (changedValue - guardianRestValueChange) * 10;\r\n      if (valueOutput < 0) setGuardianRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValueChange(valueOutput);\r\n      else setGuardianRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"eponaChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        eponaRestValueChange + (changedValue - eponaRestValueChange) * 10;\r\n      if (valueOutput < 0) setEponaRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValueChange(valueOutput);\r\n      else setEponaRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const confirmValue = () => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === item._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"chaosRestValue\"] = chaosRestValueChange;\r\n    newArr[indexValue][\"guardianRestValue\"] = guardianRestValueChange;\r\n    newArr[indexValue][\"eponaRestValue\"] = eponaRestValueChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column id={item._id}>\r\n        카던: {item.chaosRestValue}\r\n        <br />\r\n        가디언: {item.guardianRestValue}\r\n        <br />\r\n        에포나: {item.eponaRestValue}\r\n      </Grid.Column>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Header>\r\n          <Image\r\n            src=\"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/lancemaster_s.png\"\r\n            size=\"mini\"\r\n            avatar\r\n          />\r\n          {item.characterName}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextField\r\n            id=\"chaosChange\"\r\n            type=\"number\"\r\n            label=\"카오스던전\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={chaosRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"guardianChange\"\r\n            type=\"number\"\r\n            label=\"가디언토벌\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={guardianRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"eponaChange\"\r\n            type=\"number\"\r\n            label=\"에포나\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={eponaRestValueChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={closeModal}>\r\n            취소\r\n          </Button>\r\n          <Button positive onClick={confirmValue}>\r\n            확인\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestValue;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Image, Icon, Popup } from \"semantic-ui-react\";\r\nimport { characterCdn } from \"../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport \"./CharacterAvatarCss.css\";\r\nimport backendUrl from \"../Utils/ConstVar\";\r\n\r\nfunction CharacterAvatar({\r\n  itemId,\r\n  character,\r\n  characterName,\r\n  attributeChanged,\r\n  weeklyAttributeChanged,\r\n  axiosConfig,\r\n  viewPage,\r\n  alarmCharacter,\r\n  limit,\r\n}) {\r\n  const [deleteIcon, showDeleteIcon] = useState(false);\r\n\r\n  const [alarmState, setAlarmState] = useState(\"\");\r\n\r\n  const deleteCharacter = (id) => {\r\n    // console.log(id);\r\n    // const indexValue = userTodoData.findIndex((anItem) => {\r\n    //   return anItem._id === id;\r\n    // });\r\n    // let newArr = [...userTodoData];\r\n    // newArr.splice(indexValue, 1);\r\n    // setUserTodoData(newArr);\r\n    // showDeleteIcon(false);\r\n\r\n    axios\r\n      .delete(`${backendUrl}/loado/api/homeworks/${itemId}`, axiosConfig)\r\n      .then((response) => {\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          response.data.totalLength % limit === 0\r\n        ) {\r\n          viewPage(true, false);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column>\r\n        <Image\r\n          src={characterCdn[character]}\r\n          size=\"mini\"\r\n          avatar\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n        />\r\n        <span\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n          className={alarmCharacter ? \"alarmLight\" : \"\"}\r\n        >\r\n          {characterName}\r\n        </span>\r\n        {(attributeChanged || weeklyAttributeChanged) && (\r\n          <Icon\r\n            name=\"edit\"\r\n            size=\"small\"\r\n            style={{ color: \"springgreen\", marginLeft: \"3px\" }}\r\n          />\r\n        )}\r\n        {deleteIcon && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name=\"trash\"\r\n                color=\"red\"\r\n                style={{ cursor: \"pointer\", marginLeft: \"1px\" }}\r\n                onClick={() => deleteCharacter(itemId)}\r\n              />\r\n            }\r\n            content={`'${characterName}'에 대한 정보를 삭제하시겠습니까?`}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterAvatar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Dropdown } from \"semantic-ui-react\";\r\n\r\nfunction ChaosDunValue({ chaosItem, userTodoData, setUserTodoData }) {\r\n  const options = [\r\n    { key: `${chaosItem._id}_1`, text: \"0회\", value: 0 },\r\n    { key: `${chaosItem._id}_2`, text: \"1회\", value: 1 },\r\n    { key: `${chaosItem._id}_3`, text: \"2회\", value: 2 },\r\n  ];\r\n\r\n  const [chaosData, setChaosData] = useState(chaosItem.chaosDone);\r\n\r\n  const changeData = (event, data) => {\r\n    setChaosData(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === chaosItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].chaosDone = data.value;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: \"1px\" }}>\r\n      <Dropdown\r\n        options={options}\r\n        name=\"chaosDun\"\r\n        onChange={(event, data) => changeData(event, data)}\r\n        value={chaosData}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction GuardianDunValue({ guardianItem, userTodoData, setUserTodoData }) {\r\n  const options = [\r\n    { key: `${guardianItem._id}_1`, text: \"0회\", value: 0 },\r\n    { key: `${guardianItem._id}_2`, text: \"1회\", value: 1 },\r\n    { key: `${guardianItem._id}_3`, text: \"2회\", value: 2 },\r\n  ];\r\n\r\n  const [guardianData, setGuardianData] = useState(guardianItem.guardianDone);\r\n\r\n  const changeData = (event, data) => {\r\n    setGuardianData(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === guardianItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].guardianDone = data.value;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: \"1px\" }}>\r\n      <Dropdown\r\n        options={options}\r\n        name=\"guardianDun\"\r\n        onChange={(event, data) => changeData(event, data)}\r\n        value={guardianData}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction EponaValue({ eponaItem, userTodoData, setUserTodoData }) {\r\n  const options = [\r\n    { key: `${eponaItem._id}_1`, text: \"0회\", value: 0 },\r\n    { key: `${eponaItem._id}_2`, text: \"1회\", value: 1 },\r\n    { key: `${eponaItem._id}_3`, text: \"2회\", value: 2 },\r\n    { key: `${eponaItem._id}_4`, text: \"3회\", value: 3 },\r\n  ];\r\n\r\n  const [eponaData, setEponaData] = useState(eponaItem.eponaDone);\r\n\r\n  const changeData = (event, data) => {\r\n    setEponaData(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === eponaItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].eponaDone = data.value;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Dropdown\r\n        options={options}\r\n        name=\"epona\"\r\n        onChange={(event, data) => changeData(event, data)}\r\n        value={eponaData}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction WeeklyGuardian({ weeklyGuardianItem, userTodoData, setUserTodoData }) {\r\n  const options = [\r\n    { key: `${weeklyGuardianItem._id}_1`, text: \"0회\", value: 0 },\r\n    { key: `${weeklyGuardianItem._id}_2`, text: \"1회\", value: 1 },\r\n    { key: `${weeklyGuardianItem._id}_3`, text: \"2회\", value: 2 },\r\n    { key: `${weeklyGuardianItem._id}_4`, text: \"3회\", value: 3 },\r\n  ];\r\n\r\n  const [weeklyGuardianData, setWeeklyGuardianData] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setWeeklyGuardianData(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === weeklyGuardianItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].guardianWeeklyDone = data.value;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Dropdown\r\n        options={options}\r\n        name=\"weeklyGuardian\"\r\n        onChange={(event, data) => changeData(event, data)}\r\n        value={weeklyGuardianData}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport { ChaosDunValue, GuardianDunValue, EponaValue, WeeklyGuardian };\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Checkbox, Dropdown, Label } from \"semantic-ui-react\";\r\n\r\nconst changeDatafunction = (\r\n  event,\r\n  data,\r\n  setItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  findIndexItem,\r\n  changeItem\r\n) => {\r\n  setItem(data.checked);\r\n  const indexValue = userTodoData.findIndex((anItem) => {\r\n    return anItem._id === findIndexItem._id;\r\n  });\r\n  let newArr = [...userTodoData];\r\n  newArr[indexValue][changeItem] = data.checked;\r\n  let attrChanged =\r\n    changeItem === \"abyssDungeonWeekly\"\r\n      ? \"weeklyAttributeChanged\"\r\n      : \"attributeChanged\";\r\n  newArr[indexValue][attrChanged] = true;\r\n  setUserTodoData(newArr);\r\n};\r\n\r\nfunction AbyssDun2({ abyssDun2Item, userTodoData, setUserTodoData }) {\r\n  const [abyssDun2, setAbyssDun2] = useState(abyssDun2Item.abyssDungeon2);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"AbyssDun2\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbyssDun2,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abyssDun2Item,\r\n            \"abyssDungeon2\"\r\n          )\r\n        }\r\n        checked={abyssDun2}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbyssRaid({ idx, abyssRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abyssRaid, setAbyssRaid] = useState(abyssRaidItem.abyssDungeonWeekly);\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <Grid.Column style={{ display: \"flex\" }}>\r\n        <Checkbox\r\n          name=\"AbyssRaid\"\r\n          onChange={(event, data) =>\r\n            changeDatafunction(\r\n              event,\r\n              data,\r\n              setAbyssRaid,\r\n              userTodoData,\r\n              setUserTodoData,\r\n              abyssRaidItem,\r\n              \"abyssDungeonWeekly\"\r\n            )\r\n          }\r\n          checked={abyssRaid}\r\n        />\r\n      </Grid.Column>\r\n    )\r\n  );\r\n}\r\n\r\nfunction RehearsalAndDejavu({\r\n  rehearsalAndDejavuItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  idx,\r\n}) {\r\n  const options_combo1 = [\r\n    { key: \"kukuseitn\", text: \"쿠크리허설\", value: \"kukuseitn\" },\r\n    { key: \"abrel\", text: \"아브렐데쟈뷰\", value: \"abrel\" },\r\n  ];\r\n  const [rehearsalAndDejavu, setRehearsalAndDejavu] = useState(\r\n    rehearsalAndDejavuItem.rehearsalAndDejavu\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setRehearsalAndDejavu(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === rehearsalAndDejavuItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].rehearsalAndDejavu = data.value;\r\n    newArr[indexValue].weeklyAttributeChanged = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder=\"쿠크/아브렐\"\r\n            fluid\r\n            multiple\r\n            selection\r\n            options={options_combo1}\r\n            value={rehearsalAndDejavu}\r\n            onChange={(event, data) => changeData(event, data)}\r\n          />\r\n        </Grid.Column>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nfunction ArgosRaid({ argosRaidItem, userTodoData, setUserTodoData }) {\r\n  const [argosRaid, setArgosRaid] = useState(argosRaidItem.argos);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"ArgosRaid\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setArgosRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            argosRaidItem,\r\n            \"argos\"\r\n          )\r\n        }\r\n        checked={argosRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BaltanRaid({ baltanRaidItem, userTodoData, setUserTodoData }) {\r\n  const [baltanRaid, setBaltanRaid] = useState(baltanRaidItem.baltan);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"BaltanRaid\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBaltanRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            baltanRaidItem,\r\n            \"baltan\"\r\n          )\r\n        }\r\n        checked={baltanRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BiakissRaid({ biakissRaidItem, userTodoData, setUserTodoData }) {\r\n  const [biakissRaid, setBiakissRaid] = useState(biakissRaidItem.biakiss);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"BiakissRaid\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBiakissRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            biakissRaidItem,\r\n            \"biakiss\"\r\n          )\r\n        }\r\n        checked={biakissRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction KukseitnRaid({ kukseitnRaidItem, userTodoData, setUserTodoData }) {\r\n  const [kukseitnRaid, setKukseitnRaid] = useState(kukseitnRaidItem.kukuseitn);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"KukseitnRaid\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setKukseitnRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            kukseitnRaidItem,\r\n            \"kukuseitn\"\r\n          )\r\n        }\r\n        checked={kukseitnRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbrelRaid({ abrelRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abrelRaid, setAbrelRaid] = useState(abrelRaidItem.abrel);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"AbrelRaid\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbrelRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abrelRaidItem,\r\n            \"abrel\"\r\n          )\r\n        }\r\n        checked={abrelRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport {\r\n  AbyssDun2,\r\n  AbyssRaid,\r\n  RehearsalAndDejavu,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CharacterToDo.css\";\r\nimport AddCharacter from \"../Utils/AddCharacter\";\r\n\r\nimport {\r\n  Header,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Container,\r\n  Icon,\r\n  Dimmer,\r\n  Loader,\r\n  Pagination,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\nimport RestValue from \"../GridItem/RestValue\";\r\nimport CharacterAvatar from \"./CharacterAvatar\";\r\nimport {\r\n  ChaosDunValue,\r\n  GuardianDunValue,\r\n  EponaValue,\r\n  WeeklyGuardian,\r\n} from \"../GridItem/DungeonAndEpona\";\r\nimport {\r\n  AbyssDun2,\r\n  AbyssRaid,\r\n  RehearsalAndDejavu,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n} from \"../GridItem/AbyssAndRaid\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport backendUrl from \"../Utils/ConstVar\";\r\n\r\nfunction CharacterToDoRow({ limit, type }) {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  const [userTodoData, setUserTodoData] = useState([]);\r\n\r\n  const [addCharacterModal, setAddCharacterModal] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const [pagination, setPagination] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  const addCharacter = () => {\r\n    setAddCharacterModal(true);\r\n  };\r\n\r\n  const closeAddCharacter = () => {\r\n    setAddCharacterModal(false);\r\n  };\r\n\r\n  const axiosConfig = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${cookie.get(\"loadoUserToken\")}`,\r\n    },\r\n  };\r\n\r\n  const viewPage = (minusOne = false, plusOne = false, plusPage = 0) => {\r\n    setLoading(true);\r\n\r\n    let searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${activePage}`;\r\n    if (minusOne) {\r\n      searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n        activePage - 1\r\n      }`;\r\n      setActivePage(activePage - 1);\r\n    } else if (plusOne) {\r\n      searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n        Math.floor(plusPage / limit) + 1\r\n      }`;\r\n      setActivePage(Math.floor(plusPage / limit) + 1);\r\n    }\r\n\r\n    axios\r\n      .get(searchString, axiosConfig)\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        const totalLength = response.data.totalLength;\r\n        const totalPage =\r\n          totalLength / limit - Math.floor(totalLength / limit) > 0\r\n            ? Math.floor(totalLength / limit) + 1\r\n            : Math.floor(totalLength / limit);\r\n        setPagination(totalPage);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"데이터를 불러오지 못했습니다\", {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const applyChanges = async () => {\r\n    setLoading(true);\r\n    let errorOccured = false;\r\n    let submitData = userTodoData.filter(\r\n      (item) => item.attributeChanged === true\r\n    );\r\n    for (let index = 0; index < submitData.length; index++) {\r\n      await axios\r\n        .put(\r\n          `${backendUrl}/loado/api/homeworks/${submitData[index]._id}`,\r\n          {\r\n            data: submitData[index],\r\n          },\r\n          axiosConfig\r\n        )\r\n        .then((response) => {})\r\n        .catch((err) => {\r\n          errorOccured = true;\r\n        });\r\n    }\r\n    let weeklySubmitData = userTodoData.filter(\r\n      (item) => item.weeklyAttributeChanged === true\r\n    );\r\n    if (weeklySubmitData.length !== 0) {\r\n      await axios\r\n        .put(\r\n          `${backendUrl}/loado/api/homeworks/${weeklySubmitData[0]._id}`,\r\n          {\r\n            data: weeklySubmitData[0],\r\n          },\r\n          axiosConfig\r\n        )\r\n        .then((response) => {})\r\n        .catch((err) => {\r\n          errorOccured = true;\r\n        });\r\n    }\r\n    setLoading(false);\r\n    if (errorOccured) {\r\n      toast.error(\"일부 변경사항이 제대로 반영되지 않았습니다\", {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n      });\r\n    }\r\n    viewPage();\r\n  };\r\n\r\n  const pageChange = (event, data) => {\r\n    setActivePage(data.activePage);\r\n    axios\r\n      .get(\r\n        `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${data.activePage}`,\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"데이터를 불러오지 못했습니다\", {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // for animation\r\n  const [alarmTrue, setAlarmTrue] = useState(true);\r\n\r\n  const alarmRestValue = (todoList) => {\r\n    // 알람 중지\r\n    if (!alarmTrue) {\r\n      const alarmList1 = todoList.map((item, idx) => {\r\n        console.log(item.alarmCharacter);\r\n        item.alarmCharacter = false;\r\n        return item;\r\n      });\r\n      setUserTodoData(alarmList1);\r\n      setAlarmTrue(true);\r\n    }\r\n    // 알람 온\r\n    else {\r\n      const alarmList = todoList.map((item, idx) => {\r\n        if (\r\n          item.chaosRestValue >= 40 ||\r\n          item.guardianRestValue >= 40 ||\r\n          item.eponaRestValue >= 60\r\n        ) {\r\n          item.alarmCharacter = true;\r\n        }\r\n        return item;\r\n      });\r\n      setUserTodoData(alarmList);\r\n      setAlarmTrue(false);\r\n    }\r\n  };\r\n\r\n  // if no user cookie then redirect to login page\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    !loginCookie && history.push(\"/login\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    viewPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Segment\r\n          className=\"fullPage\"\r\n          style={{ height: \"94vh\", border: \"none\" }}\r\n        >\r\n          <Dimmer active>\r\n            <Loader size=\"big\">로딩중</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      ) : (\r\n        <Grid className=\"fullPage\">\r\n          <Container\r\n            style={{ width: \"95%\", marginLeft: \"2.5%\", marginRight: \"2.5%\" }}\r\n          >\r\n            <Grid.Column width={16}>\r\n              <Segment\r\n                basic\r\n                className=\"contentHeader\"\r\n                style={{ marginBottom: \"0px\" }}\r\n              >\r\n                <div className=\"headerValueStart\">\r\n                  <Header\r\n                    size=\"medium\"\r\n                    style={{ color: \"white\", paddingTop: \"5px\" }}\r\n                  >\r\n                    {today}{\" \"}\r\n                    {type === \"computer\" && (\r\n                      <span style={{ marginLeft: \"40px\" }}>\r\n                        금일 06:00 ~ 명일 05:59\r\n                      </span>\r\n                    )}\r\n                  </Header>\r\n                </div>\r\n                <div className=\"headerValueCenter\">\r\n                  <Pagination\r\n                    // defaultActivePage={1}\r\n                    firstItem={null}\r\n                    lastItem={null}\r\n                    pointing\r\n                    secondary\r\n                    totalPages={pagination}\r\n                    activePage={activePage}\r\n                    onPageChange={(event, data) => pageChange(event, data)}\r\n                  />\r\n                </div>\r\n                <div className=\"headerValueEnd\">\r\n                  <Button inverted color=\"olive\" onClick={addCharacter}>\r\n                    케릭터 추가\r\n                  </Button>\r\n                  <Button inverted color=\"red\" onClick={applyChanges}>\r\n                    변경사항 저장\r\n                  </Button>\r\n                </div>\r\n              </Segment>\r\n              <Segment\r\n                basic\r\n                style={{ backgroundColor: \"dimgray\", marginTop: \"0px\" }}\r\n              >\r\n                <Grid columns={limit + 1}>\r\n                  <Grid.Row style={{ borderBottom: \"0.05rem inset ivory\" }}>\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <Button\r\n                        icon={alarmTrue ? \"alarm\" : \"alarm mute\"}\r\n                        content={\r\n                          type === \"computer\" && (alarmTrue ? \"체크\" : \"체크X\")\r\n                        }\r\n                        style={{ background: \"dimgray\", color: \"white\" }}\r\n                        onClick={() => alarmRestValue(userTodoData)}\r\n                      />\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <CharacterAvatar\r\n                        itemId={item._id}\r\n                        character={item.character}\r\n                        characterName={item.characterName}\r\n                        attributeChanged={item.attributeChanged}\r\n                        weeklyAttributeChanged={item.weeklyAttributeChanged}\r\n                        axiosConfig={axiosConfig}\r\n                        viewPage={viewPage}\r\n                        alarmCharacter={item.alarmCharacter}\r\n                        limit={limit}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <Icon name=\"calendar check outline\" />\r\n                      휴식게이지\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <RestValue\r\n                        item={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/chaosDun.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>카오스던전</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <ChaosDunValue\r\n                        chaosItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/guardianDun.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>가디언토벌</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <GuardianDunValue\r\n                        guardianItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/epona.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>에포나</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <EponaValue\r\n                        eponaItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/guardianDun.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>주간가디언</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <WeeklyGuardian\r\n                        weeklyGuardianItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/abyss2types.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>어비스2종</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbyssDun2\r\n                        abyssDun2Item={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/abyssWeekly.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>어비스레이드</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbyssRaid\r\n                        idx={idx}\r\n                        abyssRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/rehearsal.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>리허설, 데쟈뷰</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <RehearsalAndDejavu\r\n                        rehearsalAndDejavuItem={item}\r\n                        idx={idx}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/argos.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>아르고스</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <ArgosRaid\r\n                        argosRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/baltan.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>발탄</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <BaltanRaid\r\n                        baltanRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/biakiss.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>비아키스</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <BiakissRaid\r\n                        biakissRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/kukuseitn.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>쿠크세이튼</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <KukseitnRaid\r\n                        kukseitnRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/abrel.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>아브렐슈드</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbrelRaid\r\n                        abrelRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Container>\r\n        </Grid>\r\n      )}\r\n\r\n      <AddCharacter\r\n        addCharacterModal={addCharacterModal}\r\n        closeAddCharacter={closeAddCharacter}\r\n        userTodoData={userTodoData}\r\n        axiosConfig={axiosConfig}\r\n        viewPage={viewPage}\r\n        limit={limit}\r\n      />\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDoRow;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport backendUrl from \"../Utils/ConstVar\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState(\"로그인이 필요합니다\");\r\n  const [user, setUser] = useState({\r\n    id: cookie.get(\"loginId\") ? cookie.get(\"loginId\") : \"\",\r\n    password: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const axiosConfig = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/login`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set(\"loadoUserToken\", token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set(\"loadoUserCookie\", JSON.stringify(userCookie));\r\n          history.push(\"/userhomework\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.request);\r\n        // console.log(err.response);\r\n        // console.log(err.message);\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\", marginTop: \"0\", backgroundColor: \"dimgray\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as=\"h2\" textAlign=\"center\" style={{ color: \"white\" }}>\r\n            <Image src=\"https://react.semantic-ui.com/logo.png\" />{\" \"}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size=\"large\" onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"ID\"\r\n                name=\"id\"\r\n                onChange={handleChange}\r\n                value={cookie.get(\"loginId\")}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\r\n                로그인\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            계정이 없으신가요? <a href=\"#\">가입</a>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Grid } from \"semantic-ui-react\";\nimport NavHeader from \"./Components/Nav/NavHeader\";\nimport CharacterToDo from \"./Components/Home/CharacterToDo\";\nimport CharacterToDoRow from \"./Components/Home/CharacterToDoRow\";\nimport Login from \"./Components/Home/Login\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { createMedia } from \"@artsy/fresnel\";\n\nconst AppMedia = createMedia({\n  breakpoints: { zero: 0, mobile: 549, tablet: 850, computer: 1080 },\n});\n\nconst mediaStyles = AppMedia.createMediaStyle();\nconst { Media, MediaContextProvider } = AppMedia;\n\nfunction App() {\n  return (\n    <MediaContextProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/userhomework\">\n            <>\n              <Grid stackable style={{ border: \"none\" }}>\n                <Grid.Row\n                  style={{\n                    paddingBottom: \"0rem\",\n                    background: \"lightCoral\",\n                  }}\n                >\n                  <Grid.Column style={{ border: \"none\" }}>\n                    <NavHeader />\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row\n                  style={{\n                    paddingBottom: \"0rem\",\n                    paddingTop: \"0rem\",\n                    height: \"94vh\",\n                    backgroundColor: \"#384862\",\n                  }}\n                >\n                  <Grid.Column>\n                    <Media between={[\"zero\", \"tablet\"]}>\n                      <CharacterToDoRow limit={4} type=\"mobile\" />\n                    </Media>\n                    <Media between={[\"tablet\", \"computer\"]}>\n                      <CharacterToDoRow limit={6} type=\"mobile\" />\n                    </Media>\n                    <Media greaterThanOrEqual=\"computer\">\n                      <CharacterToDoRow limit={8} type=\"computer\" />\n                    </Media>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </>\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/\" exact>\n            <Login />\n          </Route>\n        </Switch>\n      </Router>\n    </MediaContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}