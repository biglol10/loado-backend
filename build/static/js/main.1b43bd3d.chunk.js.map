{"version":3,"sources":["Components/Utils/ConstVar.js","Components/Nav/NavHeader.js","Components/Home/CharacterToDo.js","_data/characterDefinition.js","Components/Utils/AddCharacter.js","Components/GridItem/RestValue.js","Components/Home/CharacterAvatar.js","Components/Home/PerIdNote.js","Components/GridItem/DungeonAndEpona.js","Components/GridItem/AbyssAndRaid.js","Components/Utils/ViewDataUtil.js","Components/Home/CharacterToDoRow.js","Components/Home/Login.js","Components/Home/Register.js","App.js","index.js"],"names":["backendUrl","axiosConfig","headers","axiosConfigAuth","userCookie","Authorization","NavHeader","userIdString","cookie","get","userValue","JSON","parse","history","useHistory","useState","showUpdateHistoryModal","setShowUpdateHistoryModal","restValueBatch","a","searchString","axios","post","then","response","window","location","reload","catch","err","alert","Menu","style","backgroundColor","height","borderRadius","borderless","Item","Header","size","marginRight","marginLeft","color","fontStyle","Icon","name","padding","cursor","onClick","open","Popup","on","position","trigger","display","userName","Button","content","userId","set","remove","push","Modal","onClose","closeOnDimmerClick","borderBottom","Content","fontWeight","CharacterToDo","characterCdn","berserker","warlord","destroyer","holyknight","battlemaster","infighter","soulmaster","lancemaster","striker","devilhunter","blaster","hawkeye","scouter","gunslinger","summoner","arcana","bard","sorceress","blade","demonic","reaper","characterKorean","AddCharacter","addCharacterModal","closeAddCharacter","userTodoData","viewPage","limit","selectCharacterModal","setSelectCharacterModal","selectedCharacter","setSelectedCharacter","characterName","setCharacterName","chaosRestValue","setChaosRestValue","guardianRestValue","setGuardianRestValue","eponaRestValue","setEponaRestValue","regex","regexNumber","inputRef","useRef","buttonRef","classSelected","event","selectedClass","target","className","indexOf","dataset","options","split","current","focus","closeAddCharacterModal","changeRestValue","data","preventDefault","test","value","id","changedValue","valueOutput","confirmAddCharacter","createdData","character","date","Date","now","chaosDone","guardianDone","eponaDone","guardianWeeklyDone","abyssDungeon2","argos","baltan","biakiss","kukuseitn","abrel","attributeChanged","weeklyAttributeChanged","createdAt","totalLength","length","toast","error","POSITION","BOTTOM_LEFT","useEffect","eventAdd","classElements","document","getElementsByClassName","index","addEventListener","removeEventListener","element","getElementById","enterEvent","key","console","log","click","closeIcon","as","Image","src","avatar","Input","transparent","placeholder","ref","onChange","insertedValue","changeInputCharName","List","divided","selection","Label","horizontal","justifyContent","circular","icon","Grid","columns","Row","Column","marginTop","autoClose","RestValue","item","setUserTodoData","showModal","setShowModal","_id","rightclickEvent","closeModal","chaosRestValueChange","setChaosRestValueChange","guardianRestValueChange","setGuardianRestValueChange","eponaRestValueChange","setEponaRestValueChange","valueChange","e","TextField","type","label","Actions","negative","positive","indexValue","findIndex","anItem","newArr","CharacterAvatar","itemId","alarmCharacter","dontChange","deleteIcon","showDeleteIcon","showDontChange","setShowDontChange","dontChangeState","setDontChangeState","delete","message","dontChangeCharacter","PerIdNote","showTextArea","setShowTextArea","note","textValue","setTextValue","changeText","theText","TextArea","inverted","changeArr","arr","match","dataValue","ChaosDunValue","chaosItem","viewByCheckBox","text","chaosData","setChaosData","chaosDataChecked","setChaosDataChecked","changeData","paddingTop","Checkbox","checked","changeDataChecked","Dropdown","GuardianDunValue","guardianItem","guardianData","setGuardianData","guardianDataChecked","setGuardianDataChecked","EponaValue","eponaItem","eponaData","setEponaData","eponaDataChecked","setEponaDataChecked","WeeklyGuardian","weeklyGuardianItem","weeklyGuardianData","setWeeklyGuardianData","weeklyGuardianDataChecked","setWeeklyGuardianDataChecked","changeDatafunction","setItem","findIndexItem","changeItem","attrChanged","AbyssDun2","abyssDun2Item","abyssDun2","setAbyssDun2","ArgosRaid","argosRaidItem","argosRaid","setArgosRaid","BaltanRaid","baltanRaidItem","baltanRaid","setBaltanRaid","BiakissRaid","biakissRaidItem","biakissRaid","setBiakissRaid","KukseitnRaid","kukseitnRaidItem","kukseitnRaid","setKukseitnRaid","AbrelRaid","abrelRaidItem","abrelRaid","setAbrelRaid","viewDataMain","minusOne","plusOne","plusPage","activePage","setActivePage","Math","floor","setPage","viewData","success","axiosResult","applyChangesUtil","submitData","errorOccured","put","toastMessage","msg","info","CharacterToDoRow","todayDate","today","getFullYear","getMonth","getDate","setAddCharacterModal","loading","setLoading","pagination","setPagination","setViewByCheckBox","resultData","applyChanges","filter","applyResult","pageChange","alarmTrue","setAlarmTrue","showNote","setShowNote","Segment","border","Dimmer","active","Loader","Container","width","basic","marginBottom","image","Pagination","firstItem","lastItem","pointing","secondary","totalPages","onPageChange","todoList","alarmDataResult","alarmList","alarm","map","idx","alarmRestValueUtil","alarmRestValue","paddingBottom","Login","loginMessage","setLoginMessage","password","user","setUser","handleChange","prev","textAlign","verticalAlign","maxWidth","Form","onSubmit","token","stringify","stacked","fluid","iconPosition","Message","href","Register","AppMedia","createMedia","breakpoints","zero","mobile","tablet","computer","Media","createMediaStyle","MediaContextProvider","App","path","stackable","background","between","greaterThanOrEqual","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1b43bd3d.chunk.js","sourcesContent":["import cookie from 'js-cookie';\r\n\r\n// const backendUrl = 'https://loado-app.herokuapp.com';\r\nconst backendUrl = 'https://loado-backend.herokuapp.com';\r\n// const backendUrl = 'http://localhost:5000';\r\n\r\nconst axiosConfig = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nconst axiosConfigAuth = (userCookie) => {\r\n  const bearer = `Bearer ${userCookie}`;\r\n  return {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: bearer,\r\n    },\r\n  };\r\n};\r\n\r\nexport { backendUrl, axiosConfig, axiosConfigAuth };\r\n","import React, { useState } from 'react';\r\nimport { Menu, Header, Icon, Popup, Button, Modal } from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { backendUrl, axiosConfig } from '../Utils/ConstVar';\r\n\r\nfunction NavHeader() {\r\n  let userIdString = cookie.get('loadoUserCookie');\r\n  let userValue = userIdString && JSON.parse(userIdString);\r\n  const history = useHistory();\r\n\r\n  const [showUpdateHistoryModal, setShowUpdateHistoryModal] = useState(false);\r\n\r\n  const logoutUser = (userId) => {\r\n    cookie.set('loginId', userId);\r\n    cookie.remove('loadoUserCookie');\r\n    cookie.remove('token');\r\n    history.push('/login');\r\n  };\r\n\r\n  const restValueBatch = async () => {\r\n    let searchString = `${backendUrl}/loado/api/homeworks/loadoupdatepersonal`;\r\n    axios\r\n      .post(searchString, {}, axiosConfig)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        alert('휴식게이지를 반영하지 못했습니다');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        style={{\r\n          backgroundColor: 'lightcoral',\r\n          height: '6vh',\r\n          borderRadius: '0px',\r\n        }}\r\n        borderless\r\n      >\r\n        <Menu.Item>\r\n          <Header\r\n            size='large'\r\n            style={{ marginRight: '150px', marginLeft: '50px', color: 'white' }}\r\n          >\r\n            <span style={{ fontStyle: 'italic' }}>\r\n              <Icon name='game' />\r\n              LoaDo\r\n            </span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            style={{ color: 'white', padding: '0 50px', cursor: 'pointer' }}\r\n            onClick={() =>\r\n              window.open(\r\n                'https://github.com/biglol10/loado-react/blob/main/README.md'\r\n              )\r\n            }\r\n          >\r\n            <Icon name='list ul' />\r\n            기능소개\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            style={{ color: 'white', padding: '0 50px', cursor: 'pointer' }}\r\n            onClick={() => setShowUpdateHistoryModal(!showUpdateHistoryModal)}\r\n          >\r\n            <Icon name='cube' />\r\n            작업 내역\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            style={{ color: 'white', padding: '0 50px', cursor: 'pointer' }}\r\n            onClick={() => restValueBatch()}\r\n          >\r\n            <Icon name='box' />\r\n            휴식게이지반영\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item style={{ marginLeft: 'auto', marginRight: '50px' }}>\r\n          <Popup\r\n            on='click'\r\n            position='top right'\r\n            trigger={\r\n              <Header\r\n                size='small'\r\n                style={{\r\n                  color: 'white',\r\n                  padding: '0 50px',\r\n                  display: 'flex',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                <Icon name='user' />\r\n                {userValue && userValue.userName}\r\n              </Header>\r\n            }\r\n          >\r\n            <p>로그아웃 하시겠습니까?</p>\r\n            <Button\r\n              color='red'\r\n              content='로그아웃'\r\n              onClick={() => logoutUser(userValue.userId)}\r\n            />\r\n          </Popup>\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {showUpdateHistoryModal && (\r\n        <Modal\r\n          open={showUpdateHistoryModal}\r\n          onClose={() => setShowUpdateHistoryModal(false)}\r\n          closeOnDimmerClick\r\n        >\r\n          <Modal.Header\r\n            style={{\r\n              backgroundColor: '#384862',\r\n              color: 'white',\r\n              borderBottom: '1px solid white',\r\n            }}\r\n          >\r\n            작업 내역 __ (이 팝업은 조금 더 보기 편하게 개편될 것입니다)\r\n          </Modal.Header>\r\n          <Modal.Content>\r\n            <p>\r\n              <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n                2021-09-06\r\n              </span>\r\n              직업명 오타 수정 : 아르라카 {'->'} 아르카나\r\n            </p>\r\n            <p>\r\n              <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n                2021-09-07\r\n              </span>\r\n              가입 시 암호화 관련 설명 추가\r\n            </p>\r\n            <p>\r\n              <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n                2021-09-08\r\n              </span>\r\n              케릭터명 입력 후 엔터 이벤트를 등록하기 위해 [케릭터 추가] 팝업\r\n              등장 내부로직 수정\r\n            </p>\r\n            <p>\r\n              <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n                2021-09-09\r\n              </span>\r\n              (버튼이 안 보이는 분들을 위해) 케릭터 추가 기능에서 클래스 선택 및\r\n              케릭터명 입력 후 엔터 시 케릭터가 추가되는 기능 추가\r\n            </p>\r\n            <p>\r\n              <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n                2021-09-10\r\n              </span>\r\n              유지보수 및 코드 분석을 위해 내부 코드 리팩토링 진행 및 간결하게\r\n              수정\r\n            </p>\r\n            <p>\r\n              <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n                2021-09-12\r\n              </span>\r\n              9월10일 업데이트 후 첫 로그인 시 화면에 아무것도 안 뜨던 현상\r\n              수정, 컨탠츠에 마우스 올리면 행의 색갈이 바뀌도록 수정\r\n            </p>\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeader;\r\n","import React, { useState } from \"react\";\r\nimport \"./CharacterToDo.css\";\r\nimport { Header, Button, Segment, Grid, Container } from \"semantic-ui-react\";\r\nimport TodoComponent from \"../Todo/TodoComponent\";\r\nimport todoData from \"../../_data/todoData.js\";\r\n\r\nfunction CharacterToDo() {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  const [userTodoData, setUserTodoData] = useState(todoData);\r\n\r\n  const [iconId, setIconId] = useState(\"\");\r\n\r\n  const [changedList, setChangedList] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <Grid className=\"fullPage\">\r\n        <Container\r\n          style={{ width: \"95%\", marginLeft: \"2.5%\", marginRight: \"2.5%\" }}\r\n        >\r\n          <Grid.Column width={16}>\r\n            <Segment basic style={{ marginBottom: \"0px\" }}>\r\n              <Header\r\n                size=\"huge\"\r\n                style={{ color: \"deepskyblue\", textAlign: \"center\" }}\r\n              >\r\n                로아 숙제관리\r\n              </Header>\r\n            </Segment>\r\n            <Segment basic className=\"contentHeader\">\r\n              <div className=\"headerValueStart\">\r\n                <Header size=\"medium\" style={{ color: \"white\" }}>\r\n                  {today}{\" \"}\r\n                  <span style={{ marginLeft: \"40px\" }}>\r\n                    금일 06:00 ~ 명일 05:59\r\n                  </span>\r\n                </Header>\r\n              </div>\r\n              <div className=\"headerValueEnd\">\r\n                <Button inverted color=\"red\">\r\n                  변경사항 저장\r\n                </Button>\r\n              </div>\r\n            </Segment>\r\n            <Segment basic style={{ backgroundColor: \"slategrey\" }}>\r\n              <Grid columns={16}>\r\n                <Grid.Row style={{ borderBottom: \"0.05rem inset ivory\" }}>\r\n                  <Grid.Column style={{ width: \"150px\" }}></Grid.Column>\r\n                  <Grid.Column width={2}>휴식게이지</Grid.Column>\r\n                  <Grid.Column width={12}>\r\n                    <Grid columns=\"equal\">\r\n                      <Grid.Row>\r\n                        <Grid.Column>카오스던전</Grid.Column>\r\n                        <Grid.Column>가디언토벌</Grid.Column>\r\n                        <Grid.Column>에포나</Grid.Column>\r\n                        <Grid.Column>가디언레이드</Grid.Column>\r\n                        <Grid.Column>어비스2종</Grid.Column>\r\n                        <Grid.Column width={2}>주간던전</Grid.Column>\r\n                        <Grid.Column>아르고스</Grid.Column>\r\n                        <Grid.Column>발탄</Grid.Column>\r\n                        <Grid.Column>비아키스</Grid.Column>\r\n                        <Grid.Column>쿠크세이튼</Grid.Column>\r\n                        <Grid.Column>아브렐슈드</Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                {userTodoData.map((item, idx) => (\r\n                  <TodoComponent\r\n                    listId={item._id}\r\n                    userTodoData={item}\r\n                    setUserTodoData={setUserTodoData}\r\n                    iconId={iconId}\r\n                    setIconId={setIconId}\r\n                    setChangedList={setChangedList}\r\n                    thisItemChanged={\r\n                      changedList.includes(item._id)\r\n                        ? \"thisItemChanged\"\r\n                        : \"thisItemNotChanged\"\r\n                    }\r\n                  />\r\n                ))}\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Container>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDo;\r\n","const characterCdn = {\r\n  berserker:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/berserker_s.png\",\r\n  warlord:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/warlord_s.png\",\r\n  destroyer:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/destroyer_s.png\",\r\n  holyknight:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/holyknight_s.png\",\r\n  battlemaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/battlemaster_s.png\",\r\n  infighter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/infighter_s.png\",\r\n  soulmaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/soulmaster_s.png\",\r\n  lancemaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/lancemaster_s.png\",\r\n  striker:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/striker_s.png\",\r\n  devilhunter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/devilhunter_s.png\",\r\n  blaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blaster_s.png\",\r\n  hawkeye:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/hawkeye_s.png\",\r\n  scouter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/scouter_s.png\",\r\n  gunslinger:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/gunslinger_s.png\",\r\n  summoner:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/summoner_s.png\",\r\n  arcana:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/arcana_s.png\",\r\n  bard: \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/bard_s.png\",\r\n  sorceress:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/sorceress_s.png\",\r\n  blade:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blade_s.png\",\r\n  demonic:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/demonic_s.png\",\r\n  reaper:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/reaper_s.png\",\r\n};\r\n\r\nconst characterKorean = {\r\n  arcana: \"아르카나\",\r\n  bard: \"바드\",\r\n  battlemaster: \"배틀마스터\",\r\n  berserker: \"버서커\",\r\n  blade: \"블레이드\",\r\n  blaster: \"블래스터\",\r\n  demonic: \"데모닉\",\r\n  destroyer: \"디스트로이어\",\r\n  devilhunter: \"데빌헌터\",\r\n  gunslinger: \"건슬링어\",\r\n  hawkeye: \"호크아이\",\r\n  holyknight: \"홀리나이트\",\r\n  infighter: \"인파이터\",\r\n  lancemaster: \"창술사\",\r\n  reaper: \"리퍼\",\r\n  scouter: \"스카우터\",\r\n  sorceress: \"소서리스\",\r\n  soulmaster: \"기공사\",\r\n  striker: \"스트라이커\",\r\n  summoner: \"서머너\",\r\n  warlord: \"워로드\",\r\n};\r\n\r\nexport { characterCdn, characterKorean };\r\n","import React, { useState, useEffect, useRef, innerRef } from 'react';\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  List,\r\n  Button,\r\n} from 'semantic-ui-react';\r\nimport { characterCdn, characterKorean } from '../../_data/characterDefinition';\r\nimport axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { backendUrl } from '../Utils/ConstVar';\r\nimport cookie from 'js-cookie';\r\n\r\nimport './AddCharacter.css';\r\n\r\nfunction AddCharacter({\r\n  addCharacterModal,\r\n  closeAddCharacter,\r\n  userTodoData,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  limit,\r\n}) {\r\n  const [selectCharacterModal, setSelectCharacterModal] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState('');\r\n  const [characterName, setCharacterName] = useState('');\r\n  const [chaosRestValue, setChaosRestValue] = useState(0);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(0);\r\n  const [eponaRestValue, setEponaRestValue] = useState(0);\r\n  const regex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]+$/;\r\n  const regexNumber = /^[0-9]+$/;\r\n\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n\r\n  const closeSelectCharacter = () => setSelectCharacterModal(false);\r\n\r\n  const modalShow = () => {\r\n    setSelectCharacterModal(true);\r\n  };\r\n\r\n  const classSelected = (event) => {\r\n    let selectedClass;\r\n    if (event.target.className.indexOf('image') > 0) {\r\n      selectedClass = event.target.dataset.options;\r\n    } else {\r\n      selectedClass = event.target.className.split(' ')[2];\r\n    }\r\n    setSelectedCharacter(selectedClass);\r\n    setSelectCharacterModal(false);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeAddCharacterModal = () => {\r\n    setSelectedCharacter('');\r\n    setCharacterName('');\r\n    setChaosRestValue(0);\r\n    setGuardianRestValue(0);\r\n    setEponaRestValue(0);\r\n    closeAddCharacter();\r\n  };\r\n\r\n  const changeInputCharName = (event, data) => {\r\n    const insertedValue = data.value;\r\n    if (insertedValue.length === 0) {\r\n      setCharacterName('');\r\n      return;\r\n    }\r\n    if (!regex.test(insertedValue) || insertedValue.length > 12) return;\r\n    setCharacterName(insertedValue);\r\n  };\r\n\r\n  const changeRestValue = (event, data) => {\r\n    event.preventDefault();\r\n    if (!regexNumber.test(event.target.value)) return;\r\n    if (event.target.id === 'chaosChange') {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = chaosRestValue + (changedValue - chaosRestValue) * 10;\r\n      if (valueOutput < 0) setChaosRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValue(valueOutput);\r\n      else setChaosRestValue(100);\r\n    }\r\n    if (event.target.id === 'guardianChange') {\r\n      const changedValue = event.target.value;\r\n      const valueOutput =\r\n        guardianRestValue + (changedValue - guardianRestValue) * 10;\r\n      if (valueOutput < 0) setGuardianRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValue(valueOutput);\r\n      else setGuardianRestValue(100);\r\n    }\r\n    if (event.target.id === 'eponaChange') {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = eponaRestValue + (changedValue - eponaRestValue) * 10;\r\n      if (valueOutput < 0) setEponaRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValue(valueOutput);\r\n      else setEponaRestValue(100);\r\n    }\r\n  };\r\n\r\n  const confirmAddCharacter = () => {\r\n    const createdData = {\r\n      // _id: \"5d725a037b292f5f8ceff795\",\r\n      // user: \"5d7a514b5d2c12c7449be042\",\r\n      character: selectedCharacter,\r\n      characterName: characterName,\r\n      date: Date.now(),\r\n      // idx: 2,\r\n      chaosRestValue,\r\n      guardianRestValue,\r\n      eponaRestValue,\r\n      chaosDone: 0,\r\n      guardianDone: 0,\r\n      eponaDone: 0,\r\n      guardianWeeklyDone: 0,\r\n      abyssDungeon2: false,\r\n      // abyssDungeonWeekly: true,\r\n      // rehearsalAndDejavu: [\"kukuseitn\", \"abrel\"],\r\n      argos: false,\r\n      baltan: false,\r\n      biakiss: false,\r\n      kukuseitn: false,\r\n      abrel: false,\r\n      attributeChanged: false,\r\n      weeklyAttributeChanged: false,\r\n      createdAt: Date.now(),\r\n    };\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/homeworks`,\r\n        createdData,\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        // setUserTodoData([...userTodoData, response.data.data]);\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          userTodoData.length % limit === 0\r\n        ) {\r\n          viewPage(false, true, response.data.totalLength);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n        closeAddCharacterModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.error, {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        closeAddCharacterModal();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const classElements = document.getElementsByClassName(\r\n      'characterClassContent'\r\n    );\r\n    let eventAdd;\r\n    for (let index = 0; index < classElements.length; index++) {\r\n      eventAdd = classElements[index].addEventListener('click', (event) => {\r\n        classSelected(event);\r\n      });\r\n    }\r\n    return () => {\r\n      for (let index = 0; index < classElements.length; index++) {\r\n        classElements[index].removeEventListener('click', eventAdd);\r\n      }\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById('characterNameInputId');\r\n    const enterEvent = element.addEventListener('keypress', (event) => {\r\n      if (event.key === 'Enter') {\r\n        console.log(buttonRef.current);\r\n        if (buttonRef.current) buttonRef.current.click();\r\n      }\r\n    });\r\n    return () => {\r\n      element.removeEventListener('keypress', enterEvent);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size='mini'\r\n        open={addCharacterModal}\r\n        onClose={closeAddCharacterModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: 'dimgray' }}>\r\n          <Header className='itemHeader' as='h4'>\r\n            {!selectedCharacter ? (\r\n              <>\r\n                <span className='itemHeaderAttribute1'>클래스:</span>\r\n                <Icon\r\n                  name='add square'\r\n                  size='large'\r\n                  color='white'\r\n                  onClick={modalShow}\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className='itemHeaderAttribute2'>클래스:</span>\r\n                <span onClick={() => setSelectCharacterModal(true)}>\r\n                  <Image\r\n                    src={characterCdn[selectedCharacter]}\r\n                    size='mini'\r\n                    avatar\r\n                  />\r\n                  {characterKorean[selectedCharacter]}\r\n                </span>\r\n              </>\r\n            )}\r\n          </Header>\r\n          <Header className='itemHeader' as='h4'>\r\n            <span style={{ marginRight: '40px' }}>케릭명:</span>\r\n            <Input\r\n              transparent\r\n              placeholder='케릭터명'\r\n              style={{ color: 'white' }}\r\n              className='charNameInput'\r\n              value={characterName}\r\n              ref={inputRef}\r\n              id='characterNameInputId'\r\n              onChange={(event, data) => changeInputCharName(event, data)}\r\n            />\r\n          </Header>\r\n          <Header className='itemHeaderRest' as='h4'>\r\n            <List divided selection>\r\n              <List.Item>\r\n                <Label horizontal>카오스던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: 'white' }}\r\n                  className='charNameInput'\r\n                  value={chaosRestValue}\r\n                  id='chaosChange'\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>가디언던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: 'white' }}\r\n                  className='charNameInput'\r\n                  value={guardianRestValue}\r\n                  id='guardianChange'\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>에포나</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: 'white' }}\r\n                  className='charNameInput'\r\n                  value={eponaRestValue}\r\n                  id='eponaChange'\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n            </List>\r\n          </Header>\r\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Button\r\n              circular\r\n              color='google plus'\r\n              icon='cancel'\r\n              onClick={closeAddCharacterModal}\r\n            />\r\n            <Button\r\n              circular\r\n              color='twitter'\r\n              icon='check'\r\n              onClick={confirmAddCharacter}\r\n            />\r\n            <button\r\n              ref={buttonRef}\r\n              onClick={confirmAddCharacter}\r\n              style={{ display: 'none' }}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <Modal\r\n        open={selectCharacterModal}\r\n        onClose={closeSelectCharacter}\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n        className='classSelectModal'\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            backgroundColor: '#384862',\r\n            color: 'white',\r\n            borderBottom: '1px solid white',\r\n          }}\r\n        >\r\n          클래스\r\n        </Modal.Header>\r\n        <Modal.Content style={{ backgroundColor: '#384862', color: 'white' }}>\r\n          <Grid columns={6}>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  전사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column\r\n                className='characterClassContent berserker'\r\n                name='berserker'\r\n              >\r\n                <Image\r\n                  src={characterCdn.berserker}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='berserker'\r\n                />\r\n                버서커\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent warlord'>\r\n                <Image\r\n                  src={characterCdn.warlord}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='warlord'\r\n                />\r\n                워로드\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent destroyer'>\r\n                <Image\r\n                  src={characterCdn.destroyer}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='destroyer'\r\n                />\r\n                디스트로이어\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent holyknight'>\r\n                <Image\r\n                  src={characterCdn.holyknight}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='holyknight'\r\n                />\r\n                홀리나이트\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  무도가\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent battlemaster'>\r\n                <Image\r\n                  src={characterCdn.battlemaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='battlemaster'\r\n                />\r\n                배틀마스터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent infighter'>\r\n                <Image\r\n                  src={characterCdn.infighter}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='infighter'\r\n                />\r\n                인파이터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent soulmaster'>\r\n                <Image\r\n                  src={characterCdn.soulmaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='soulmaster'\r\n                />\r\n                기공사\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent lancemaster'>\r\n                <Image\r\n                  src={characterCdn.lancemaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='lancemaster'\r\n                />\r\n                창술사\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent striker'>\r\n                <Image\r\n                  src={characterCdn.striker}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='striker'\r\n                />\r\n                스트라이커\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  헌터\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent devilhunter'>\r\n                <Image\r\n                  src={characterCdn.devilhunter}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='devilhunter'\r\n                />\r\n                데빌헌터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent blaster'>\r\n                <Image\r\n                  src={characterCdn.blaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='blaster'\r\n                />\r\n                블래스터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent hawkeye'>\r\n                <Image\r\n                  src={characterCdn.hawkeye}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='hawkeye'\r\n                />\r\n                호크아이\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent scouter'>\r\n                <Image\r\n                  src={characterCdn.scouter}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='scouter'\r\n                />\r\n                스카우터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent gunslinger'>\r\n                <Image\r\n                  src={characterCdn.gunslinger}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='gunslinger'\r\n                />\r\n                건슬링어\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  마법사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent summoner'>\r\n                <Image\r\n                  src={characterCdn.summoner}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='summoner'\r\n                />\r\n                서머너\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent arcana'>\r\n                <Image\r\n                  src={characterCdn.arcana}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='arcana'\r\n                />\r\n                아르카나\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent bard'>\r\n                <Image\r\n                  src={characterCdn.bard}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='bard'\r\n                />\r\n                바드\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent sorceress'>\r\n                <Image\r\n                  src={characterCdn.sorceress}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='sorceress'\r\n                />\r\n                소서리스\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  암살자\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent blade'>\r\n                <Image\r\n                  src={characterCdn.blade}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='blade'\r\n                />\r\n                블레이드\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent demonic'>\r\n                <Image\r\n                  src={characterCdn.demonic}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='demonic'\r\n                />\r\n                데모닉\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent reaper'>\r\n                <Image\r\n                  src={characterCdn.reaper}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='reaper'\r\n                />\r\n                리퍼\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Modal, Image, Button } from \"semantic-ui-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { characterCdn } from \"../../_data/characterDefinition\";\r\n\r\nfunction RestValue({ item, userTodoData, setUserTodoData }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(item._id);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowModal(true);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  // if you use setShowModal directly in Modal onClose, react will throw error\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [chaosRestValue, setChaosRestValue] = useState(item.chaosRestValue);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValue, setEponaRestValue] = useState(item.eponaRestValue);\r\n\r\n  const [chaosRestValueChange, setChaosRestValueChange] = useState(\r\n    item.chaosRestValue\r\n  );\r\n  const [guardianRestValueChange, setGuardianRestValueChange] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValueChange, setEponaRestValueChange] = useState(\r\n    item.eponaRestValue\r\n  );\r\n\r\n  const valueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"chaosChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        chaosRestValueChange + (changedValue - chaosRestValueChange) * 10;\r\n      if (valueOutput < 0) setChaosRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValueChange(valueOutput);\r\n      else setChaosRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"guardianChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        guardianRestValueChange + (changedValue - guardianRestValueChange) * 10;\r\n      if (valueOutput < 0) setGuardianRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValueChange(valueOutput);\r\n      else setGuardianRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"eponaChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        eponaRestValueChange + (changedValue - eponaRestValueChange) * 10;\r\n      if (valueOutput < 0) setEponaRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValueChange(valueOutput);\r\n      else setEponaRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const confirmValue = () => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === item._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"chaosRestValue\"] = chaosRestValueChange;\r\n    newArr[indexValue][\"guardianRestValue\"] = guardianRestValueChange;\r\n    newArr[indexValue][\"eponaRestValue\"] = eponaRestValueChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column id={item._id}>\r\n        카던: {item.chaosRestValue}\r\n        <br />\r\n        가디언: {item.guardianRestValue}\r\n        <br />\r\n        에포나: {item.eponaRestValue}\r\n      </Grid.Column>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Header>\r\n          <Image src={characterCdn[item.character]} size=\"mini\" avatar />\r\n          {item.characterName}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextField\r\n            id=\"chaosChange\"\r\n            type=\"number\"\r\n            label=\"카오스던전\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={chaosRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"guardianChange\"\r\n            type=\"number\"\r\n            label=\"가디언토벌\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={guardianRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"eponaChange\"\r\n            type=\"number\"\r\n            label=\"에포나\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={eponaRestValueChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={closeModal}>\r\n            취소\r\n          </Button>\r\n          <Button positive onClick={confirmValue}>\r\n            확인\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestValue;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Image, Icon, Popup } from 'semantic-ui-react';\r\nimport { characterCdn } from '../../_data/characterDefinition';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\nimport './CharacterAvatarCss.css';\r\nimport { backendUrl } from '../Utils/ConstVar';\r\n\r\nfunction CharacterAvatar({\r\n  itemId,\r\n  character,\r\n  characterName,\r\n  attributeChanged,\r\n  weeklyAttributeChanged,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  alarmCharacter,\r\n  limit,\r\n  dontChange,\r\n  userTodoData,\r\n  setUserTodoData,\r\n}) {\r\n  const [deleteIcon, showDeleteIcon] = useState(false);\r\n\r\n  const [showDontChange, setShowDontChange] = useState(false);\r\n\r\n  const [dontChangeState, setDontChangeState] = useState(dontChange);\r\n\r\n  const [alarmState, setAlarmState] = useState('');\r\n\r\n  const deleteCharacter = (id) => {\r\n    // console.log(id);\r\n    // const indexValue = userTodoData.findIndex((anItem) => {\r\n    //   return anItem._id === id;\r\n    // });\r\n    // let newArr = [...userTodoData];\r\n    // newArr.splice(indexValue, 1);\r\n    // setUserTodoData(newArr);\r\n    // showDeleteIcon(false);\r\n\r\n    axios\r\n      .delete(\r\n        `${backendUrl}/loado/api/homeworks/${itemId}`,\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          response.data.totalLength % limit === 0\r\n        ) {\r\n          viewPage(true, false);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  const dontChangeCharacter = (id) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].dontChange = !dontChange;\r\n    newArr[indexValue]['attributeChanged'] = true;\r\n    setDontChangeState(!dontChangeState);\r\n    setUserTodoData(newArr);\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  // 원래 1회 실행으로 useEffect에 []를 넣었지만 이걸 넣으니 되돌아가기가 안됨... 그래서 [] 빼보니 됨\r\n  useEffect(() => {\r\n    let element = document.getElementById(`${itemId}_${characterName}`);\r\n    const rightclickEvent = element.addEventListener('contextmenu', (event) => {\r\n      event.preventDefault();\r\n      setShowDontChange(!showDontChange);\r\n    });\r\n    return () => {\r\n      element.removeEventListener('contextmenu', rightclickEvent);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column>\r\n        <Image\r\n          src={characterCdn[character]}\r\n          size='mini'\r\n          avatar\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n        />\r\n        <span\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n          className={alarmCharacter ? 'alarmLight' : ''}\r\n          id={`${itemId}_${characterName}`}\r\n          data-options={itemId}\r\n        >\r\n          {characterName}\r\n        </span>\r\n        {(attributeChanged || weeklyAttributeChanged) && (\r\n          <Icon\r\n            name='edit'\r\n            size='small'\r\n            style={{ color: 'springgreen', marginLeft: '3px' }}\r\n          />\r\n        )}\r\n        {deleteIcon && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name='trash'\r\n                color='red'\r\n                style={{ cursor: 'pointer', marginLeft: '1px' }}\r\n                onClick={() => deleteCharacter(itemId)}\r\n              />\r\n            }\r\n            content={`'${characterName}'에 대한 정보를 삭제하시겠습니까?`}\r\n          />\r\n        )}\r\n        {showDontChange && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name={dontChangeState ? 'bell' : 'bell slash'}\r\n                color='yellow'\r\n                style={{ cursor: 'pointer', marginLeft: '1px' }}\r\n                onClick={() => dontChangeCharacter(itemId)}\r\n              />\r\n            }\r\n            content={\r\n              dontChangeState\r\n                ? `'${characterName}' 휴식게이지 고정취소`\r\n                : `'${characterName}' 휴식게이지 고정`\r\n            }\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterAvatar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextArea, Icon } from 'semantic-ui-react';\r\n\r\nfunction PerIdNote({ item, userTodoData, setUserTodoData }) {\r\n  const [showTextArea, setShowTextArea] = useState(false);\r\n  const [textValue, setTextValue] = useState(item.note);\r\n\r\n  const dontChangeCharacter = (id, theText) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue]['note'] = theText;\r\n    newArr[indexValue]['attributeChanged'] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  const changeText = (event) => {\r\n    console.log(event);\r\n    if (event.target.value.length > 20) return;\r\n    setTextValue(event.target.value);\r\n    dontChangeCharacter(item._id, event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!showTextArea ? (\r\n        <>\r\n          {item.note}{' '}\r\n          <Icon\r\n            inverted\r\n            name='pencil square'\r\n            color='pink'\r\n            onClick={() => setShowTextArea(!showTextArea)}\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n        </>\r\n      ) : (\r\n        <TextArea value={textValue} onChange={(event) => changeText(event)} />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport default PerIdNote;\r\n","import React, { useState } from 'react';\r\nimport { Grid, Dropdown, Checkbox } from 'semantic-ui-react';\r\n\r\nfunction changeArr(arr, match, dataValue, type) {\r\n  const indexValue = arr.findIndex((anItem) => {\r\n    return anItem._id === match;\r\n  });\r\n  let newArr = [...arr];\r\n  newArr[indexValue][type] = dataValue;\r\n  newArr[indexValue]['attributeChanged'] = true;\r\n  return newArr;\r\n}\r\n\r\nfunction ChaosDunValue({\r\n  chaosItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${chaosItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${chaosItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${chaosItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [chaosData, setChaosData] = useState(chaosItem.chaosDone);\r\n\r\n  // 체크박스로 숙제를 체크하고 싶다는 피드백에 따라 작성\r\n  const [chaosDataChecked, setChaosDataChecked] = useState(\r\n    chaosItem.chaosDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setChaosData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      chaosItem._id,\r\n      data.value,\r\n      'chaosDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setChaosDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={chaosData}\r\n        />\r\n      ) : (\r\n        // 체크박스용\r\n        <Checkbox\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={chaosDataChecked}\r\n          value={chaosDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction GuardianDunValue({\r\n  guardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${guardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${guardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${guardianItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [guardianData, setGuardianData] = useState(guardianItem.guardianDone);\r\n\r\n  const [guardianDataChecked, setGuardianDataChecked] = useState(\r\n    guardianItem.guardianDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setGuardianData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      guardianItem._id,\r\n      data.value,\r\n      'guardianDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={guardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={guardianDataChecked}\r\n          value={guardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction EponaValue({\r\n  eponaItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${eponaItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${eponaItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${eponaItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${eponaItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [eponaData, setEponaData] = useState(eponaItem.eponaDone);\r\n\r\n  const [eponaDataChecked, setEponaDataChecked] = useState(\r\n    eponaItem.eponaDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setEponaData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      eponaItem._id,\r\n      data.value,\r\n      'eponaDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setEponaDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='epona'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={eponaData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='epona'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={eponaDataChecked}\r\n          value={eponaDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\n// Currently not used for nicer view\r\nfunction WeeklyGuardian({\r\n  weeklyGuardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${weeklyGuardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${weeklyGuardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${weeklyGuardianItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${weeklyGuardianItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [weeklyGuardianData, setWeeklyGuardianData] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone\r\n  );\r\n\r\n  const [weeklyGuardianDataChecked, setWeeklyGuardianDataChecked] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setWeeklyGuardianData(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === weeklyGuardianItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].guardianWeeklyDone = data.value;\r\n    newArr[indexValue]['attributeChanged'] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setWeeklyGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={weeklyGuardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={weeklyGuardianDataChecked}\r\n          value={weeklyGuardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport { ChaosDunValue, GuardianDunValue, EponaValue, WeeklyGuardian };\r\n","import React, { useState } from 'react';\r\nimport { Grid, Checkbox, Dropdown, Label } from 'semantic-ui-react';\r\n\r\nconst changeDatafunction = (\r\n  event,\r\n  data,\r\n  setItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  findIndexItem,\r\n  changeItem\r\n) => {\r\n  setItem(data.checked);\r\n  const indexValue = userTodoData.findIndex((anItem) => {\r\n    return anItem._id === findIndexItem._id;\r\n  });\r\n  let newArr = [...userTodoData];\r\n  newArr[indexValue][changeItem] = data.checked;\r\n  let attrChanged =\r\n    changeItem === 'abyssDungeonWeekly'\r\n      ? 'weeklyAttributeChanged'\r\n      : 'attributeChanged';\r\n  newArr[indexValue][attrChanged] = true;\r\n  setUserTodoData(newArr);\r\n};\r\n\r\nfunction AbyssDun2({ abyssDun2Item, userTodoData, setUserTodoData }) {\r\n  const [abyssDun2, setAbyssDun2] = useState(abyssDun2Item.abyssDungeon2);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='AbyssDun2'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbyssDun2,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abyssDun2Item,\r\n            'abyssDungeon2'\r\n          )\r\n        }\r\n        checked={abyssDun2}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbyssRaid({ idx, abyssRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abyssRaid, setAbyssRaid] = useState(abyssRaidItem.abyssDungeonWeekly);\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <Grid.Column style={{ display: 'flex' }}>\r\n        <Checkbox\r\n          name='AbyssRaid'\r\n          onChange={(event, data) =>\r\n            changeDatafunction(\r\n              event,\r\n              data,\r\n              setAbyssRaid,\r\n              userTodoData,\r\n              setUserTodoData,\r\n              abyssRaidItem,\r\n              'abyssDungeonWeekly'\r\n            )\r\n          }\r\n          checked={abyssRaid}\r\n        />\r\n      </Grid.Column>\r\n    )\r\n  );\r\n}\r\n\r\nfunction RehearsalAndDejavu({\r\n  rehearsalAndDejavuItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  idx,\r\n}) {\r\n  const options_combo1 = [\r\n    { key: 'kukuseitn', text: '쿠크리허설', value: 'kukuseitn' },\r\n    { key: 'abrel', text: '아브렐데쟈뷰', value: 'abrel' },\r\n  ];\r\n  const [rehearsalAndDejavu, setRehearsalAndDejavu] = useState(\r\n    rehearsalAndDejavuItem.rehearsalAndDejavu\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setRehearsalAndDejavu(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === rehearsalAndDejavuItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].rehearsalAndDejavu = data.value;\r\n    newArr[indexValue].weeklyAttributeChanged = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder='쿠크/아브렐'\r\n            fluid\r\n            multiple\r\n            selection\r\n            options={options_combo1}\r\n            value={rehearsalAndDejavu}\r\n            onChange={(event, data) => changeData(event, data)}\r\n          />\r\n        </Grid.Column>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nfunction ArgosRaid({ argosRaidItem, userTodoData, setUserTodoData }) {\r\n  const [argosRaid, setArgosRaid] = useState(argosRaidItem.argos);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='ArgosRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setArgosRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            argosRaidItem,\r\n            'argos'\r\n          )\r\n        }\r\n        checked={argosRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BaltanRaid({ baltanRaidItem, userTodoData, setUserTodoData }) {\r\n  const [baltanRaid, setBaltanRaid] = useState(baltanRaidItem.baltan);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='BaltanRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBaltanRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            baltanRaidItem,\r\n            'baltan'\r\n          )\r\n        }\r\n        checked={baltanRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BiakissRaid({ biakissRaidItem, userTodoData, setUserTodoData }) {\r\n  const [biakissRaid, setBiakissRaid] = useState(biakissRaidItem.biakiss);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='BiakissRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBiakissRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            biakissRaidItem,\r\n            'biakiss'\r\n          )\r\n        }\r\n        checked={biakissRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction KukseitnRaid({ kukseitnRaidItem, userTodoData, setUserTodoData }) {\r\n  const [kukseitnRaid, setKukseitnRaid] = useState(kukseitnRaidItem.kukuseitn);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='KukseitnRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setKukseitnRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            kukseitnRaidItem,\r\n            'kukuseitn'\r\n          )\r\n        }\r\n        checked={kukseitnRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbrelRaid({ abrelRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abrelRaid, setAbrelRaid] = useState(abrelRaidItem.abrel);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='AbrelRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbrelRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abrelRaidItem,\r\n            'abrel'\r\n          )\r\n        }\r\n        checked={abrelRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport {\r\n  AbyssDun2,\r\n  AbyssRaid,\r\n  RehearsalAndDejavu,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n};\r\n","import axios from 'axios';\r\nimport { backendUrl, axiosConfigAuth } from './ConstVar';\r\nimport { toast } from 'react-toastify';\r\n\r\nasync function viewDataMain(\r\n  minusOne,\r\n  plusOne,\r\n  plusPage,\r\n  limit,\r\n  activePage,\r\n  setActivePage,\r\n  userCookie\r\n) {\r\n  let searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${activePage}`;\r\n\r\n  if (minusOne) {\r\n    searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n      activePage - 1\r\n    }`;\r\n    setActivePage(activePage - 1);\r\n  } else if (plusOne) {\r\n    searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n      Math.floor(plusPage / limit) + 1\r\n    }`;\r\n    setActivePage(Math.floor(plusPage / limit) + 1);\r\n  }\r\n\r\n  const axiosResult = await axios\r\n    .get(searchString, axiosConfigAuth(userCookie))\r\n    .then((response) => {\r\n      const totalLength = response.data.totalLength;\r\n      let setPage = 0;\r\n      if (totalLength) {\r\n        const totalPage =\r\n          totalLength / limit - Math.floor(totalLength / limit) > 0\r\n            ? Math.floor(totalLength / limit) + 1\r\n            : Math.floor(totalLength / limit);\r\n        setPage = totalPage;\r\n      } else {\r\n        setPage = 1;\r\n      }\r\n      return {\r\n        viewData: response.data,\r\n        success: true,\r\n        setPage,\r\n      };\r\n    })\r\n    .catch((err) => {\r\n      return {\r\n        viewData: [],\r\n        success: true,\r\n        setPage: 1,\r\n      };\r\n    });\r\n  return axiosResult;\r\n}\r\n\r\nasync function applyChangesUtil(submitData, userCookie) {\r\n  let errorOccured = false;\r\n\r\n  for (let index = 0; index < submitData.length; index++) {\r\n    await axios\r\n      .put(\r\n        `${backendUrl}/loado/api/homeworks/${submitData[index]._id}`,\r\n        {\r\n          data: submitData[index],\r\n        },\r\n        axiosConfigAuth(userCookie)\r\n      )\r\n      .then((response) => {})\r\n      .catch((err) => {\r\n        errorOccured = true;\r\n      });\r\n  }\r\n  return errorOccured;\r\n}\r\n\r\nfunction alarmRestValueUtil(todoList, alarmTrue) {\r\n  let alarmList = [];\r\n  let alarm = false;\r\n\r\n  // 알람 중지\r\n  if (!alarmTrue) {\r\n    alarmList = todoList.map((item, idx) => {\r\n      item.alarmCharacter = false;\r\n      return item;\r\n    });\r\n    alarm = true;\r\n  }\r\n  // 알람 온\r\n  else {\r\n    alarmList = todoList.map((item, idx) => {\r\n      if (\r\n        item.chaosRestValue >= 40 ||\r\n        item.guardianRestValue >= 40 ||\r\n        item.eponaRestValue >= 60\r\n      ) {\r\n        item.alarmCharacter = true;\r\n      }\r\n      return item;\r\n    });\r\n    alarm = false;\r\n  }\r\n  return {\r\n    alarmList,\r\n    alarm,\r\n  };\r\n}\r\n\r\nfunction toastMessage(msg, type) {\r\n  if (type === 'error') {\r\n    return toast.error(msg, {\r\n      position: toast.POSITION.BOTTOM_LEFT,\r\n    });\r\n  } else if (type === 'info') {\r\n    return toast.info(msg, {\r\n      position: toast.POSITION.BOTTOM_LEFT,\r\n    });\r\n  }\r\n}\r\n\r\nexport { viewDataMain, applyChangesUtil, alarmRestValueUtil, toastMessage };\r\n","import React, { useState, useEffect } from 'react';\r\nimport './CharacterToDo.css';\r\nimport AddCharacter from '../Utils/AddCharacter';\r\n\r\nimport {\r\n  Header,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Container,\r\n  Icon,\r\n  Dimmer,\r\n  Loader,\r\n  Pagination,\r\n  Image,\r\n  Label,\r\n} from 'semantic-ui-react';\r\nimport RestValue from '../GridItem/RestValue';\r\nimport CharacterAvatar from './CharacterAvatar';\r\nimport PerIdNote from './PerIdNote';\r\nimport {\r\n  ChaosDunValue,\r\n  GuardianDunValue,\r\n  EponaValue,\r\n  WeeklyGuardian,\r\n} from '../GridItem/DungeonAndEpona';\r\nimport {\r\n  AbyssDun2,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n} from '../GridItem/AbyssAndRaid';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { backendUrl, axiosConfigAuth } from '../Utils/ConstVar';\r\nimport {\r\n  viewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n} from '../Utils/ViewDataUtil';\r\n\r\nfunction CharacterToDoRow({ limit, type }) {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  const [userTodoData, setUserTodoData] = useState([]);\r\n\r\n  const [addCharacterModal, setAddCharacterModal] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const [pagination, setPagination] = useState(0);\r\n\r\n  const [viewByCheckBox, setViewByCheckBox] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const addCharacter = () => {\r\n    setAddCharacterModal(true);\r\n  };\r\n\r\n  const closeAddCharacter = () => {\r\n    setAddCharacterModal(false);\r\n  };\r\n\r\n  const viewPage = async (minusOne = false, plusOne = false, plusPage = 0) => {\r\n    setLoading(true);\r\n    setUserTodoData([]);\r\n\r\n    const resultData = await viewDataMain(\r\n      minusOne,\r\n      plusOne,\r\n      plusPage,\r\n      limit,\r\n      activePage,\r\n      setActivePage,\r\n      cookie.get('loadoUserToken')\r\n    );\r\n\r\n    if (resultData.success) {\r\n      setUserTodoData(resultData.viewData.data);\r\n      setPagination(resultData.setPage);\r\n    } else {\r\n      toastMessage('데이터를 불러오지 못했습니다', 'error');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const applyChanges = async () => {\r\n    setLoading(true);\r\n\r\n    let submitData = userTodoData.filter(\r\n      (item) => item.attributeChanged === true\r\n    );\r\n\r\n    const applyResult = await applyChangesUtil(\r\n      submitData,\r\n      cookie.get('loadoUserToken')\r\n    );\r\n\r\n    setLoading(false);\r\n    if (applyResult) {\r\n      toastMessage('일부 변경사항이 제대로 반영되지 않았습니다', 'error');\r\n    }\r\n    viewPage();\r\n  };\r\n\r\n  const pageChange = async (event, data) => {\r\n    setLoading(true);\r\n    setActivePage(data.activePage);\r\n\r\n    // 샙트님 이거 2페이지에 있는 캐릭터 바꾸면 1페이지 같은 자리 있는것두 바뀌는거 같아여\r\n    // 이거 안 해주면 현재 페이지에서 바꾼 ID위치의 정보가 그대로 남아서 사용자에게 모든 페이지의 변경사항이 반영되는 것처럼 보임\r\n    setUserTodoData([]);\r\n\r\n    await axios\r\n      .get(\r\n        `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${data.activePage}`,\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toastMessage('데이터를 불러오지 못했습니다', 'error');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // for alarm animation\r\n  const [alarmTrue, setAlarmTrue] = useState(true);\r\n\r\n  // for note per list\r\n  const [showNote, setShowNote] = useState(false);\r\n\r\n  const alarmRestValue = (todoList) => {\r\n    const alarmDataResult = alarmRestValueUtil(todoList, alarmTrue);\r\n    setUserTodoData(alarmDataResult.alarmList);\r\n    setAlarmTrue(alarmDataResult.alarm);\r\n  };\r\n\r\n  // if no user cookie then redirect to login page\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get('loadoUserToken');\r\n    !loginCookie && history.push('/login');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    viewPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Segment\r\n          className='fullPage'\r\n          style={{ height: '94vh', border: 'none' }}\r\n        >\r\n          <Dimmer active>\r\n            <Loader size='big'>로딩중</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      ) : (\r\n        <Grid className='fullPage'>\r\n          <Container\r\n            style={{ width: '95%', marginLeft: '2.5%', marginRight: '2.5%' }}\r\n          >\r\n            <Grid.Column width={16}>\r\n              <Segment\r\n                basic\r\n                className='contentHeader'\r\n                style={{ marginBottom: '0px' }}\r\n              >\r\n                <div className='headerValueStart'>\r\n                  <Header\r\n                    size='medium'\r\n                    style={{ color: 'white', paddingTop: '5px' }}\r\n                  >\r\n                    {today}{' '}\r\n                    {type === 'computer' && (\r\n                      // <span style={{ marginLeft: '30px' }}>\r\n                      //   금일 06:00 ~ 명일 05:59\r\n                      // </span>\r\n                      <Label\r\n                        as='a'\r\n                        basic\r\n                        image\r\n                        style={{ marginLeft: '30px' }}\r\n                        onClick={() => setViewByCheckBox(!viewByCheckBox)}\r\n                      >\r\n                        {!viewByCheckBox ? (\r\n                          <>\r\n                            <Icon name='checkmark box' />로 보기\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <Icon name='angle double down' />로 보기\r\n                          </>\r\n                        )}\r\n                      </Label>\r\n                    )}\r\n                  </Header>\r\n                </div>\r\n                <div className='headerValueCenter'>\r\n                  <Pagination\r\n                    // defaultActivePage={1}\r\n                    firstItem={null}\r\n                    lastItem={null}\r\n                    pointing\r\n                    secondary\r\n                    totalPages={pagination}\r\n                    activePage={activePage}\r\n                    onPageChange={(event, data) => pageChange(event, data)}\r\n                  />\r\n                </div>\r\n                <div className='headerValueEnd'>\r\n                  <Button inverted color='olive' onClick={addCharacter}>\r\n                    케릭터 추가\r\n                  </Button>\r\n                  <Button inverted color='red' onClick={applyChanges}>\r\n                    변경사항 저장\r\n                  </Button>\r\n                </div>\r\n              </Segment>\r\n              <Segment\r\n                basic\r\n                style={{ backgroundColor: 'dimgray', marginTop: '0px' }}\r\n              >\r\n                <Grid columns={limit + 1}>\r\n                  <Grid.Row\r\n                    style={{ borderBottom: !showNote && '0.05rem inset ivory' }}\r\n                  >\r\n                    <Grid.Column className='contentColumn'>\r\n                      {/* padding got from <Button/> */}\r\n                      <Header\r\n                        as='h4'\r\n                        style={{\r\n                          color: 'white',\r\n                          display: 'flex',\r\n                          padding: '.78571429em 1.5em .78571429em',\r\n                        }}\r\n                      >\r\n                        <div>\r\n                          <Icon\r\n                            className='iconClass'\r\n                            name={alarmTrue ? 'alarm' : 'alarm mute'}\r\n                            onClick={() => alarmRestValue(userTodoData)}\r\n                          />\r\n                          {'  //  '}\r\n                          <Icon\r\n                            className='iconClass'\r\n                            name={\r\n                              !showNote\r\n                                ? 'sticky note outline'\r\n                                : 'angle double up'\r\n                            }\r\n                            onClick={() => setShowNote(!showNote)}\r\n                          />\r\n                        </div>\r\n                      </Header>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <CharacterAvatar\r\n                        itemId={item._id}\r\n                        character={item.character}\r\n                        characterName={item.characterName}\r\n                        attributeChanged={item.attributeChanged}\r\n                        weeklyAttributeChanged={item.weeklyAttributeChanged}\r\n                        axiosConfigAuth={axiosConfigAuth}\r\n                        viewPage={viewPage}\r\n                        alarmCharacter={item.alarmCharacter}\r\n                        limit={limit}\r\n                        dontChange={item.dontChange}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  {showNote && (\r\n                    <Grid.Row\r\n                      style={{\r\n                        padding: 0,\r\n                        borderBottom: '0.05rem inset ivory',\r\n                        paddingBottom: '7px',\r\n                      }}\r\n                    >\r\n                      <Grid.Column />\r\n                      {userTodoData.map((item, idx) => (\r\n                        <PerIdNote\r\n                          item={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                  )}\r\n                  <Grid.Row className='eachRow'>\r\n                    <Grid.Column className='contentColumn'>\r\n                      <Icon name='calendar check outline' />\r\n                      휴식게이지\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <RestValue\r\n                        item={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className='eachRow'>\r\n                    <Grid.Column className='contentColumn'>\r\n                      <div>\r\n                        <Image\r\n                          src='./images/loa_icons/chaosDun.png'\r\n                          avatar\r\n                          className='contentImage'\r\n                        />\r\n                        <span>카오스던전</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <ChaosDunValue\r\n                        chaosItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className='eachRow'>\r\n                    <Grid.Column className='contentColumn'>\r\n                      <div>\r\n                        <Image\r\n                          src='./images/loa_icons/guardianDun.png'\r\n                          avatar\r\n                          className='contentImage'\r\n                        />\r\n                        <span>가디언토벌</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <GuardianDunValue\r\n                        guardianItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className='eachRow'>\r\n                    <Grid.Column className='contentColumn'>\r\n                      <div>\r\n                        <Image\r\n                          src='./images/loa_icons/epona.png'\r\n                          avatar\r\n                          className='contentImage'\r\n                        />\r\n                        <span>에포나</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <EponaValue\r\n                        eponaItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className='eachRow'>\r\n                    <Grid.Column className='contentColumn'>\r\n                      <div>\r\n                        <Image\r\n                          src='./images/loa_icons/guardianDun.png'\r\n                          avatar\r\n                          className='contentImage'\r\n                        />\r\n                        <span>주간가디언</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <WeeklyGuardian\r\n                        weeklyGuardianItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className='eachRow'>\r\n                    <Grid.Column className='contentColumn'>\r\n                      <div>\r\n                        <Image\r\n                          src='./images/loa_icons/abyss2types.png'\r\n                          avatar\r\n                          className='contentImage'\r\n                        />\r\n                        <span>오레하2종</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbyssDun2\r\n                        abyssDun2Item={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  {/* 원정대 주간 컨탠츠는 안 보이게 하기로 결정 */}\r\n                  {/* <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/abyssWeekly.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>어비스레이드</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbyssRaid\r\n                        idx={idx}\r\n                        abyssRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/rehearsal.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>리허설, 데쟈뷰</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <RehearsalAndDejavu\r\n                        rehearsalAndDejavuItem={item}\r\n                        idx={idx}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row> */}\r\n                  <Grid.Row className='eachRow'>\r\n                    <Grid.Column className='contentColumn'>\r\n                      <div>\r\n                        <Image\r\n                          src='./images/loa_icons/argos.png'\r\n                          avatar\r\n                          className='contentImage'\r\n                        />\r\n                        <span>아르고스</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <ArgosRaid\r\n                        argosRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className='eachRow baltanRow'>\r\n                    <Grid.Column className='contentColumn'>\r\n                      <div>\r\n                        <Image\r\n                          src='./images/loa_icons/baltan.png'\r\n                          avatar\r\n                          className='contentImage'\r\n                        />\r\n                        <span>발탄</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <BaltanRaid\r\n                        baltanRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className='eachRow'>\r\n                    <Grid.Column className='contentColumn'>\r\n                      <div>\r\n                        <Image\r\n                          src='./images/loa_icons/biakiss.png'\r\n                          avatar\r\n                          className='contentImage'\r\n                        />\r\n                        <span>비아키스</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <BiakissRaid\r\n                        biakissRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className='eachRow'>\r\n                    <Grid.Column className='contentColumn'>\r\n                      <div>\r\n                        <Image\r\n                          src='./images/loa_icons/kukuseitn.png'\r\n                          avatar\r\n                          className='contentImage'\r\n                        />\r\n                        <span>쿠크세이튼</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <KukseitnRaid\r\n                        kukseitnRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className='abrelRow'>\r\n                    <Grid.Column className='contentColumn'>\r\n                      <div>\r\n                        <Image\r\n                          src='./images/loa_icons/abrel.png'\r\n                          avatar\r\n                          className='contentImage'\r\n                        />\r\n                        <span>아브렐슈드</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbrelRaid\r\n                        abrelRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Container>\r\n        </Grid>\r\n      )}\r\n\r\n      {addCharacterModal && (\r\n        <AddCharacter\r\n          addCharacterModal={addCharacterModal}\r\n          closeAddCharacter={closeAddCharacter}\r\n          userTodoData={userTodoData}\r\n          axiosConfigAuth={axiosConfigAuth}\r\n          viewPage={viewPage}\r\n          limit={limit}\r\n        />\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDoRow;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { backendUrl, axiosConfig } from '../Utils/ConstVar';\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState('로그인이 필요합니다');\r\n  const [user, setUser] = useState({\r\n    id: cookie.get('loginId') ? cookie.get('loginId') : '',\r\n    password: '',\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/login`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set('loadoUserToken', token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set('loadoUserCookie', JSON.stringify(userCookie));\r\n          history.push('/userhomework');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.request);\r\n        // console.log(err.response);\r\n        // console.log(err.message);\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        textAlign='center'\r\n        style={{ height: '100vh', marginTop: '0', backgroundColor: 'dimgray' }}\r\n        verticalAlign='middle'\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as='h2' textAlign='center' style={{ color: 'white' }}>\r\n            <Image src='https://react.semantic-ui.com/logo.png' />{' '}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size='large' onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon='user'\r\n                iconPosition='left'\r\n                placeholder='ID'\r\n                name='id'\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='lock'\r\n                iconPosition='left'\r\n                placeholder='비밀번호'\r\n                type='password'\r\n                name='password'\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <Button color='teal' fluid size='large' type='submit'>\r\n                로그인\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            계정이 없으신가요?{' '}\r\n            <a href='#' onClick={() => history.push('/register')}>\r\n              가입\r\n            </a>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { backendUrl, axiosConfig } from '../Utils/ConstVar';\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState('회원가입');\r\n  const [user, setUser] = useState({\r\n    id: '',\r\n    password: '',\r\n    name: '',\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/register`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n          name: user.name,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set('loadoUserToken', token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set('loadoUserCookie', JSON.stringify(userCookie));\r\n          history.push('/userhomework');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        textAlign='center'\r\n        style={{ height: '100vh', marginTop: '0', backgroundColor: 'dimgray' }}\r\n        verticalAlign='middle'\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as='h2' textAlign='center' style={{ color: 'white' }}>\r\n            <Image src='https://react.semantic-ui.com/logo.png' />{' '}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size='large' onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon='user'\r\n                iconPosition='left'\r\n                placeholder='ID'\r\n                name='id'\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='lock'\r\n                iconPosition='left'\r\n                placeholder='비밀번호'\r\n                type='password'\r\n                name='password'\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='quote left'\r\n                iconPosition='left'\r\n                placeholder='이름'\r\n                name='name'\r\n                onChange={handleChange}\r\n                value={user.name}\r\n              />\r\n\r\n              <Button color='teal' fluid size='large' type='submit'>\r\n                가입\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            비밀번호를 잊어버리시면 복구가 불가능합니다\r\n            <br />\r\n            [비밀번호는 암호화되어 저장됩니다]\r\n            <br />\r\n            [예시: .....APvs6TgQOG5d8byxYdLJOD0O6Am.....]\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import \"./App.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport NavHeader from \"./Components/Nav/NavHeader\";\r\nimport CharacterToDo from \"./Components/Home/CharacterToDo\";\r\nimport CharacterToDoRow from \"./Components/Home/CharacterToDoRow\";\r\nimport Login from \"./Components/Home/Login\";\r\nimport Register from \"./Components/Home/Register\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { createMedia } from \"@artsy/fresnel\";\r\n\r\nconst AppMedia = createMedia({\r\n  breakpoints: { zero: 0, mobile: 549, tablet: 850, computer: 1080 },\r\n});\r\n\r\nconst mediaStyles = AppMedia.createMediaStyle();\r\nconst { Media, MediaContextProvider } = AppMedia;\r\n\r\nfunction App() {\r\n  return (\r\n    <MediaContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/userhomework\">\r\n            <>\r\n              <Grid stackable style={{ border: \"none\" }}>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    background: \"lightCoral\",\r\n                  }}\r\n                >\r\n                  <Grid.Column style={{ border: \"none\" }}>\r\n                    <NavHeader />\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    paddingTop: \"0rem\",\r\n                    height: \"94vh\",\r\n                    backgroundColor: \"#384862\",\r\n                  }}\r\n                >\r\n                  <Grid.Column>\r\n                    <Media between={[\"zero\", \"tablet\"]}>\r\n                      <CharacterToDoRow limit={4} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media between={[\"tablet\", \"computer\"]}>\r\n                      <CharacterToDoRow limit={6} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media greaterThanOrEqual=\"computer\">\r\n                      <CharacterToDoRow limit={8} type=\"computer\" />\r\n                    </Media>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </>\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </MediaContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}