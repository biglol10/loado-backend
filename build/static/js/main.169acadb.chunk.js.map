{"version":3,"sources":["pages/components/util/ConstVar.js","pages/components/updatehistory/HistoryModal.js","_data/characterDefinition.js","pages/components/util/ViewDataUtil.js","pages/components/characterRelated/ChangePosition.js","pages/components/util/uploadPicToCloudinary.js","pages/components/util/ProfileModal.js","pages/navHeader/web/NavHeader.js","pages/navHeader/mobile/NavHeaderMobile.js","pages/components/characterRelated/AddCharacter.js","pages/components/userHomework/RestValue.js","pages/components/characterRelated/CharacterAvatar.js","pages/components/userHomework/PerIdNote.js","pages/components/userHomework/DungeonAndEponaUtil.js","_data/contentDefinition.js","pages/components/userHomework/DungeonAndEpona.js","pages/components/userHomework/AbyssAndRaid.js","pages/components/userHomework/WeeklyRaidContents.js","pages/components/userHomework/AddAndChange.js","pages/components/userHomework/PaginationComp.js","pages/components/userHomework/SettingChange.js","pages/components/userHomework/AlarmAndNote.js","pages/userHomework/index.js","pages/components/characterRelated/AddCharacterMobile.js","pages/components/userHomework/RestValueMobile.js","pages/components/userHomework/AlarmAndNoteMobile.js","pages/components/util/ContentDefinition.js","pages/userHomeworkMobile/index.js","pages/login/index.js","pages/register/index.js","pages/dashboard/index.js","App.js","index.js"],"names":["backendUrl","process","axiosConfig","headers","axiosConfigAuth","userCookie","Authorization","HistoryModal","showUpdateHistoryModal","setShowUpdateHistoryModal","setNoticeAlert","changeNotificationToFalse","useEffect","Modal","open","onClose","closeOnDimmerClick","Header","className","style","backgroundColor","color","borderBottom","Content","Grid","Row","padding","Column","width","characterCdn","berserker","warlord","destroyer","holyknight","battlemaster","infighter","soulmaster","lancemaster","striker","devilhunter","blaster","hawkeye","scouter","gunslinger","summoner","arcana","bard","sorceress","blade","demonic","reaper","characterKorean","viewDataMain","limit","theActivePage","setActivePage","a","searchString","axios","get","then","response","totalLength","data","setPage","Math","floor","viewData","success","catch","err","axiosResult","allViewDataMain","dataLength","applyChangesUtil","submitData","errorOccured","index","length","put","_id","getUserCheckBoxConfiguration","viewByCheckBox","result","changeUserCheckBoxConfiguration","alarmRestValueUtil","todoList","alarmTrue","alarmList","alarm","map","item","idx","chaosRestValue","guardianRestValue","eponaRestValue","alarmCharacter","toastMessage","msg","type","deviceType","alert","toast","error","position","POSITION","TOP_LEFT","info","BOTTOM_LEFT","updateProfilePic","profilePic","post","waitForSomeTime","timeToDelay","Promise","resolve","setTimeout","getLoadoLogs","ChangePosition","dragStartIndex","changeRowModal","setChangeRowModal","useState","userTodoData","setUserTodoData","labelText","setLabelText","changedIndexArr","setChangedIndexArr","saveChanges","distinctIndexData","Array","from","Set","sendData","filter","includes","cookie","window","location","reload","resultData","callData","dragStart","this","getAttribute","dragOver","e","preventDefault","dragDrop","dragEndIndex","fromIndex","toIndex","itemFrom","itemTo","itemFromIdx","itemToIdx","push","swapItems","classList","remove","dragEnter","add","dragLeave","draggables","document","querySelectorAll","forEach","draggable","addEventListener","removeEventListener","size","Label","as","ribbon","marginLeft","onClick","columns","sort","b","marginRight","Image","avatar","src","character","characterName","uploadPic","media","form","FormData","append","res","url","ProfileModal","profileModal","setProfileModal","cropper","setCropper","setMedia","mediaPreview","setMediaPreview","statusText","setStatusText","inputRef","useRef","cropperStyle","height","uploadResult","getCroppedCanvas","toDataURL","picUrl","destroy","Icon","name","cursor","current","click","ref","onChange","target","files","value","URL","createObjectURL","display","accept","image","cropBoxResizable","zoomable","highlight","responsive","guides","dragMode","initialAspectRatio","preview","viewMode","minCropBoxHeight","minCropBoxWidth","background","autoCropArea","checkOrientation","onInitialized","margin","content","overflow","boxSizing","Actions","Button","title","icon","circular","reset","setDragMode","negative","positive","NavHeader","userIdString","userValue","JSON","parse","history","useHistory","accountUser","setAccountUser","setOpen","noticeAlert","restValueBatch","user","newNotice","checkNewlyUpdate","Menu","borderRadius","marginBottom","borderless","Item","id","fontStyle","role","Popup","on","onOpen","trigger","userName","Card","Divider","hidden","Description","fontWeight","userId","set","NavHeaderMobile","AddCharacter","addCharacterModal","closeAddCharacter","viewPage","activePage","selectCharacterModal","setSelectCharacterModal","selectedCharacter","setSelectedCharacter","setCharacterName","setChaosRestValue","setGuardianRestValue","setEponaRestValue","regex","regexNumber","buttonRef","classSelected","event","selectedClass","indexOf","dataset","options","split","focus","closeAddCharacterModal","changeRestValue","test","changedValue","valueOutput","confirmAddCharacter","createdData","date","Date","now","chaosDone","guardianDone","eponaDone","guardianWeeklyDone","abyssDungeon2","argos","baltan","biakiss","kukuseitn","abrel","attributeChanged","weeklyAttributeChanged","createdAt","eventAdd","classElements","getElementsByClassName","element","getElementById","enterEvent","key","closeIcon","Input","transparent","placeholder","insertedValue","changeInputCharName","List","divided","selection","horizontal","justifyContent","marginTop","autoClose","RestValue","showModal","setShowModal","rightclickEvent","closeModal","chaosRestValueChange","setChaosRestValueChange","guardianRestValueChange","setGuardianRestValueChange","eponaRestValueChange","setEponaRestValueChange","valueChange","TextField","label","indexValue","findIndex","anItem","newArr","CharacterAvatar","itemId","dontChange","deleteIcon","showDeleteIcon","showDontChange","setShowDontChange","dontChangeState","setDontChangeState","delete","console","log","message","dontChangeCharacter","PerIdNote","showTextArea","setShowTextArea","note","textValue","setTextValue","changeText","theText","TextArea","inverted","changeArr","arr","match","dataValue","ChaosDunValue","chaosItem","text","chaosData","setChaosData","chaosDataChecked","setChaosDataChecked","changeData","paddingTop","Checkbox","checked","changeDataChecked","Dropdown","GuardianDunValue","guardianItem","guardianData","setGuardianData","guardianDataChecked","setGuardianDataChecked","EponaValue","eponaItem","eponaData","setEponaData","eponaDataChecked","setEponaDataChecked","WeeklyGuardian","weeklyGuardianItem","weeklyGuardianData","setWeeklyGuardianData","weeklyGuardianDataChecked","setWeeklyGuardianDataChecked","contentKeyKorToEng","휴식게이지","카오스던전","가디언토벌","에포나","주간가디언","어비스던전","아르고스","발탄","비아키스","쿠크세이튼","아브렐슈드","오레하2종","DungeonAndEpona","changeDatafunction","setItem","findIndexItem","changeItem","attrChanged","AbyssDun2","abyssDun2Item","abyssDun2","setAbyssDun2","ArgosRaid","argosRaidItem","argosRaid","setArgosRaid","BaltanRaid","baltanRaidItem","baltanRaid","setBaltanRaid","BiakissRaid","biakissRaidItem","biakissRaid","setBiakissRaid","KukseitnRaid","kukseitnRaidItem","kukseitnRaid","setKukseitnRaid","AbrelRaid","abrelRaidItem","abrelRaid","setAbrelRaid","WeeklyRaidContents","AddAndChange","addCharacter","applyChanges","PaginationComp","pagination","pageChange","Pagination","firstItem","lastItem","pointing","secondary","totalPages","onPageChange","SettingChange","changeUserCheckBoxConfigurationFunction","todayDate","today","getFullYear","getMonth","getDate","basic","AlarmAndNote","alarmRestValue","showNote","setShowNote","CharacterToDoRow","setAddCharacterModal","loading","setLoading","setPagination","setViewByCheckBox","applyResult","setAlarmTrue","callUsersCheckBoxValue","Segment","border","Dimmer","active","Loader","Container","alarmDataResult","paddingBottom","mobileInputRef","fullList","setFullList","mobileDropDownList","setMobileDropDownList","aList","addItem","iconPosition","filteredList","filterDropDown","scrolling","option","RestValueMobile","AlarmAndNoteMobile","showContentPopupValue","justContent","fontSize","CharacterToDoRowMobile","minusOne","plusOne","plusPage","pinned","AddCharacterMobile","Login","loginMessage","setLoginMessage","password","setUser","handleChange","prev","textAlign","verticalAlign","maxWidth","Form","onSubmit","token","stringify","stacked","fluid","Message","href","class","xmlns","viewBox","preserveAspectRatio","d","opacity","Register","Dashboard","lineLabels","setlineLabels","lineData","setlineData","barLabels","setBarLabels","barData","setBarData","userCount","setUserCount","userLoadoCount","setUserLoadoCount","loadologs","setLoadoLogs","keyA","dateValue","keyB","labels","count","hwCount","logsCount","jobGroupingResult","characterCount","getLoadoLogsFunction","chartjsLineData","datasets","fill","borderColor","chartjsBarData","borderWidth","scales","y","beginAtZero","plugins","yAxes","ticks","AppMedia","createMedia","breakpoints","zero","mobile","tablet","computer","Media","createMediaStyle","MediaContextProvider","App","path","between","greaterThanOrEqual","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.169acadb.chunk.js","sourcesContent":["const backendUrl = process.env.REACT_APP_BACKENDURL;\r\n\r\nconst axiosConfig = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst axiosConfigAuth = (userCookie) => {\r\n  const bearer = `Bearer ${userCookie}`;\r\n  return {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: bearer,\r\n    },\r\n  };\r\n};\r\n\r\nexport { backendUrl, axiosConfig, axiosConfigAuth };\r\n","import React, { useEffect } from \"react\";\r\nimport { Modal, Grid } from \"semantic-ui-react\";\r\nimport \"./HistoryModal.css\";\r\n\r\nfunction HistoryModal({\r\n  showUpdateHistoryModal,\r\n  setShowUpdateHistoryModal,\r\n  setNoticeAlert,\r\n  changeNotificationToFalse,\r\n}) {\r\n  useEffect(() => {\r\n    changeNotificationToFalse();\r\n    setNoticeAlert(false);\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      open={showUpdateHistoryModal}\r\n      onClose={() => setShowUpdateHistoryModal(false)}\r\n      closeOnDimmerClick\r\n    >\r\n      <Modal.Header\r\n        className=\"modalHeader\"\r\n        style={{\r\n          backgroundColor: \"#384862\",\r\n          color: \"white\",\r\n          borderBottom: \"1px solid white\",\r\n        }}\r\n      >\r\n        작업/업데이트 내역\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Grid>\r\n          {/* <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-06\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              직업명 오타 수정 : 아르라카 {\"->\"} 아르카나\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-07\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>가입 시 암호화 관련 설명 추가</Grid.Column>\r\n          </Grid.Row> */}\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-08\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              케릭터명 입력 후 엔터 이벤트를 등록하기 위해 [케릭터 추가] 팝업\r\n              등장 내부로직 수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-09\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              (버튼이 안 보이는 분들을 위해) 케릭터 추가 기능에서 클래스 선택 및\r\n              케릭터명 입력 후 엔터 시 케릭터가 추가되는 기능 추가\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-10\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              유지보수 및 코드 분석을 위해 내부 코드 리팩토링 진행 및 간결하게\r\n              수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-12\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 9월10일 업데이트 후 첫 로그인 시 화면에 아무것도 안 뜨던 현상\r\n              수정, 컨탠츠에 마우스 올리면 행의 색갈이 바뀌도록 수정\r\n              <br />\r\n              2. 카던, 가디언, 에포나에 숫자로 선택할 필요없이 체크로 선택하여\r\n              저장하기 가능토록 수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-16\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 케릭터 순서 변경 기능 추가 (우측 상단 이름 클릭 후 순서변경)\r\n              <br />\r\n              2. 깜빡거림으로 사용자가 업데이트 내용을 확인할 수 있도록 추가 및\r\n              작업 내역 확인 후 깜빡거림 멈추는 기능 추가\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-21\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              어플리케이션 업그레이드 비용 지불 및 다음날부터 내부에서 06시\r\n              휴식게이지 반영되도록 수정 (잘 안될 수도 있음), 안되면\r\n              개인휴식게이지반영 적용 요청\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-22\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>작업/업데이트 내역 화면 수정</Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-26\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>모바일웹 기능 개발</Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-27\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              아무나 06시 초기화를 할 수 없도록 암호화 진행. 즉, 소스 공개 가능\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-28\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. <span style={{ color: \"red\" }}>[버그픽스]</span> 순서변경에서\r\n              버그가 발생하던 부분 해결. 사용자가 1회 케릭터 추가 또는 삭제 한번\r\n              해줘야 모든게 제대로 작동\r\n              <br />\r\n              2. 아이폰으로 접속 시 강제 줌인 되는 현상 수정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-30\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 모바일 노트 기록 기능 추가\r\n              <br />\r\n              2. 숫자체크 또는 체크박스 사용자설정 유지하는 기능 개발완료\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-10-09\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              이제 자신의 프로필 사진을 변경해보세요!!! 계정명을 클릭해서 프로필\r\n              이미지를 자르고 업로드 하실 수 있습니다\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-10-28\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              특정 상황에서 페이징처리가 제대로 되지 않던 상황을 픽스했습니다\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default HistoryModal;\r\n","const characterCdn = {\r\n  berserker:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/berserker_s.png',\r\n  warlord:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/warlord_s.png',\r\n  destroyer:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/destroyer_s.png',\r\n  holyknight:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/holyknight_s.png',\r\n  battlemaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/battlemaster_s.png',\r\n  infighter:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/infighter_s.png',\r\n  soulmaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/soulmaster_s.png',\r\n  lancemaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/lancemaster_s.png',\r\n  striker:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/striker_s.png',\r\n  devilhunter:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/devilhunter_s.png',\r\n  blaster:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blaster_s.png',\r\n  hawkeye:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/hawkeye_s.png',\r\n  scouter:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/scouter_s.png',\r\n  gunslinger:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/gunslinger_s.png',\r\n  summoner:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/summoner_s.png',\r\n  arcana:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/arcana_s.png',\r\n  bard: 'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/bard_s.png',\r\n  sorceress:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/sorceress_s.png',\r\n  blade:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blade_s.png',\r\n  demonic:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/demonic_s.png',\r\n  reaper:\r\n    'https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/reaper_s.png',\r\n};\r\n\r\nconst characterKorean = {\r\n  arcana: '아르카나',\r\n  bard: '바드',\r\n  battlemaster: '배틀마스터',\r\n  berserker: '버서커',\r\n  blade: '블레이드',\r\n  blaster: '블래스터',\r\n  demonic: '데모닉',\r\n  destroyer: '디스트로이어',\r\n  devilhunter: '데빌헌터',\r\n  gunslinger: '건슬링어',\r\n  hawkeye: '호크아이',\r\n  holyknight: '홀리나이트',\r\n  infighter: '인파이터',\r\n  lancemaster: '창술사',\r\n  reaper: '리퍼',\r\n  scouter: '스카우터',\r\n  sorceress: '소서리스',\r\n  soulmaster: '기공사',\r\n  striker: '스트라이커',\r\n  summoner: '서머너',\r\n  warlord: '워로드',\r\n};\r\n\r\nconst characterEnglish = {\r\n  아르카나: 'arcana',\r\n  바드: 'bard',\r\n  배틀마스터: 'battlemaster',\r\n  버서커: 'berserker',\r\n  블래이드: 'blade',\r\n  블래스터: 'blaster',\r\n  데모닉: 'demonic',\r\n  디스트로이어: 'destroyer',\r\n  데빌헌터: 'devilhunter',\r\n  건슬링어: 'gunslinger',\r\n  호크아이: 'hawkeye',\r\n  홀리나이트: 'holyknight',\r\n  인파이터: 'infighter',\r\n  창술사: 'lancemaster',\r\n  리퍼: 'reaper',\r\n  스카우터: 'scouter',\r\n  소서리스: 'sorceress',\r\n  기공사: 'soulmaster',\r\n  스트라이커: 'striker',\r\n  서머너: 'summoner',\r\n  워로드: 'warlord',\r\n};\r\n\r\nexport { characterCdn, characterKorean, characterEnglish };\r\n","import axios from \"axios\";\r\nimport { backendUrl, axiosConfigAuth } from \"./ConstVar\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nasync function viewDataMain(limit, theActivePage, setActivePage, userCookie) {\r\n  let searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${theActivePage}`;\r\n\r\n  setActivePage(theActivePage);\r\n\r\n  // if (minusOne) {\r\n  //   searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n  //     whatPage - 1\r\n  //   }`;\r\n  //   setActivePage(whatPage - 1);\r\n  // } else if (plusOne) {\r\n  //   searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n  //     Math.floor(plusPage / limit) + 1\r\n  //   }`;\r\n  //   setActivePage(Math.floor(plusPage / limit) + 1);\r\n  // }\r\n\r\n  const axiosResult = await axios\r\n    .get(searchString, axiosConfigAuth(userCookie))\r\n    .then((response) => {\r\n      const totalLength = response.data.totalLength;\r\n      let setPage = 0;\r\n      if (totalLength) {\r\n        const totalPage =\r\n          totalLength / limit - Math.floor(totalLength / limit) > 0\r\n            ? Math.floor(totalLength / limit) + 1\r\n            : Math.floor(totalLength / limit);\r\n        setPage = totalPage;\r\n      } else {\r\n        setPage = 1;\r\n      }\r\n      return {\r\n        viewData: response.data,\r\n        success: true,\r\n        setPage,\r\n      };\r\n    })\r\n    .catch((err) => {\r\n      return {\r\n        viewData: [],\r\n        success: true,\r\n        setPage: 1,\r\n      };\r\n    });\r\n  return axiosResult;\r\n}\r\n\r\nasync function allViewDataMain(userCookie) {\r\n  let searchString = `${backendUrl}/loado/api/homeworks/getAllHomework`;\r\n  const axiosResult = await axios\r\n    .get(searchString, axiosConfigAuth(userCookie))\r\n    .then((response) => {\r\n      return {\r\n        viewData: response.data,\r\n        success: true,\r\n        dataLength: response.data.totalLength,\r\n      };\r\n    });\r\n  return axiosResult;\r\n}\r\n\r\nasync function applyChangesUtil(submitData, userCookie) {\r\n  let errorOccured = false;\r\n\r\n  for (let index = 0; index < submitData.length; index++) {\r\n    await axios\r\n      .put(\r\n        `${backendUrl}/loado/api/homeworks/${submitData[index]._id}`,\r\n        {\r\n          data: submitData[index],\r\n        },\r\n        axiosConfigAuth(userCookie)\r\n      )\r\n      .then((response) => {})\r\n      .catch((err) => {\r\n        errorOccured = true;\r\n      });\r\n  }\r\n  return errorOccured;\r\n}\r\n\r\nasync function getUserCheckBoxConfiguration(userCookie) {\r\n  const result = await axios\r\n    .get(\r\n      `${backendUrl}/loado/api/userConfigure/viewbycheckbox`,\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data.viewByCheckBox;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nasync function changeUserCheckBoxConfiguration(viewByCheckBox, userCookie) {\r\n  const result = await axios\r\n    .put(\r\n      `${backendUrl}/loado/api/userConfigure/viewbycheckbox`,\r\n      {\r\n        viewByCheckBox,\r\n      },\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data.success;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nfunction alarmRestValueUtil(todoList, alarmTrue) {\r\n  let alarmList = [];\r\n  let alarm = false;\r\n\r\n  // 알람 중지\r\n  if (!alarmTrue) {\r\n    alarmList = todoList.map((item, idx) => {\r\n      item.alarmCharacter = false;\r\n      return item;\r\n    });\r\n    alarm = true;\r\n  }\r\n  // 알람 온\r\n  else {\r\n    alarmList = todoList.map((item, idx) => {\r\n      if (\r\n        item.chaosRestValue >= 40 ||\r\n        item.guardianRestValue >= 40 ||\r\n        item.eponaRestValue >= 60\r\n      ) {\r\n        item.alarmCharacter = true;\r\n      }\r\n      return item;\r\n    });\r\n    alarm = false;\r\n  }\r\n  return {\r\n    alarmList,\r\n    alarm,\r\n  };\r\n}\r\n\r\nfunction toastMessage(msg, type, deviceType = \"notMobile\") {\r\n  if (deviceType === \"mobile\") {\r\n    alert(\"came to mobile\");\r\n    if (type === \"error\") {\r\n      return toast.error(msg, {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n    } else if (type === \"info\") {\r\n      return toast.info(msg, {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n    }\r\n  } else {\r\n    alert(\"came to not mobile\");\r\n    if (type === \"error\") {\r\n      return toast.error(msg, {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n      });\r\n    } else if (type === \"info\") {\r\n      return toast.info(msg, {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nasync function updateProfilePic(profilePic, userCookie) {\r\n  const result = await axios\r\n    .post(\r\n      `${backendUrl}/loado/api/userConfigure/uploadProfilePic`,\r\n      {\r\n        profilePic,\r\n      },\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data.success;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nfunction waitForSomeTime(timeToDelay) {\r\n  return new Promise((resolve) => setTimeout(resolve, timeToDelay));\r\n}\r\n\r\nasync function getLoadoLogs(userCookie) {\r\n  const result = await axios\r\n    .get(\r\n      `${backendUrl}/loado/api/adminFeatures/adminData/dailyLogsData`,\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nexport {\r\n  viewDataMain,\r\n  allViewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n  updateProfilePic,\r\n  waitForSomeTime,\r\n  getLoadoLogs,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Grid, Image, Header, Label } from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { characterCdn, characterKorean } from '../../../_data/characterDefinition';\r\n\r\nimport { allViewDataMain, applyChangesUtil } from '../util/ViewDataUtil';\r\n\r\nfunction ChangePosition({ changeRowModal, setChangeRowModal }) {\r\n  const [userTodoData, setUserTodoData] = useState();\r\n  const [labelText, setLabelText] = useState('저장');\r\n\r\n  const [changedIndexArr, setChangedIndexArr] = useState([]);\r\n\r\n  const saveChanges = async () => {\r\n    setLabelText('저장중입니다');\r\n    // ES6 distinct values\r\n    const distinctIndexData = Array.from(new Set(changedIndexArr));\r\n    const sendData = userTodoData.filter((item, index) =>\r\n      distinctIndexData.includes(index)\r\n    );\r\n    const applyResult = await applyChangesUtil(\r\n      sendData,\r\n      cookie.get('loadoUserToken')\r\n    );\r\n\r\n    if (applyResult) {\r\n      setLabelText('저장에 실패했습니다');\r\n      return;\r\n    }\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function callData() {\r\n      const resultData = await allViewDataMain(cookie.get('loadoUserToken'));\r\n      setUserTodoData(resultData.viewData.data);\r\n    }\r\n    callData();\r\n  }, []);\r\n\r\n  let dragStartIndex;\r\n\r\n  useEffect(() => {\r\n    function dragStart() {\r\n      dragStartIndex = +this.getAttribute('data-index');\r\n    }\r\n\r\n    function dragOver(e) {\r\n      //   nothing happens and the reason\r\n      // for that is basically the drag over event is getting in the way.\r\n      // So we want the read the only reason I have drag over here is to prevent the default action.\r\n      e.preventDefault();\r\n    }\r\n\r\n    function dragDrop() {\r\n      const dragEndIndex = +this.getAttribute('data-index');\r\n      swapItems(dragStartIndex, dragEndIndex);\r\n      this.classList.remove('over');\r\n    }\r\n\r\n    function dragEnter() {\r\n      this.classList.add('over');\r\n    }\r\n    function dragLeave() {\r\n      this.classList.remove('over');\r\n    }\r\n\r\n    // Swap list iteams that are drag and drop\r\n    function swapItems(fromIndex, toIndex) {\r\n      const itemFrom = userTodoData[fromIndex - 1];\r\n      const itemTo = userTodoData[toIndex - 1];\r\n\r\n      const itemFromIdx = itemFrom.idx;\r\n      const itemToIdx = itemTo.idx;\r\n\r\n      itemFrom.idx = itemToIdx;\r\n      itemTo.idx = itemFromIdx;\r\n\r\n      userTodoData[fromIndex - 1] = itemTo;\r\n      userTodoData[toIndex - 1] = itemFrom;\r\n\r\n      changedIndexArr.push(fromIndex - 1);\r\n      changedIndexArr.push(toIndex - 1);\r\n      setChangedIndexArr(changedIndexArr);\r\n\r\n      // console.log(changedIndexArr);\r\n\r\n      setUserTodoData([]); // 정보가 남아서 초기화\r\n      setUserTodoData(userTodoData);\r\n    }\r\n\r\n    if (userTodoData) {\r\n      const draggables = document.querySelectorAll('.draggable');\r\n\r\n      draggables.forEach((draggable) => {\r\n        draggable.addEventListener('dragstart', dragStart);\r\n        draggable.addEventListener('dragover', dragOver);\r\n        draggable.addEventListener('drop', dragDrop);\r\n        draggable.addEventListener('dragenter', dragEnter);\r\n        draggable.addEventListener('dragleave', dragLeave);\r\n      });\r\n\r\n      return () => {\r\n        draggables.forEach((draggable) => {\r\n          draggable.removeEventListener('dragstart', dragStart);\r\n          draggable.addEventListener('dragover', dragOver);\r\n          draggable.addEventListener('drop', dragDrop);\r\n          draggable.addEventListener('dragenter', dragEnter);\r\n          draggable.addEventListener('dragleave', dragLeave);\r\n        });\r\n      };\r\n    }\r\n  }, [userTodoData]);\r\n\r\n  return (\r\n    <Modal\r\n      open={changeRowModal}\r\n      onClose={() => setChangeRowModal(false)}\r\n      closeOnDimmerClick\r\n      size='tiny'\r\n    >\r\n      <Modal.Header\r\n        style={{\r\n          backgroundColor: '#384862',\r\n          color: 'white',\r\n          borderBottom: '1px solid white',\r\n        }}\r\n      >\r\n        케릭터 순서변경\r\n        {userTodoData && (\r\n          <Label\r\n            as='a'\r\n            color='orange'\r\n            ribbon\r\n            style={{ marginLeft: '80px' }}\r\n            onClick={saveChanges}\r\n          >\r\n            {labelText}\r\n          </Label>\r\n        )}\r\n      </Modal.Header>\r\n      <Modal.Content style={{ backgroundColor: 'lavender' }}>\r\n        <Grid columns={10}>\r\n          {userTodoData &&\r\n            userTodoData\r\n              .sort(function (a, b) {\r\n                return a['idx'] - b['idx'];\r\n              })\r\n              .map((item, index) => (\r\n                <Grid.Row\r\n                  className='draggable'\r\n                  draggable={true}\r\n                  data-index={item.idx}\r\n                  style={{ borderBottom: '1px solid rgb(56, 72, 98)' }}\r\n                >\r\n                  <Grid.Column width={7}>\r\n                    <Header as='h5'>\r\n                      <span style={{ marginRight: '20px' }}>{index + 1}.</span>\r\n                      <Image avatar src={characterCdn[item.character]} />{' '}\r\n                      <span style={{ marginLeft: '10px' }}>\r\n                        {item.characterName}\r\n                      </span>\r\n                    </Header>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n        </Grid>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ChangePosition;\r\n","import axios from \"axios\";\r\n\r\nconst uploadPic = async (media) => {\r\n  try {\r\n    const form = new FormData();\r\n    form.append(\"file\", media);\r\n    form.append(\"upload_preset\", \"Loado_Image\");\r\n    form.append(\"cloud_name\", \"biglol\");\r\n    const res = await axios.post(process.env.REACT_APP_CLOUDINARY_URL, form);\r\n    return res.data.url;\r\n  } catch (error) {\r\n    return;\r\n  }\r\n};\r\n\r\nexport default uploadPic;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\nimport Cropper from \"react-cropper\";\r\nimport uploadPic from \"../../components/util/uploadPicToCloudinary\";\r\nimport { updateProfilePic, waitForSomeTime } from \"./ViewDataUtil\";\r\nimport cookie from \"js-cookie\";\r\n\r\nfunction ProfileModal({ profileModal, setProfileModal, profilePic }) {\r\n  const [cropper, setCropper] = useState();\r\n  const [media, setMedia] = useState(null);\r\n  const [mediaPreview, setMediaPreview] = useState();\r\n  const [statusText, setStatusText] = useState(\r\n    \"이미지를 업로드하고 잘라보세요 (icon)\"\r\n  );\r\n  const inputRef = useRef();\r\n\r\n  const handleImageChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    if (name === \"media\") {\r\n      setMedia(files[0]);\r\n      setMediaPreview(URL.createObjectURL(files[0]));\r\n      // console.log(\"objectURL is \", URL.createObjectURL(files[0]));  https://kyounghwan01.github.io/blog/JS/JSbasic/Blob-url/#createobjecturl\r\n    }\r\n  };\r\n\r\n  const cropperStyle = {\r\n    height: \"400px\",\r\n    width: \"100%\",\r\n  };\r\n\r\n  const submitData = async () => {\r\n    let picUrl;\r\n    let uploadResult = false;\r\n\r\n    if (false) {\r\n      alert(\"ASDF\");\r\n      setMedia(cropper.getCroppedCanvas().toDataURL()); // passing actual crop image\r\n      //   setMediaPreview(cropper.getCroppedCanvas().toDataURL())\r\n      cropper.destroy(); // release the cropper from the memory\r\n    }\r\n\r\n    if (media !== null && cropper) {\r\n      setStatusText(\"이미지를 업로드 중입니다\");\r\n      picUrl = await uploadPic(cropper.getCroppedCanvas().toDataURL());\r\n      waitForSomeTime(500);\r\n      cropper.destroy();\r\n      if (!picUrl) {\r\n        setStatusText(\"이미지 업로드에 실패했습니다\");\r\n      }\r\n      uploadResult = await updateProfilePic(\r\n        picUrl,\r\n        cookie.get(\"loadoUserToken\")\r\n      );\r\n    }\r\n    if (!uploadResult) {\r\n      setStatusText(\"이미지 업로드에 실패했습니다\");\r\n      return;\r\n    }\r\n    setProfileModal(false);\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        closeOnDimmerClick={false}\r\n        size=\"large\"\r\n        // onClose={setProfileModal(false)}\r\n        open={profileModal}\r\n      >\r\n        <Modal.Header>\r\n          {statusText}{\" \"}\r\n          <Icon\r\n            name=\"image\"\r\n            style={{ color: \"red\", cursor: \"pointer\" }}\r\n            onClick={() => inputRef.current.click()}\r\n          />\r\n          <input\r\n            ref={inputRef}\r\n            onChange={handleImageChange}\r\n            name=\"media\"\r\n            style={{ display: \"none\" }}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n          />\r\n        </Modal.Header>\r\n        <Grid columns={2}>\r\n          <Grid.Column>\r\n            <Modal.Content image>\r\n              {mediaPreview ? (\r\n                <Cropper\r\n                  style={cropperStyle}\r\n                  cropBoxResizable\r\n                  zoomable\r\n                  highlight\r\n                  responsive\r\n                  guides\r\n                  dragMode=\"move\"\r\n                  initialAspectRatio={1}\r\n                  preview=\".img-preview\"\r\n                  src={mediaPreview}\r\n                  viewMode={1}\r\n                  minCropBoxHeight={10}\r\n                  minCropBoxWidth={10}\r\n                  background={false}\r\n                  autoCropArea={1}\r\n                  checkOrientation={false}\r\n                  onInitialized={(cropper) => setCropper(cropper)}\r\n                />\r\n              ) : (\r\n                <Image\r\n                  src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\r\n                  style={{ ...cropperStyle, cursor: \"pointer\" }}\r\n                  onClick={() => inputRef.current.click()}\r\n                />\r\n              )}\r\n              {/* cropper can only generate preview from a url string not from object, so we passed mediapreview not media state */}\r\n            </Modal.Content>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Modal.Content image>\r\n              <div style={{ margin: \"15px 0px\" }}>\r\n                <Header as=\"h3\">\r\n                  <Icon name=\"file image outline\" />\r\n                  <Header.Content content=\"최종 이미지\" />\r\n                </Header>\r\n              </div>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"300px\",\r\n                    display: \"inline-block\",\r\n                    padding: \"10px\",\r\n                    overflow: \"hidden\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  className=\"img-preview\"\r\n                ></div>\r\n              </div>\r\n            </Modal.Content>\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Modal.Actions>\r\n          <Button\r\n            title=\"Reset (R)\"\r\n            icon=\"redo\"\r\n            circular\r\n            onClick={() => cropper && cropper.reset()}\r\n          />\r\n          {/* \r\n          <Button\r\n            title=\"Move Canvas (M)\"\r\n            icon=\"move\"\r\n            circular\r\n            onClick={() => cropper && cropper.setDragMode(\"move\")}\r\n          /> */}\r\n\r\n          <Button\r\n            title=\"New Cropbox (C)\"\r\n            icon=\"crop\"\r\n            circular\r\n            onClick={() => cropper && cropper.setDragMode(\"crop\")}\r\n          />\r\n\r\n          <Button\r\n            negative\r\n            content=\"취소\"\r\n            icon=\"cancel\"\r\n            onClick={() => setProfileModal(false)}\r\n          />\r\n\r\n          <Button\r\n            content=\"프로필 업로드\"\r\n            icon=\"checkmark\"\r\n            positive\r\n            onClick={submitData}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Menu,\r\n  Header,\r\n  Icon,\r\n  Popup,\r\n  Button,\r\n  Divider,\r\n  Image,\r\n  Card,\r\n} from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { backendUrl, axiosConfig, axiosConfigAuth } from '../../components/util/ConstVar';\r\n\r\nimport HistoryModal from '../../components/updatehistory/HistoryModal';\r\nimport ChangePosition from '../../components/characterRelated/ChangePosition';\r\nimport ProfileModal from '../../components/util/ProfileModal';\r\n\r\nimport './NavHeader.css';\r\n\r\nfunction NavHeader() {\r\n  let userIdString = cookie.get('loadoUserCookie');\r\n  let userValue = userIdString && JSON.parse(userIdString);\r\n  const history = useHistory();\r\n\r\n  const [accountUser, setAccountUser] = useState(null);\r\n\r\n  const [showUpdateHistoryModal, setShowUpdateHistoryModal] = useState(false);\r\n  const [changeRowModal, setChangeRowModal] = useState(false);\r\n  const [profileModal, setProfileModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [noticeAlert, setNoticeAlert] = useState(false);\r\n\r\n  const logoutUser = (userId) => {\r\n    cookie.set('loginId', userId);\r\n    cookie.remove('loadoUserCookie');\r\n    cookie.remove('loadoUserToken');\r\n    cookie.remove('token');\r\n    history.push('/login');\r\n  };\r\n\r\n  const restValueBatch = async () => {\r\n    let searchString = `${backendUrl}/loado/api/homeworks/loadoupdatepersonal`;\r\n    axios\r\n      .post(searchString, {}, axiosConfig)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        alert('휴식게이지를 반영하지 못했습니다');\r\n      });\r\n  };\r\n\r\n  const openChangeRowModal = () => {\r\n    setOpen(false);\r\n    setChangeRowModal(true);\r\n  };\r\n\r\n  const openProfileModal = () => {\r\n    setOpen(false);\r\n    setProfileModal(true);\r\n  };\r\n\r\n  const changeNotificationToFalse = async () => {\r\n    await axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/changeNotification`,\r\n        {},\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) return;\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function checkNewlyUpdate() {\r\n      const axiosResult = await axios\r\n        .post(\r\n          `${backendUrl}/loado/api/users/checkNotification`,\r\n          {},\r\n          axiosConfigAuth(cookie.get('loadoUserToken'))\r\n        )\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            setNoticeAlert(response.data.user.newNotice);\r\n            setAccountUser(response.data.user);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setNoticeAlert(false);\r\n        });\r\n    }\r\n    checkNewlyUpdate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        style={{\r\n          background: '-webkit-linear-gradient(right, #da0050, #8e2b88)',\r\n          height: '6vh',\r\n          borderRadius: '0px',\r\n          marginBottom: '0px',\r\n        }}\r\n        borderless\r\n      >\r\n        <Menu.Item>\r\n          <Header\r\n            size='large'\r\n            id='navTitle'\r\n            onClick={() =>\r\n              window.open(\r\n                'https://github.com/biglol10/loado-react/blob/main/README.md'\r\n              )\r\n            }\r\n          >\r\n            <span style={{ fontStyle: 'italic' }}>\r\n              <Icon name='game' />\r\n              LoaDo\r\n            </span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            onClick={() => setShowUpdateHistoryModal(!showUpdateHistoryModal)}\r\n            className={noticeAlert ? 'newNoticeAlert headerItem' : 'headerItem'}\r\n          >\r\n            <Icon name='cube' />\r\n            작업 내역\r\n          </Header>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            className='headerItem'\r\n            onClick={() => restValueBatch()}\r\n          >\r\n            <Icon name='box' />\r\n            휴식게이지반영\r\n          </Header>\r\n        </Menu.Item>\r\n        {accountUser?.role === 'admin' && (\r\n          <Menu.Item>\r\n            <Header\r\n              size='small'\r\n              className='headerItem'\r\n              onClick={() => history.push('/dashboard')}\r\n            >\r\n              <Icon name='dashboard' />\r\n              대시보드\r\n            </Header>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        <Menu.Item className='personIconItem'>\r\n          <Popup\r\n            on='click'\r\n            position='top right'\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={\r\n              <Header size='small' className='personIcon'>\r\n                {accountUser?.profilePic ? (\r\n                  <div>\r\n                    <Image src={accountUser.profilePic} avatar />\r\n                    <span style={{ color: 'white' }}>{userValue.userName}</span>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <Icon name='user' />\r\n                    {userValue && userValue.userName}\r\n                  </>\r\n                )}\r\n              </Header>\r\n            }\r\n          >\r\n            <Card>\r\n              <Image\r\n                avatar\r\n                // style={{ height: '70px', width: '70px', objectFit: 'cover' }}\r\n                src={\r\n                  accountUser?.profilePic\r\n                    ? accountUser.profilePic\r\n                    : 'https://react.semantic-ui.com/images/wireframe/image.png'\r\n                }\r\n                style={{\r\n                  margin: '0 auto',\r\n                  height: '150px',\r\n                  width: '150px',\r\n                  borderRadius: '500rem !important',\r\n                }}\r\n                id='profilePicId'\r\n              />\r\n              <Card.Content>\r\n                <Card.Header>{userValue && userValue.userName}</Card.Header>\r\n                <Divider hidden />\r\n                <Card.Description>\r\n                  <p style={{ fontWeight: 'bold' }}>\r\n                    프로필 이미지를 바꾸시겠습니까?\r\n                  </p>\r\n                  <Button\r\n                    color='violet'\r\n                    content='프로필변경'\r\n                    onClick={openProfileModal}\r\n                  />\r\n                  <Divider />\r\n                  <p style={{ fontWeight: 'bold' }}>\r\n                    케릭터 순서를 바꾸시겠습니까?\r\n                  </p>\r\n                  <Button\r\n                    color='blue'\r\n                    content='순서변경'\r\n                    onClick={openChangeRowModal}\r\n                  />\r\n                  <Divider />\r\n                  <p style={{ fontWeight: 'bold' }}>로그아웃 하시겠습니까?</p>\r\n                  <Button\r\n                    color='red'\r\n                    content='로그아웃'\r\n                    onClick={() => logoutUser(userValue.userId)}\r\n                  />\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>\r\n          </Popup>\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {profileModal && (\r\n        <ProfileModal\r\n          profileModal={profileModal}\r\n          setProfileModal={setProfileModal}\r\n          profilePic={accountUser?.profilePic}\r\n        />\r\n      )}\r\n\r\n      {showUpdateHistoryModal && (\r\n        <HistoryModal\r\n          showUpdateHistoryModal={showUpdateHistoryModal}\r\n          setShowUpdateHistoryModal={setShowUpdateHistoryModal}\r\n          setNoticeAlert={setNoticeAlert}\r\n          changeNotificationToFalse={changeNotificationToFalse}\r\n        />\r\n      )}\r\n\r\n      {changeRowModal && (\r\n        <ChangePosition\r\n          changeRowModal={changeRowModal}\r\n          setChangeRowModal={setChangeRowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Menu,\r\n  Header,\r\n  Icon,\r\n  Popup,\r\n  Button,\r\n  Modal,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { backendUrl, axiosConfig, axiosConfigAuth } from '../../components/util/ConstVar';\r\n\r\nimport HistoryModal from '../../components/updatehistory/HistoryModal';\r\nimport ChangePosition from '../../components/characterRelated/ChangePosition';\r\n\r\nimport './NavHeaderMobile.css';\r\n\r\nfunction NavHeaderMobile() {\r\n  let userIdString = cookie.get('loadoUserCookie');\r\n  let userValue = userIdString && JSON.parse(userIdString);\r\n  const history = useHistory();\r\n\r\n  const [showUpdateHistoryModal, setShowUpdateHistoryModal] = useState(false);\r\n  const [changeRowModal, setChangeRowModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [noticeAlert, setNoticeAlert] = useState(false);\r\n\r\n  const [mobileSize, setMobileSize] = useState(false);\r\n\r\n  const logoutUser = (userId) => {\r\n    cookie.set('loginId', userId);\r\n    cookie.remove('loadoUserCookie');\r\n    cookie.remove('loadoUserToken');\r\n    cookie.remove('token');\r\n    history.push('/login');\r\n  };\r\n\r\n  const restValueBatch = async () => {\r\n    let searchString = `${backendUrl}/loado/api/homeworks/loadoupdatepersonal`;\r\n    axios\r\n      .post(searchString, {}, axiosConfig)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        alert('휴식게이지를 반영하지 못했습니다');\r\n      });\r\n  };\r\n\r\n  const openChangeRowModal = () => {\r\n    setOpen(false);\r\n    setChangeRowModal(true);\r\n  };\r\n\r\n  const changeNotificationToFalse = async () => {\r\n    await axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/changeNotification`,\r\n        {},\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) return;\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function checkNewlyUpdate() {\r\n      const axiosResult = await axios\r\n        .post(\r\n          `${backendUrl}/loado/api/users/checkNotification`,\r\n          {},\r\n          axiosConfigAuth(cookie.get('loadoUserToken'))\r\n        )\r\n        .then((response) => {\r\n          if (response.data.success) setNoticeAlert(response.data.newNotice);\r\n        })\r\n        .catch((err) => {\r\n          setNoticeAlert(false);\r\n        });\r\n    }\r\n    checkNewlyUpdate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        style={{\r\n          background: '-webkit-linear-gradient(right, #da0050, #8e2b88)',\r\n          height: '6vh',\r\n          borderRadius: '0px',\r\n          marginBottom: '0px',\r\n          width: '100%',\r\n        }}\r\n        borderless\r\n      >\r\n        <Menu.Item>\r\n          <Header\r\n            size='large'\r\n            id='navTitleMobile'\r\n            onClick={() =>\r\n              window.open(\r\n                'https://github.com/biglol10/loado-react/blob/main/README.md'\r\n              )\r\n            }\r\n          >\r\n            <span style={{ fontStyle: 'italic' }}>\r\n              <Icon name='game' />\r\n              LoaDo\r\n            </span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item style={{ marginLeft: 'auto' }}>\r\n          <Popup\r\n            on='click'\r\n            position='top right'\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={\r\n              <Header\r\n                size='small'\r\n                style={{\r\n                  color: 'white',\r\n                  padding: '0 50px',\r\n                  display: 'flex',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                <Icon name='user' />\r\n                {userValue && userValue.userName}\r\n              </Header>\r\n            }\r\n          >\r\n            <p>개인휴식게이지 반영</p>\r\n            <Button\r\n              color='teal'\r\n              content='휴게반영'\r\n              onClick={() => restValueBatch()}\r\n            />\r\n            <Divider />\r\n            <p>로그아웃 하시겠습니까?</p>\r\n            <Button\r\n              color='red'\r\n              content='로그아웃'\r\n              onClick={() => logoutUser(userValue.userId)}\r\n            />\r\n          </Popup>\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {showUpdateHistoryModal && (\r\n        <HistoryModal\r\n          showUpdateHistoryModal={showUpdateHistoryModal}\r\n          setShowUpdateHistoryModal={setShowUpdateHistoryModal}\r\n          setNoticeAlert={setNoticeAlert}\r\n          changeNotificationToFalse={changeNotificationToFalse}\r\n        />\r\n      )}\r\n\r\n      {changeRowModal && (\r\n        <ChangePosition\r\n          changeRowModal={changeRowModal}\r\n          setChangeRowModal={setChangeRowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeaderMobile;\r\n","import React, { useState, useEffect, useRef, innerRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  List,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport { characterCdn, characterKorean } from \"../../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { backendUrl } from \"../util/ConstVar\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport \"./AddCharacter.css\";\r\n\r\nfunction AddCharacter({\r\n  addCharacterModal,\r\n  closeAddCharacter,\r\n  userTodoData,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  limit,\r\n  activePage,\r\n}) {\r\n  const [selectCharacterModal, setSelectCharacterModal] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState(\"\");\r\n  const [characterName, setCharacterName] = useState(\"\");\r\n  const [chaosRestValue, setChaosRestValue] = useState(0);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(0);\r\n  const [eponaRestValue, setEponaRestValue] = useState(0);\r\n  const regex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]+$/;\r\n  const regexNumber = /^[0-9]+$/;\r\n\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n\r\n  const closeSelectCharacter = () => setSelectCharacterModal(false);\r\n\r\n  const modalShow = () => {\r\n    setSelectCharacterModal(true);\r\n  };\r\n\r\n  const classSelected = (event) => {\r\n    let selectedClass;\r\n    if (event.target.className.indexOf(\"image\") > 0) {\r\n      selectedClass = event.target.dataset.options;\r\n    } else {\r\n      selectedClass = event.target.className.split(\" \")[2];\r\n    }\r\n    setSelectedCharacter(selectedClass);\r\n    setSelectCharacterModal(false);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeAddCharacterModal = () => {\r\n    setSelectedCharacter(\"\");\r\n    setCharacterName(\"\");\r\n    setChaosRestValue(0);\r\n    setGuardianRestValue(0);\r\n    setEponaRestValue(0);\r\n    closeAddCharacter();\r\n  };\r\n\r\n  const changeInputCharName = (event, data) => {\r\n    const insertedValue = data.value;\r\n    if (insertedValue.length === 0) {\r\n      setCharacterName(\"\");\r\n      return;\r\n    }\r\n    if (!regex.test(insertedValue) || insertedValue.length > 12) return;\r\n    setCharacterName(insertedValue);\r\n  };\r\n\r\n  const changeRestValue = (event, data) => {\r\n    event.preventDefault();\r\n    if (!regexNumber.test(event.target.value)) return;\r\n    if (event.target.id === \"chaosChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = chaosRestValue + (changedValue - chaosRestValue) * 10;\r\n      if (valueOutput < 0) setChaosRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValue(valueOutput);\r\n      else setChaosRestValue(100);\r\n    }\r\n    if (event.target.id === \"guardianChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput =\r\n        guardianRestValue + (changedValue - guardianRestValue) * 10;\r\n      if (valueOutput < 0) setGuardianRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValue(valueOutput);\r\n      else setGuardianRestValue(100);\r\n    }\r\n    if (event.target.id === \"eponaChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = eponaRestValue + (changedValue - eponaRestValue) * 10;\r\n      if (valueOutput < 0) setEponaRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValue(valueOutput);\r\n      else setEponaRestValue(100);\r\n    }\r\n  };\r\n\r\n  const confirmAddCharacter = () => {\r\n    const createdData = {\r\n      // _id: \"5d725a037b292f5f8ceff795\",\r\n      // user: \"5d7a514b5d2c12c7449be042\",\r\n      character: selectedCharacter,\r\n      characterName: characterName,\r\n      date: Date.now(),\r\n      // idx: 2,\r\n      chaosRestValue,\r\n      guardianRestValue,\r\n      eponaRestValue,\r\n      chaosDone: 0,\r\n      guardianDone: 0,\r\n      eponaDone: 0,\r\n      guardianWeeklyDone: 0,\r\n      abyssDungeon2: false,\r\n      // abyssDungeonWeekly: true,\r\n      // rehearsalAndDejavu: [\"kukuseitn\", \"abrel\"],\r\n      argos: false,\r\n      baltan: false,\r\n      biakiss: false,\r\n      kukuseitn: false,\r\n      abrel: false,\r\n      attributeChanged: false,\r\n      weeklyAttributeChanged: false,\r\n      createdAt: Date.now(),\r\n    };\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/homeworks`,\r\n        createdData,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        // setUserTodoData([...userTodoData, response.data.data]);\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          userTodoData.length % limit === 0\r\n        ) {\r\n          activePage = Math.floor(response.data.totalLength / limit) + 1;\r\n          viewPage(activePage);\r\n        } else {\r\n          viewPage(activePage);\r\n        }\r\n        closeAddCharacterModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.error, {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        closeAddCharacterModal();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const classElements = document.getElementsByClassName(\r\n      \"characterClassContent\"\r\n    );\r\n    let eventAdd;\r\n    for (let index = 0; index < classElements.length; index++) {\r\n      eventAdd = classElements[index].addEventListener(\"click\", (event) => {\r\n        classSelected(event);\r\n      });\r\n    }\r\n    return () => {\r\n      for (let index = 0; index < classElements.length; index++) {\r\n        classElements[index].removeEventListener(\"click\", eventAdd);\r\n      }\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById(\"characterNameInputId\");\r\n    const enterEvent = element.addEventListener(\"keypress\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        if (buttonRef.current) buttonRef.current.click();\r\n      }\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"keypress\", enterEvent);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={addCharacterModal}\r\n        onClose={closeAddCharacterModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: \"dimgray\" }}>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            {!selectedCharacter ? (\r\n              <>\r\n                <span className=\"itemHeaderAttribute1\">클래스:</span>\r\n                <Icon\r\n                  name=\"add square\"\r\n                  size=\"large\"\r\n                  color=\"white\"\r\n                  onClick={modalShow}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"itemHeaderAttribute2\">클래스:</span>\r\n                <span onClick={() => setSelectCharacterModal(true)}>\r\n                  <Image\r\n                    src={characterCdn[selectedCharacter]}\r\n                    size=\"mini\"\r\n                    avatar\r\n                  />\r\n                  {characterKorean[selectedCharacter]}\r\n                </span>\r\n              </>\r\n            )}\r\n          </Header>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            <span style={{ marginRight: \"40px\" }}>케릭명:</span>\r\n            <Input\r\n              transparent\r\n              placeholder=\"케릭터명\"\r\n              style={{ color: \"white\" }}\r\n              className=\"charNameInput\"\r\n              value={characterName}\r\n              ref={inputRef}\r\n              id=\"characterNameInputId\"\r\n              onChange={(event, data) => changeInputCharName(event, data)}\r\n            />\r\n          </Header>\r\n          <Header className=\"itemHeaderRest\" as=\"h4\">\r\n            <List divided selection>\r\n              <List.Item>\r\n                <Label horizontal>카오스던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={chaosRestValue}\r\n                  id=\"chaosChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>가디언토벌</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={guardianRestValue}\r\n                  id=\"guardianChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>에포나</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={eponaRestValue}\r\n                  id=\"eponaChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n            </List>\r\n          </Header>\r\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <Button\r\n              circular\r\n              color=\"google plus\"\r\n              icon=\"cancel\"\r\n              onClick={closeAddCharacterModal}\r\n            />\r\n            <Button\r\n              circular\r\n              color=\"twitter\"\r\n              icon=\"check\"\r\n              onClick={confirmAddCharacter}\r\n            />\r\n            <button\r\n              ref={buttonRef}\r\n              onClick={confirmAddCharacter}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <Modal\r\n        open={selectCharacterModal}\r\n        onClose={closeSelectCharacter}\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n        className=\"classSelectModal\"\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            backgroundColor: \"#384862\",\r\n            color: \"white\",\r\n            borderBottom: \"1px solid white\",\r\n          }}\r\n        >\r\n          클래스\r\n        </Modal.Header>\r\n        <Modal.Content style={{ backgroundColor: \"#384862\", color: \"white\" }}>\r\n          <Grid columns={6}>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  전사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column\r\n                className=\"characterClassContent berserker\"\r\n                name=\"berserker\"\r\n              >\r\n                <Image\r\n                  src={characterCdn.berserker}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"berserker\"\r\n                />\r\n                버서커\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent warlord\">\r\n                <Image\r\n                  src={characterCdn.warlord}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"warlord\"\r\n                />\r\n                워로드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent destroyer\">\r\n                <Image\r\n                  src={characterCdn.destroyer}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"destroyer\"\r\n                />\r\n                디스트로이어\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent holyknight\">\r\n                <Image\r\n                  src={characterCdn.holyknight}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"holyknight\"\r\n                />\r\n                홀리나이트\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  무도가\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent battlemaster\">\r\n                <Image\r\n                  src={characterCdn.battlemaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"battlemaster\"\r\n                />\r\n                배틀마스터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent infighter\">\r\n                <Image\r\n                  src={characterCdn.infighter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"infighter\"\r\n                />\r\n                인파이터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent soulmaster\">\r\n                <Image\r\n                  src={characterCdn.soulmaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"soulmaster\"\r\n                />\r\n                기공사\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent lancemaster\">\r\n                <Image\r\n                  src={characterCdn.lancemaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"lancemaster\"\r\n                />\r\n                창술사\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent striker\">\r\n                <Image\r\n                  src={characterCdn.striker}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"striker\"\r\n                />\r\n                스트라이커\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  헌터\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent devilhunter\">\r\n                <Image\r\n                  src={characterCdn.devilhunter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"devilhunter\"\r\n                />\r\n                데빌헌터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent blaster\">\r\n                <Image\r\n                  src={characterCdn.blaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"blaster\"\r\n                />\r\n                블래스터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent hawkeye\">\r\n                <Image\r\n                  src={characterCdn.hawkeye}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"hawkeye\"\r\n                />\r\n                호크아이\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent scouter\">\r\n                <Image\r\n                  src={characterCdn.scouter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"scouter\"\r\n                />\r\n                스카우터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent gunslinger\">\r\n                <Image\r\n                  src={characterCdn.gunslinger}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"gunslinger\"\r\n                />\r\n                건슬링어\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  마법사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent summoner\">\r\n                <Image\r\n                  src={characterCdn.summoner}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"summoner\"\r\n                />\r\n                서머너\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent arcana\">\r\n                <Image\r\n                  src={characterCdn.arcana}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"arcana\"\r\n                />\r\n                아르카나\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent bard\">\r\n                <Image\r\n                  src={characterCdn.bard}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"bard\"\r\n                />\r\n                바드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent sorceress\">\r\n                <Image\r\n                  src={characterCdn.sorceress}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"sorceress\"\r\n                />\r\n                소서리스\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  암살자\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent blade\">\r\n                <Image\r\n                  src={characterCdn.blade}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"blade\"\r\n                />\r\n                블레이드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent demonic\">\r\n                <Image\r\n                  src={characterCdn.demonic}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"demonic\"\r\n                />\r\n                데모닉\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent reaper\">\r\n                <Image\r\n                  src={characterCdn.reaper}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"reaper\"\r\n                />\r\n                리퍼\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Modal, Image, Button } from \"semantic-ui-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { characterCdn } from \"../../../_data/characterDefinition\";\r\n\r\nfunction RestValue({ item, userTodoData, setUserTodoData }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(item._id);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowModal(true);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  // if you use setShowModal directly in Modal onClose, react will throw error\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [chaosRestValue, setChaosRestValue] = useState(item.chaosRestValue);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValue, setEponaRestValue] = useState(item.eponaRestValue);\r\n\r\n  const [chaosRestValueChange, setChaosRestValueChange] = useState(\r\n    item.chaosRestValue\r\n  );\r\n  const [guardianRestValueChange, setGuardianRestValueChange] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValueChange, setEponaRestValueChange] = useState(\r\n    item.eponaRestValue\r\n  );\r\n\r\n  const valueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"chaosChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        chaosRestValueChange + (changedValue - chaosRestValueChange) * 10;\r\n      if (valueOutput < 0) setChaosRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValueChange(valueOutput);\r\n      else setChaosRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"guardianChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        guardianRestValueChange + (changedValue - guardianRestValueChange) * 10;\r\n      if (valueOutput < 0) setGuardianRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValueChange(valueOutput);\r\n      else setGuardianRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"eponaChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        eponaRestValueChange + (changedValue - eponaRestValueChange) * 10;\r\n      if (valueOutput < 0) setEponaRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValueChange(valueOutput);\r\n      else setEponaRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const confirmValue = () => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === item._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"chaosRestValue\"] = chaosRestValueChange;\r\n    newArr[indexValue][\"guardianRestValue\"] = guardianRestValueChange;\r\n    newArr[indexValue][\"eponaRestValue\"] = eponaRestValueChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column id={item._id}>\r\n        카던: {item.chaosRestValue}\r\n        <br />\r\n        가디언: {item.guardianRestValue}\r\n        <br />\r\n        에포나: {item.eponaRestValue}\r\n      </Grid.Column>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Header>\r\n          <Image src={characterCdn[item.character]} size=\"mini\" avatar />\r\n          {item.characterName}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextField\r\n            id=\"chaosChange\"\r\n            type=\"number\"\r\n            label=\"카오스던전\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={chaosRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"guardianChange\"\r\n            type=\"number\"\r\n            label=\"가디언토벌\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={guardianRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"eponaChange\"\r\n            type=\"number\"\r\n            label=\"에포나\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={eponaRestValueChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={closeModal}>\r\n            취소\r\n          </Button>\r\n          <Button positive onClick={confirmValue}>\r\n            확인\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestValue;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Image, Icon, Popup } from \"semantic-ui-react\";\r\nimport { characterCdn } from \"../../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport \"./CharacterAvatar.css\";\r\nimport { backendUrl } from \"../util/ConstVar\";\r\n\r\nfunction CharacterAvatar({\r\n  itemId,\r\n  character,\r\n  characterName,\r\n  attributeChanged,\r\n  weeklyAttributeChanged,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  alarmCharacter,\r\n  limit,\r\n  dontChange,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  deviceType,\r\n  activePage,\r\n}) {\r\n  const [deleteIcon, showDeleteIcon] = useState(false);\r\n\r\n  const [showDontChange, setShowDontChange] = useState(false);\r\n\r\n  const [dontChangeState, setDontChangeState] = useState(dontChange);\r\n\r\n  const [alarmState, setAlarmState] = useState(\"\");\r\n\r\n  const deleteCharacter = (id) => {\r\n    // const indexValue = userTodoData.findIndex((anItem) => {\r\n    //   return anItem._id === id;\r\n    // });\r\n    // let newArr = [...userTodoData];\r\n    // newArr.splice(indexValue, 1);\r\n    // setUserTodoData(newArr);\r\n    // showDeleteIcon(false);\r\n\r\n    axios\r\n      .delete(\r\n        `${backendUrl}/loado/api/homeworks/${itemId}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          response.data.totalLength % limit === 0\r\n        ) {\r\n          if (activePage <= response.data.totalLength / limit) {\r\n            viewPage(activePage);\r\n          } else if (activePage > response.data.totalLength / limit) {\r\n            activePage = response.data.totalLength / limit;\r\n            viewPage(activePage);\r\n          }\r\n        } else {\r\n          viewPage(activePage);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  const dontChangeCharacter = (id) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].dontChange = !dontChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setDontChangeState(!dontChangeState);\r\n    setUserTodoData(newArr);\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  // 원래 1회 실행으로 useEffect에 []를 넣었지만 이걸 넣으니 되돌아가기가 안됨... 그래서 [] 빼보니 됨\r\n  useEffect(() => {\r\n    let element = document.getElementById(`${itemId}_${characterName}`);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowDontChange(!showDontChange);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column>\r\n        <Image\r\n          src={characterCdn[character]}\r\n          size=\"mini\"\r\n          avatar\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n        />\r\n        {deviceType === \"mobile\" && <br />}\r\n        <span\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n          className={alarmCharacter ? \"alarmLight\" : \"\"}\r\n          id={`${itemId}_${characterName}`}\r\n          data-options={itemId}\r\n        >\r\n          {characterName}\r\n        </span>\r\n        {(attributeChanged || weeklyAttributeChanged) && (\r\n          <Icon\r\n            name=\"edit\"\r\n            size=\"small\"\r\n            style={{ color: \"springgreen\", marginLeft: \"3px\" }}\r\n          />\r\n        )}\r\n        {deleteIcon && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name=\"trash\"\r\n                color=\"red\"\r\n                style={{ cursor: \"pointer\", marginLeft: \"1px\" }}\r\n                onClick={() => deleteCharacter(itemId)}\r\n              />\r\n            }\r\n            content={`'${characterName}'에 대한 정보를 삭제하시겠습니까?`}\r\n          />\r\n        )}\r\n        {showDontChange && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name={dontChangeState ? \"bell\" : \"bell slash\"}\r\n                color=\"yellow\"\r\n                style={{ cursor: \"pointer\", marginLeft: \"1px\" }}\r\n                onClick={() => dontChangeCharacter(itemId)}\r\n              />\r\n            }\r\n            content={\r\n              dontChangeState\r\n                ? `'${characterName}' 휴식게이지 고정취소`\r\n                : `'${characterName}' 휴식게이지 고정`\r\n            }\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterAvatar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextArea, Icon } from \"semantic-ui-react\";\r\n\r\nfunction PerIdNote({ item, userTodoData, setUserTodoData, deviceType }) {\r\n  const [showTextArea, setShowTextArea] = useState(false);\r\n  const [textValue, setTextValue] = useState(item.note);\r\n\r\n  const dontChangeCharacter = (id, theText) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"note\"] = theText;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  const changeText = (event) => {\r\n    if (event.target.value.length > 20) return;\r\n    setTextValue(event.target.value);\r\n    dontChangeCharacter(item._id, event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!showTextArea ? (\r\n        <>\r\n          {item.note}{\" \"}\r\n          <Icon\r\n            inverted\r\n            name=\"pencil square\"\r\n            color=\"pink\"\r\n            onClick={() => setShowTextArea(!showTextArea)}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </>\r\n      ) : deviceType === \"mobile\" ? (\r\n        <TextArea\r\n          style={{ width: \"100%\" }}\r\n          value={textValue}\r\n          onChange={(event) => changeText(event)}\r\n        />\r\n      ) : (\r\n        <TextArea value={textValue} onChange={(event) => changeText(event)} />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport default PerIdNote;\r\n","import React, { useState } from 'react';\r\nimport { Grid, Dropdown, Checkbox } from 'semantic-ui-react';\r\n\r\nfunction changeArr(arr, match, dataValue, type) {\r\n  const indexValue = arr.findIndex((anItem) => {\r\n    return anItem._id === match;\r\n  });\r\n  let newArr = [...arr];\r\n  newArr[indexValue][type] = dataValue;\r\n  newArr[indexValue]['attributeChanged'] = true;\r\n  return newArr;\r\n}\r\n\r\nfunction ChaosDunValue({\r\n  chaosItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${chaosItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${chaosItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${chaosItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [chaosData, setChaosData] = useState(chaosItem.chaosDone);\r\n\r\n  // 체크박스로 숙제를 체크하고 싶다는 피드백에 따라 작성\r\n  const [chaosDataChecked, setChaosDataChecked] = useState(\r\n    chaosItem.chaosDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setChaosData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      chaosItem._id,\r\n      data.value,\r\n      'chaosDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setChaosDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={chaosData}\r\n        />\r\n      ) : (\r\n        // 체크박스용\r\n        <Checkbox\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={chaosDataChecked}\r\n          value={chaosDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction GuardianDunValue({\r\n  guardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${guardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${guardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${guardianItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [guardianData, setGuardianData] = useState(guardianItem.guardianDone);\r\n\r\n  const [guardianDataChecked, setGuardianDataChecked] = useState(\r\n    guardianItem.guardianDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setGuardianData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      guardianItem._id,\r\n      data.value,\r\n      'guardianDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={guardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={guardianDataChecked}\r\n          value={guardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction EponaValue({\r\n  eponaItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${eponaItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${eponaItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${eponaItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${eponaItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [eponaData, setEponaData] = useState(eponaItem.eponaDone);\r\n\r\n  const [eponaDataChecked, setEponaDataChecked] = useState(\r\n    eponaItem.eponaDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setEponaData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      eponaItem._id,\r\n      data.value,\r\n      'eponaDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setEponaDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='epona'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={eponaData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='epona'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={eponaDataChecked}\r\n          value={eponaDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\n// Currently not used for nicer view\r\nfunction WeeklyGuardian({\r\n  weeklyGuardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${weeklyGuardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${weeklyGuardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${weeklyGuardianItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${weeklyGuardianItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [weeklyGuardianData, setWeeklyGuardianData] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone\r\n  );\r\n\r\n  const [weeklyGuardianDataChecked, setWeeklyGuardianDataChecked] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setWeeklyGuardianData(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === weeklyGuardianItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].guardianWeeklyDone = data.value;\r\n    newArr[indexValue]['attributeChanged'] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setWeeklyGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={weeklyGuardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={weeklyGuardianDataChecked}\r\n          value={weeklyGuardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport { ChaosDunValue, GuardianDunValue, EponaValue, WeeklyGuardian };\r\n","const contentKeyKorToEng = {\r\n    휴식게이지: 'calendar',\r\n    카오스던전: 'chaosDun',\r\n    가디언토벌: 'guardianDun',\r\n    에포나: 'epona',\r\n    주간가디언: 'guardianDun',\r\n    어비스던전: 'abyss2types',\r\n    아르고스: 'argos',\r\n    발탄: 'baltan',\r\n    비아키스: 'biakiss',\r\n    쿠크세이튼: 'kukuseitn',\r\n    아브렐슈드: 'abrel',\r\n    오레하2종: 'abyss2types'\r\n};\r\n\r\nexport default contentKeyKorToEng;","import React from \"react\";\r\nimport { Grid, Image } from \"semantic-ui-react\";\r\n\r\nimport {\r\n  ChaosDunValue,\r\n  GuardianDunValue,\r\n  EponaValue,\r\n  WeeklyGuardian,\r\n} from \"./DungeonAndEponaUtil\";\r\n\r\nimport contentKeyKorToEng from \"../../../_data/contentDefinition\";\r\n\r\nfunction DungeonAndEpona({\r\n  content,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  return (\r\n    <Grid.Row className=\"eachRow\">\r\n      <Grid.Column className=\"contentColumn\">\r\n        <div>\r\n          <Image\r\n            src={`./images/loa_icons/${contentKeyKorToEng[content]}.png`}\r\n            avatar\r\n            className=\"contentImage\"\r\n          />\r\n          <span>{content}</span>\r\n        </div>\r\n      </Grid.Column>\r\n      {content === \"카오스던전\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <ChaosDunValue\r\n            chaosItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n            viewByCheckBox={viewByCheckBox}\r\n          />\r\n        ))}\r\n      {content === \"가디언토벌\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <GuardianDunValue\r\n            guardianItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n            viewByCheckBox={viewByCheckBox}\r\n          />\r\n        ))}\r\n      {content === \"에포나\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <EponaValue\r\n            eponaItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n            viewByCheckBox={viewByCheckBox}\r\n          />\r\n        ))}\r\n      {content === \"주간가디언\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <WeeklyGuardian\r\n            weeklyGuardianItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n            viewByCheckBox={viewByCheckBox}\r\n          />\r\n        ))}\r\n    </Grid.Row>\r\n  );\r\n}\r\n\r\nexport default DungeonAndEpona;\r\n","import React, { useState } from 'react';\r\nimport { Grid, Checkbox, Dropdown, Label } from 'semantic-ui-react';\r\n\r\nconst changeDatafunction = (\r\n  event,\r\n  data,\r\n  setItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  findIndexItem,\r\n  changeItem\r\n) => {\r\n  setItem(data.checked);\r\n  const indexValue = userTodoData.findIndex((anItem) => {\r\n    return anItem._id === findIndexItem._id;\r\n  });\r\n  let newArr = [...userTodoData];\r\n  newArr[indexValue][changeItem] = data.checked;\r\n  let attrChanged =\r\n    changeItem === 'abyssDungeonWeekly'\r\n      ? 'weeklyAttributeChanged'\r\n      : 'attributeChanged';\r\n  newArr[indexValue][attrChanged] = true;\r\n  setUserTodoData(newArr);\r\n};\r\n\r\nfunction AbyssDun2({ abyssDun2Item, userTodoData, setUserTodoData }) {\r\n  const [abyssDun2, setAbyssDun2] = useState(abyssDun2Item.abyssDungeon2);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='AbyssDun2'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbyssDun2,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abyssDun2Item,\r\n            'abyssDungeon2'\r\n          )\r\n        }\r\n        checked={abyssDun2}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbyssRaid({ idx, abyssRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abyssRaid, setAbyssRaid] = useState(abyssRaidItem.abyssDungeonWeekly);\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <Grid.Column style={{ display: 'flex' }}>\r\n        <Checkbox\r\n          name='AbyssRaid'\r\n          onChange={(event, data) =>\r\n            changeDatafunction(\r\n              event,\r\n              data,\r\n              setAbyssRaid,\r\n              userTodoData,\r\n              setUserTodoData,\r\n              abyssRaidItem,\r\n              'abyssDungeonWeekly'\r\n            )\r\n          }\r\n          checked={abyssRaid}\r\n        />\r\n      </Grid.Column>\r\n    )\r\n  );\r\n}\r\n\r\nfunction RehearsalAndDejavu({\r\n  rehearsalAndDejavuItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  idx,\r\n}) {\r\n  const options_combo1 = [\r\n    { key: 'kukuseitn', text: '쿠크리허설', value: 'kukuseitn' },\r\n    { key: 'abrel', text: '아브렐데쟈뷰', value: 'abrel' },\r\n  ];\r\n  const [rehearsalAndDejavu, setRehearsalAndDejavu] = useState(\r\n    rehearsalAndDejavuItem.rehearsalAndDejavu\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setRehearsalAndDejavu(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === rehearsalAndDejavuItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].rehearsalAndDejavu = data.value;\r\n    newArr[indexValue].weeklyAttributeChanged = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder='쿠크/아브렐'\r\n            fluid\r\n            multiple\r\n            selection\r\n            options={options_combo1}\r\n            value={rehearsalAndDejavu}\r\n            onChange={(event, data) => changeData(event, data)}\r\n          />\r\n        </Grid.Column>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nfunction ArgosRaid({ argosRaidItem, userTodoData, setUserTodoData }) {\r\n  const [argosRaid, setArgosRaid] = useState(argosRaidItem.argos);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='ArgosRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setArgosRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            argosRaidItem,\r\n            'argos'\r\n          )\r\n        }\r\n        checked={argosRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BaltanRaid({ baltanRaidItem, userTodoData, setUserTodoData }) {\r\n  const [baltanRaid, setBaltanRaid] = useState(baltanRaidItem.baltan);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='BaltanRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBaltanRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            baltanRaidItem,\r\n            'baltan'\r\n          )\r\n        }\r\n        checked={baltanRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BiakissRaid({ biakissRaidItem, userTodoData, setUserTodoData }) {\r\n  const [biakissRaid, setBiakissRaid] = useState(biakissRaidItem.biakiss);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='BiakissRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBiakissRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            biakissRaidItem,\r\n            'biakiss'\r\n          )\r\n        }\r\n        checked={biakissRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction KukseitnRaid({ kukseitnRaidItem, userTodoData, setUserTodoData }) {\r\n  const [kukseitnRaid, setKukseitnRaid] = useState(kukseitnRaidItem.kukuseitn);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='KukseitnRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setKukseitnRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            kukseitnRaidItem,\r\n            'kukuseitn'\r\n          )\r\n        }\r\n        checked={kukseitnRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbrelRaid({ abrelRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abrelRaid, setAbrelRaid] = useState(abrelRaidItem.abrel);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='AbrelRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbrelRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abrelRaidItem,\r\n            'abrel'\r\n          )\r\n        }\r\n        checked={abrelRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport {\r\n  AbyssDun2,\r\n  AbyssRaid,\r\n  RehearsalAndDejavu,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n};\r\n","import React from \"react\";\r\nimport { Grid, Image } from \"semantic-ui-react\";\r\n\r\nimport {\r\n  AbyssDun2,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n} from \"./AbyssAndRaid\";\r\n\r\nimport contentKeyKorToEng from \"../../../_data/contentDefinition\";\r\n\r\nfunction WeeklyRaidContents({ content, userTodoData, setUserTodoData }) {\r\n  return (\r\n    <Grid.Row className=\"eachRow\">\r\n      <Grid.Column className=\"contentColumn\">\r\n        <div>\r\n          <Image\r\n            src={`./images/loa_icons/${contentKeyKorToEng[content]}.png`}\r\n            avatar\r\n            className=\"contentImage\"\r\n          />\r\n          <span>{content}</span>\r\n        </div>\r\n      </Grid.Column>\r\n      {content === \"오레하2종\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <AbyssDun2\r\n            abyssDun2Item={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"아르고스\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <ArgosRaid\r\n            argosRaidItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"발탄\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <BaltanRaid\r\n            baltanRaidItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"비아키스\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <BiakissRaid\r\n            biakissRaidItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"쿠크세이튼\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <KukseitnRaid\r\n            kukseitnRaidItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"아브렐슈드\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <AbrelRaid\r\n            abrelRaidItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n    </Grid.Row>\r\n  );\r\n}\r\n\r\nexport default WeeklyRaidContents;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nfunction AddAndChange({ addCharacter, applyChanges }) {\r\n  return (\r\n    <div className=\"headerValueEnd\">\r\n      <Button inverted color=\"olive\" onClick={addCharacter}>\r\n        케릭터 추가\r\n      </Button>\r\n      <Button inverted color=\"red\" onClick={applyChanges}>\r\n        변경사항 저장\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAndChange;\r\n","import React from 'react';\r\nimport { Pagination } from 'semantic-ui-react';\r\n\r\nfunction PaginationComp({ pagination, activePage, pageChange, deviceType }) {\r\n  return (\r\n    <div className='headerValueCenter'>\r\n      <Pagination\r\n        // defaultActivePage={1}\r\n        firstItem={null}\r\n        lastItem={null}\r\n        pointing\r\n        secondary\r\n        totalPages={pagination}\r\n        activePage={activePage}\r\n        onPageChange={(event, data) => pageChange(event, data)}\r\n        size={deviceType === 'mobile' && 'mini'}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginationComp;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction SettingChange({\r\n  viewByCheckBox,\r\n  deviceType,\r\n  changeUserCheckBoxConfigurationFunction,\r\n}) {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  return (\r\n    <div className=\"headerValueStart\">\r\n      <Header size=\"medium\" style={{ color: \"white\", paddingTop: \"5px\" }}>\r\n        {deviceType !== \"mobile\" && today}{\" \"}\r\n        <Label\r\n          as=\"a\"\r\n          basic\r\n          image\r\n          style={{ marginLeft: \"30px\" }}\r\n          onClick={() =>\r\n            changeUserCheckBoxConfigurationFunction(!viewByCheckBox)\r\n          }\r\n        >\r\n          {!viewByCheckBox ? (\r\n            <>\r\n              <Icon name=\"checkmark box\" />\r\n              {deviceType !== \"mobile\" && \"로 보기\"}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Icon name=\"angle double down\" />\r\n              {deviceType !== \"mobile\" && \"로 보기\"}\r\n            </>\r\n          )}\r\n        </Label>\r\n      </Header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingChange;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction AlarmAndNote({\r\n  alarmTrue,\r\n  alarmRestValue,\r\n  userTodoData,\r\n  showNote,\r\n  setShowNote,\r\n}) {\r\n  return (\r\n    <Header\r\n      as=\"h4\"\r\n      style={{\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        padding: \".78571429em 1.5em .78571429em\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={alarmTrue ? \"alarm\" : \"alarm mute\"}\r\n          onClick={() => alarmRestValue(userTodoData)}\r\n        />\r\n        {\"  //  \"}\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={!showNote ? \"sticky note outline\" : \"angle double up\"}\r\n          onClick={() => setShowNote(!showNote)}\r\n        />\r\n      </div>\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default AlarmAndNote;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./userHomework.css\";\r\nimport AddCharacter from \"../components/characterRelated/AddCharacter\";\r\n\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Container,\r\n  Icon,\r\n  Dimmer,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\nimport RestValue from \"../components/userHomework/RestValue\";\r\nimport CharacterAvatar from \"../components/characterRelated/CharacterAvatar\";\r\nimport PerIdNote from \"../components/userHomework/PerIdNote\";\r\nimport DungeonAndEpona from \"../components/userHomework/DungeonAndEpona\";\r\nimport WeeklyRaidContents from \"../components/userHomework/WeeklyRaidContents\";\r\n\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { backendUrl, axiosConfigAuth } from \"../components/util/ConstVar\";\r\nimport {\r\n  viewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n} from \"../components/util/ViewDataUtil\";\r\nimport AddAndChange from \"../components/userHomework/AddAndChange\";\r\nimport PaginationComp from \"../components/userHomework/PaginationComp\";\r\nimport SettingChange from \"../components/userHomework/SettingChange\";\r\nimport AlarmAndNote from \"../components/userHomework/AlarmAndNote\";\r\n\r\nfunction CharacterToDoRow({ limit, type }) {\r\n  const todayDate = new Date(Date.now());\r\n\r\n  const [userTodoData, setUserTodoData] = useState([]);\r\n\r\n  const [addCharacterModal, setAddCharacterModal] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const [pagination, setPagination] = useState(0);\r\n\r\n  const [viewByCheckBox, setViewByCheckBox] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const addCharacter = () => {\r\n    setAddCharacterModal(true);\r\n  };\r\n\r\n  const closeAddCharacter = () => {\r\n    setAddCharacterModal(false);\r\n  };\r\n\r\n  const viewPage = async (theActivePage, plusPage = 0) => {\r\n    setLoading(true);\r\n    setUserTodoData([]);\r\n\r\n    const resultData = await viewDataMain(\r\n      limit,\r\n      theActivePage,\r\n      setActivePage,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    if (resultData.success) {\r\n      setUserTodoData(resultData.viewData.data);\r\n      setPagination(resultData.setPage);\r\n    } else {\r\n      toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const applyChanges = async () => {\r\n    setLoading(true);\r\n\r\n    let submitData = userTodoData.filter(\r\n      (item) => item.attributeChanged === true\r\n    );\r\n\r\n    const applyResult = await applyChangesUtil(\r\n      submitData,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    setLoading(false);\r\n    if (applyResult) {\r\n      toastMessage(\"일부 변경사항이 제대로 반영되지 않았습니다\", \"error\");\r\n    }\r\n    viewPage();\r\n  };\r\n\r\n  const pageChange = async (event, data) => {\r\n    setLoading(true);\r\n    setActivePage(data.activePage);\r\n\r\n    // 샙트님 이거 2페이지에 있는 캐릭터 바꾸면 1페이지 같은 자리 있는것두 바뀌는거 같아여\r\n    // 이거 안 해주면 현재 페이지에서 바꾼 ID위치의 정보가 그대로 남아서 사용자에게 모든 페이지의 변경사항이 반영되는 것처럼 보임\r\n    setUserTodoData([]);\r\n\r\n    await axios\r\n      .get(\r\n        `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${data.activePage}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const changeUserCheckBoxConfigurationFunction = async (viewByCheckBox) => {\r\n    const result = await changeUserCheckBoxConfiguration(\r\n      viewByCheckBox,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n    if (result) {\r\n      setViewByCheckBox(viewByCheckBox);\r\n    }\r\n  };\r\n\r\n  // for alarm animation\r\n  const [alarmTrue, setAlarmTrue] = useState(true);\r\n\r\n  // for note per list\r\n  const [showNote, setShowNote] = useState(false);\r\n\r\n  const alarmRestValue = (todoList) => {\r\n    const alarmDataResult = alarmRestValueUtil(todoList, alarmTrue);\r\n    setUserTodoData(alarmDataResult.alarmList);\r\n    setAlarmTrue(alarmDataResult.alarm);\r\n  };\r\n\r\n  // if no user cookie then redirect to login page\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    !loginCookie && history.push(\"/login\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    viewPage();\r\n\r\n    async function callUsersCheckBoxValue() {\r\n      const resultData = await getUserCheckBoxConfiguration(\r\n        cookie.get(\"loadoUserToken\")\r\n      );\r\n      setViewByCheckBox(resultData);\r\n    }\r\n    callUsersCheckBoxValue();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Segment\r\n          className=\"fullPage\"\r\n          style={{ height: \"94vh\", border: \"none\" }}\r\n        >\r\n          <Dimmer active>\r\n            <Loader size=\"big\">로딩중</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      ) : (\r\n        <Segment id=\"gridSegment\">\r\n          <Grid className=\"fullPage\">\r\n            <Container id=\"gridContainer\">\r\n              <Grid.Column width={16}>\r\n                <Segment\r\n                  basic\r\n                  className=\"contentHeader\"\r\n                  style={{ marginBottom: \"0px\" }}\r\n                >\r\n                  <SettingChange\r\n                    viewByCheckBox={viewByCheckBox}\r\n                    setViewByCheckBox={setViewByCheckBox}\r\n                    changeUserCheckBoxConfigurationFunction={\r\n                      changeUserCheckBoxConfigurationFunction\r\n                    }\r\n                  />\r\n                  <PaginationComp\r\n                    pagination={pagination}\r\n                    activePage={activePage}\r\n                    pageChange={pageChange}\r\n                  />\r\n                  <AddAndChange\r\n                    addCharacter={addCharacter}\r\n                    applyChanges={applyChanges}\r\n                  />\r\n                </Segment>\r\n                <Segment\r\n                  basic\r\n                  style={{ backgroundColor: \"dimgray\", marginTop: \"0px\" }}\r\n                >\r\n                  <Grid columns={limit + 1}>\r\n                    <Grid.Row\r\n                      style={{\r\n                        borderBottom: !showNote && \"0.05rem inset ivory\",\r\n                      }}\r\n                    >\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <AlarmAndNote\r\n                          alarmTrue={alarmTrue}\r\n                          alarmRestValue={alarmRestValue}\r\n                          userTodoData={userTodoData}\r\n                          showNote={showNote}\r\n                          setShowNote={setShowNote}\r\n                        />\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <CharacterAvatar\r\n                          itemId={item._id}\r\n                          character={item.character}\r\n                          characterName={item.characterName}\r\n                          attributeChanged={item.attributeChanged}\r\n                          weeklyAttributeChanged={item.weeklyAttributeChanged}\r\n                          axiosConfigAuth={axiosConfigAuth}\r\n                          viewPage={viewPage}\r\n                          alarmCharacter={item.alarmCharacter}\r\n                          limit={limit}\r\n                          dontChange={item.dontChange}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                          activePage={activePage}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    {showNote && (\r\n                      <Grid.Row\r\n                        style={{\r\n                          padding: 0,\r\n                          borderBottom: \"0.05rem inset ivory\",\r\n                          paddingBottom: \"7px\",\r\n                        }}\r\n                      >\r\n                        <Grid.Column />\r\n                        {userTodoData.map((item, idx) => (\r\n                          <PerIdNote\r\n                            item={item}\r\n                            userTodoData={userTodoData}\r\n                            setUserTodoData={setUserTodoData}\r\n                          />\r\n                        ))}\r\n                      </Grid.Row>\r\n                    )}\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <Icon name=\"calendar check outline\" />\r\n                        휴식게이지\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <RestValue\r\n                          item={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    {Array.from([\r\n                      \"카오스던전\",\r\n                      \"가디언토벌\",\r\n                      \"에포나\",\r\n                      \"주간가디언\",\r\n                    ]).map((item, idx) => (\r\n                      <DungeonAndEpona\r\n                        content={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n\r\n                    {Array.from([\r\n                      \"오레하2종\",\r\n                      \"아르고스\",\r\n                      \"발탄\",\r\n                      \"비아키스\",\r\n                      \"쿠크세이튼\",\r\n                      \"아브렐슈드\",\r\n                    ]).map((item, idx) => (\r\n                      <WeeklyRaidContents\r\n                        content={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n\r\n                    {/* 원정대 주간 컨탠츠는 안 보이게 하기로 결정 */}\r\n                    {/* <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/abyssWeekly.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>어비스레이드</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbyssRaid\r\n                        idx={idx}\r\n                        abyssRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/rehearsal.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>리허설, 데쟈뷰</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <RehearsalAndDejavu\r\n                        rehearsalAndDejavuItem={item}\r\n                        idx={idx}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row> */}\r\n                  </Grid>\r\n                </Segment>\r\n              </Grid.Column>\r\n            </Container>\r\n          </Grid>\r\n        </Segment>\r\n      )}\r\n\r\n      {addCharacterModal && (\r\n        <AddCharacter\r\n          addCharacterModal={addCharacterModal}\r\n          closeAddCharacter={closeAddCharacter}\r\n          userTodoData={userTodoData}\r\n          axiosConfigAuth={axiosConfigAuth}\r\n          viewPage={viewPage}\r\n          limit={limit}\r\n          activePage={activePage}\r\n        />\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDoRow;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Image,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  List,\r\n  Button,\r\n  Dropdown,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { characterCdn, characterKorean } from \"../../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { backendUrl } from \"../util/ConstVar\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport \"./AddCharacter.css\";\r\n\r\nfunction AddCharacter({\r\n  addCharacterModal,\r\n  closeAddCharacter,\r\n  userTodoData,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  limit,\r\n}) {\r\n  const [selectCharacterModal, setSelectCharacterModal] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState(\"\");\r\n  const [characterName, setCharacterName] = useState(\"\");\r\n  const [chaosRestValue, setChaosRestValue] = useState(0);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(0);\r\n  const [eponaRestValue, setEponaRestValue] = useState(0);\r\n  const regex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]+$/;\r\n  const regexNumber = /^[0-9]+$/;\r\n\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n  const mobileInputRef = useRef();\r\n\r\n  const closeSelectCharacter = () => setSelectCharacterModal(false);\r\n\r\n  const modalShow = () => {\r\n    setSelectCharacterModal(true);\r\n  };\r\n\r\n  const classSelected = (event) => {\r\n    let selectedClass;\r\n    if (event.target.className.indexOf(\"image\") > 0) {\r\n      selectedClass = event.target.dataset.options;\r\n    } else {\r\n      selectedClass = event.target.className.split(\" \")[2];\r\n    }\r\n    setSelectedCharacter(selectedClass);\r\n    setSelectCharacterModal(false);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeAddCharacterModal = () => {\r\n    setSelectedCharacter(\"\");\r\n    setCharacterName(\"\");\r\n    setChaosRestValue(0);\r\n    setGuardianRestValue(0);\r\n    setEponaRestValue(0);\r\n    closeAddCharacter();\r\n  };\r\n\r\n  const changeInputCharName = (event, data) => {\r\n    const insertedValue = data.value;\r\n    if (insertedValue.length === 0) {\r\n      setCharacterName(\"\");\r\n      return;\r\n    }\r\n    if (!regex.test(insertedValue) || insertedValue.length > 12) return;\r\n    setCharacterName(insertedValue);\r\n  };\r\n\r\n  const changeRestValue = (event, data) => {\r\n    event.preventDefault();\r\n    if (!regexNumber.test(event.target.value)) return;\r\n    if (event.target.id === \"chaosChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = chaosRestValue + (changedValue - chaosRestValue) * 10;\r\n      if (valueOutput < 0) setChaosRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValue(valueOutput);\r\n      else setChaosRestValue(100);\r\n    }\r\n    if (event.target.id === \"guardianChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput =\r\n        guardianRestValue + (changedValue - guardianRestValue) * 10;\r\n      if (valueOutput < 0) setGuardianRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValue(valueOutput);\r\n      else setGuardianRestValue(100);\r\n    }\r\n    if (event.target.id === \"eponaChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = eponaRestValue + (changedValue - eponaRestValue) * 10;\r\n      if (valueOutput < 0) setEponaRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValue(valueOutput);\r\n      else setEponaRestValue(100);\r\n    }\r\n  };\r\n\r\n  const confirmAddCharacter = () => {\r\n    const createdData = {\r\n      // _id: \"5d725a037b292f5f8ceff795\",\r\n      // user: \"5d7a514b5d2c12c7449be042\",\r\n      character: selectedCharacter,\r\n      characterName: characterName,\r\n      date: Date.now(),\r\n      // idx: 2,\r\n      chaosRestValue,\r\n      guardianRestValue,\r\n      eponaRestValue,\r\n      chaosDone: 0,\r\n      guardianDone: 0,\r\n      eponaDone: 0,\r\n      guardianWeeklyDone: 0,\r\n      abyssDungeon2: false,\r\n      // abyssDungeonWeekly: true,\r\n      // rehearsalAndDejavu: [\"kukuseitn\", \"abrel\"],\r\n      argos: false,\r\n      baltan: false,\r\n      biakiss: false,\r\n      kukuseitn: false,\r\n      abrel: false,\r\n      attributeChanged: false,\r\n      weeklyAttributeChanged: false,\r\n      createdAt: Date.now(),\r\n    };\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/homeworks`,\r\n        createdData,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        // setUserTodoData([...userTodoData, response.data.data]);\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          userTodoData.length % limit === 0\r\n        ) {\r\n          viewPage(false, true, response.data.totalLength);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n        closeAddCharacterModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.error, {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        closeAddCharacterModal();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const classElements = document.getElementsByClassName(\r\n      \"characterClassContent\"\r\n    );\r\n    let eventAdd;\r\n    for (let index = 0; index < classElements.length; index++) {\r\n      eventAdd = classElements[index].addEventListener(\"click\", (event) => {\r\n        classSelected(event);\r\n      });\r\n    }\r\n    return () => {\r\n      for (let index = 0; index < classElements.length; index++) {\r\n        classElements[index].removeEventListener(\"click\", eventAdd);\r\n      }\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById(\"characterNameInputId\");\r\n    const enterEvent = element.addEventListener(\"keypress\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        if (buttonRef.current) buttonRef.current.click();\r\n      }\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"keypress\", enterEvent);\r\n    };\r\n  }, []);\r\n\r\n  // for mobile\r\n  const [fullList, setFullList] = useState([]);\r\n  const [mobileDropDownList, setMobileDropDownList] = useState([]);\r\n  useEffect(() => {\r\n    const aList = [];\r\n    for (var key in characterCdn) {\r\n      const addItem = {\r\n        key,\r\n        text: characterKorean[key],\r\n        value: key,\r\n        image: { avatar: true, src: characterCdn[key] },\r\n      };\r\n      aList.push(addItem);\r\n    }\r\n    setFullList(aList);\r\n    setMobileDropDownList(aList);\r\n    if (mobileInputRef.current) mobileInputRef.current.focus();\r\n  }, [selectCharacterModal]);\r\n  const filterDropDown = (event, data) => {\r\n    if (!data.value) {\r\n      setMobileDropDownList(fullList);\r\n      return;\r\n    }\r\n\r\n    const filteredList = fullList.filter((item) => {\r\n      return item.text.indexOf(data.value) > -1;\r\n    });\r\n    setMobileDropDownList(filteredList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={addCharacterModal}\r\n        onClose={closeAddCharacterModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: \"dimgray\" }}>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            {!selectedCharacter ? (\r\n              <>\r\n                <span className=\"itemHeaderAttribute1\">클래스:</span>\r\n                <Icon\r\n                  name=\"add square\"\r\n                  size=\"large\"\r\n                  color=\"white\"\r\n                  onClick={modalShow}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"itemHeaderAttribute2\">클래스:</span>\r\n                <span onClick={() => setSelectCharacterModal(true)}>\r\n                  <Image\r\n                    src={characterCdn[selectedCharacter]}\r\n                    size=\"mini\"\r\n                    avatar\r\n                  />\r\n                  {characterKorean[selectedCharacter]}\r\n                </span>\r\n              </>\r\n            )}\r\n          </Header>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            <span style={{ marginRight: \"40px\" }}>케릭명:</span>\r\n            <Input\r\n              transparent\r\n              placeholder=\"케릭터명\"\r\n              style={{ color: \"white\" }}\r\n              className=\"charNameInput\"\r\n              value={characterName}\r\n              ref={inputRef}\r\n              id=\"characterNameInputId\"\r\n              onChange={(event, data) => changeInputCharName(event, data)}\r\n            />\r\n          </Header>\r\n          <Header className=\"itemHeaderRest\" as=\"h4\">\r\n            <List divided selection>\r\n              <List.Item>\r\n                <Label horizontal>카오스던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={chaosRestValue}\r\n                  id=\"chaosChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>가디언토벌</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={guardianRestValue}\r\n                  id=\"guardianChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>에포나</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={eponaRestValue}\r\n                  id=\"eponaChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n            </List>\r\n          </Header>\r\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <Button\r\n              circular\r\n              color=\"google plus\"\r\n              icon=\"cancel\"\r\n              onClick={closeAddCharacterModal}\r\n            />\r\n            <Button\r\n              circular\r\n              color=\"twitter\"\r\n              icon=\"check\"\r\n              onClick={confirmAddCharacter}\r\n            />\r\n            <button\r\n              ref={buttonRef}\r\n              onClick={confirmAddCharacter}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n      {selectCharacterModal && (\r\n        <Modal\r\n          open={selectCharacterModal}\r\n          onClose={closeSelectCharacter}\r\n          // centered={false}\r\n          className=\"classSelectModal\"\r\n        >\r\n          <Modal.Header\r\n            style={{\r\n              backgroundColor: \"#384862\",\r\n              color: \"white\",\r\n              borderBottom: \"1px solid white\",\r\n            }}\r\n          >\r\n            클래스선택\r\n          </Modal.Header>\r\n          <Modal.Content style={{ backgroundColor: \"#384862\", color: \"white\" }}>\r\n            <Segment>\r\n              <Input\r\n                icon=\"search\"\r\n                iconPosition=\"left\"\r\n                className=\"search\"\r\n                ref={mobileInputRef}\r\n                onChange={(event, data) => filterDropDown(event, data)}\r\n              />\r\n              <br />\r\n              <Dropdown open={true}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Header icon=\"tags\" content=\"직업\" />\r\n                  <Dropdown.Menu scrolling>\r\n                    {mobileDropDownList.map((option) => (\r\n                      <Dropdown.Item\r\n                        key={option.value}\r\n                        {...option}\r\n                        onClick={(event, data) => {\r\n                          setSelectedCharacter(data.value);\r\n                          setSelectCharacterModal(false);\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </Dropdown.Menu>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Segment>\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Modal, Image, Button } from \"semantic-ui-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { characterCdn } from \"../../../_data/characterDefinition\";\r\n\r\nfunction RestValueMobile({ item, userTodoData, setUserTodoData }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(item._id);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowModal(true);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  // if you use setShowModal directly in Modal onClose, react will throw error\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [chaosRestValue, setChaosRestValue] = useState(item.chaosRestValue);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValue, setEponaRestValue] = useState(item.eponaRestValue);\r\n\r\n  const [chaosRestValueChange, setChaosRestValueChange] = useState(\r\n    item.chaosRestValue\r\n  );\r\n  const [guardianRestValueChange, setGuardianRestValueChange] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValueChange, setEponaRestValueChange] = useState(\r\n    item.eponaRestValue\r\n  );\r\n\r\n  const valueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"chaosChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        chaosRestValueChange + (changedValue - chaosRestValueChange) * 10;\r\n      if (valueOutput < 0) setChaosRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValueChange(valueOutput);\r\n      else setChaosRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"guardianChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        guardianRestValueChange + (changedValue - guardianRestValueChange) * 10;\r\n      if (valueOutput < 0) setGuardianRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValueChange(valueOutput);\r\n      else setGuardianRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"eponaChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        eponaRestValueChange + (changedValue - eponaRestValueChange) * 10;\r\n      if (valueOutput < 0) setEponaRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValueChange(valueOutput);\r\n      else setEponaRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const confirmValue = () => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === item._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"chaosRestValue\"] = chaosRestValueChange;\r\n    newArr[indexValue][\"guardianRestValue\"] = guardianRestValueChange;\r\n    newArr[indexValue][\"eponaRestValue\"] = eponaRestValueChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column id={item._id}>\r\n        카오스: {item.chaosRestValue}\r\n        <br />\r\n        가디언: {item.guardianRestValue}\r\n        <br />\r\n        에포나: {item.eponaRestValue}\r\n      </Grid.Column>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Header>\r\n          <Image src={characterCdn[item.character]} size=\"mini\" avatar />\r\n          {item.characterName}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextField\r\n            id=\"chaosChange\"\r\n            type=\"number\"\r\n            label=\"카오스던전\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={chaosRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"guardianChange\"\r\n            type=\"number\"\r\n            label=\"가디언토벌\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={guardianRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"eponaChange\"\r\n            type=\"number\"\r\n            label=\"에포나\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={eponaRestValueChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={closeModal}>\r\n            취소\r\n          </Button>\r\n          <Button positive onClick={confirmValue}>\r\n            확인\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestValueMobile;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction AlarmAndNoteMobile({\r\n  alarmTrue,\r\n  alarmRestValue,\r\n  userTodoData,\r\n  showNote,\r\n  setShowNote,\r\n}) {\r\n  return (\r\n    <Header\r\n      as=\"h4\"\r\n      style={{\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        padding: \".78571429em 1.5em .78571429em\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={alarmTrue ? \"alarm\" : \"alarm mute\"}\r\n          onClick={() => alarmRestValue(userTodoData)}\r\n        />\r\n        {\"  //  \"}\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={!showNote ? \"sticky note outline\" : \"angle double up\"}\r\n          onClick={() => setShowNote(!showNote)}\r\n        />\r\n      </div>\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default AlarmAndNoteMobile;\r\n","import { Image } from 'semantic-ui-react';\r\n\r\nconst showContentPopupValue = (content) => {\r\n  const justContent = (\r\n    <div\r\n      style={{\r\n        backgroundColor: 'rgb(56, 72, 98)',\r\n        color: 'white',\r\n        padding: '5px',\r\n        fontSize: '10px',\r\n      }}\r\n    >\r\n      {content}\r\n    </div>\r\n  );\r\n\r\n  const contentKeyKorToEng = {\r\n    휴식게이지: 'calendar',\r\n    카오스던전: 'chaosDun',\r\n    가디언토벌: 'guardianDun',\r\n    에포나: 'epona',\r\n    주간가디언: 'guardianDun',\r\n    어비스던전: 'abyss2types',\r\n    아르고스: 'argos',\r\n    발탄: 'baltan',\r\n    비아키스: 'biakiss',\r\n    쿠크세이튼: 'kukuseitn',\r\n    아브렐슈드: 'abrel',\r\n  };\r\n\r\n  const imageContent = (\r\n    <div>\r\n      <Image\r\n        src={`./images/loa_icons/${contentKeyKorToEng[content]}.png`}\r\n        avatar\r\n        className='contentImage'\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return [imageContent, justContent];\r\n};\r\n\r\nexport { showContentPopupValue };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./userHomeworkMobile.css\";\r\nimport AddCharacterMobile from \"../components/characterRelated/AddCharacterMobile\";\r\n\r\nimport { Segment, Grid, Icon, Dimmer, Loader, Popup } from \"semantic-ui-react\";\r\nimport RestValueMobile from \"../components/userHomework/RestValueMobile\";\r\nimport CharacterAvatar from \"../components/characterRelated/CharacterAvatar\";\r\nimport {\r\n  ChaosDunValue,\r\n  GuardianDunValue,\r\n  EponaValue,\r\n  WeeklyGuardian,\r\n} from \"../components/userHomework/DungeonAndEponaUtil\";\r\nimport {\r\n  AbyssDun2,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n} from \"../components/userHomework/AbyssAndRaid\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { backendUrl, axiosConfigAuth } from \"../components/util/ConstVar\";\r\nimport {\r\n  viewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n} from \"../components/util/ViewDataUtil\";\r\nimport AddAndChange from \"../components/userHomework/AddAndChange\";\r\nimport PaginationComp from \"../components/userHomework/PaginationComp\";\r\nimport SettingChange from \"../components/userHomework/SettingChange\";\r\nimport AlarmAndNoteMobile from \"../components/userHomework/AlarmAndNoteMobile\";\r\nimport { showContentPopupValue } from \"../components/util/ContentDefinition\";\r\nimport PerIdNote from \"../components/userHomework/PerIdNote\";\r\n\r\nfunction CharacterToDoRowMobile({ limit, type }) {\r\n  const [userTodoData, setUserTodoData] = useState([]);\r\n\r\n  const [addCharacterModal, setAddCharacterModal] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const [pagination, setPagination] = useState(0);\r\n\r\n  const [viewByCheckBox, setViewByCheckBox] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const addCharacter = () => {\r\n    setAddCharacterModal(true);\r\n  };\r\n\r\n  const closeAddCharacter = () => {\r\n    setAddCharacterModal(false);\r\n  };\r\n\r\n  const viewPage = async (minusOne = false, plusOne = false, plusPage = 0) => {\r\n    setLoading(true);\r\n    setUserTodoData([]);\r\n\r\n    const resultData = await viewDataMain(\r\n      minusOne,\r\n      plusOne,\r\n      plusPage,\r\n      limit,\r\n      activePage,\r\n      setActivePage,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    if (resultData.success) {\r\n      setUserTodoData(resultData.viewData.data);\r\n      setPagination(resultData.setPage);\r\n    } else {\r\n      toastMessage(\"데이터를 불러오지 못했습니다\", \"error\", \"mobile\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const applyChanges = async () => {\r\n    setLoading(true);\r\n\r\n    let submitData = userTodoData.filter(\r\n      (item) => item.attributeChanged === true\r\n    );\r\n\r\n    const applyResult = await applyChangesUtil(\r\n      submitData,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    setLoading(false);\r\n    if (applyResult) {\r\n      toastMessage(\"일부 변경사항이 제대로 반영되지 않았습니다\", \"error\");\r\n    }\r\n    viewPage();\r\n  };\r\n\r\n  const pageChange = async (event, data) => {\r\n    setLoading(true);\r\n    setActivePage(data.activePage);\r\n\r\n    // 샙트님 이거 2페이지에 있는 캐릭터 바꾸면 1페이지 같은 자리 있는것두 바뀌는거 같아여\r\n    // 이거 안 해주면 현재 페이지에서 바꾼 ID위치의 정보가 그대로 남아서 사용자에게 모든 페이지의 변경사항이 반영되는 것처럼 보임\r\n    setUserTodoData([]);\r\n\r\n    await axios\r\n      .get(\r\n        `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${data.activePage}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const changeUserCheckBoxConfigurationFunction = async (viewByCheckBox) => {\r\n    const result = await changeUserCheckBoxConfiguration(\r\n      viewByCheckBox,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n    if (result) {\r\n      setViewByCheckBox(viewByCheckBox);\r\n    }\r\n  };\r\n\r\n  // for alarm animation\r\n  const [alarmTrue, setAlarmTrue] = useState(true);\r\n\r\n  // for note per list\r\n  const [showNote, setShowNote] = useState(false);\r\n\r\n  const alarmRestValue = (todoList) => {\r\n    const alarmDataResult = alarmRestValueUtil(todoList, alarmTrue);\r\n    setUserTodoData(alarmDataResult.alarmList);\r\n    setAlarmTrue(alarmDataResult.alarm);\r\n  };\r\n\r\n  // if no user cookie then redirect to login page\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    !loginCookie && history.push(\"/login\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    viewPage();\r\n\r\n    async function callUsersCheckBoxValue() {\r\n      const resultData = await getUserCheckBoxConfiguration(\r\n        cookie.get(\"loadoUserToken\")\r\n      );\r\n      setViewByCheckBox(resultData);\r\n    }\r\n    callUsersCheckBoxValue();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Segment\r\n          className=\"fullPage\"\r\n          style={{ height: \"94vh\", border: \"none\" }}\r\n        >\r\n          <Dimmer active>\r\n            <Loader size=\"big\">로딩중</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      ) : (\r\n        <Segment id=\"mobileMainPageSegment\">\r\n          <PaginationComp\r\n            pagination={pagination}\r\n            activePage={activePage}\r\n            pageChange={pageChange}\r\n            deviceType=\"mobile\"\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              marginTop: \"20px\",\r\n              justifyContent: \"space-between\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <SettingChange\r\n              viewByCheckBox={viewByCheckBox}\r\n              changeUserCheckBoxConfigurationFunction={\r\n                changeUserCheckBoxConfigurationFunction\r\n              }\r\n              deviceType=\"mobile\"\r\n            />\r\n            <AddAndChange\r\n              addCharacter={addCharacter}\r\n              applyChanges={applyChanges}\r\n              style={{ fontSize: \"5px\" }}\r\n            />\r\n          </div>\r\n          <Segment basic id=\"mobileSegmentGrid\">\r\n            <Grid columns={limit + 1}>\r\n              <Grid.Row\r\n                style={{\r\n                  borderBottom: !showNote && \"0.05rem inset ivory\",\r\n                }}\r\n              >\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <AlarmAndNoteMobile\r\n                    alarmTrue={alarmTrue}\r\n                    alarmRestValue={alarmRestValue}\r\n                    userTodoData={userTodoData}\r\n                    showNote={showNote}\r\n                    setShowNote={setShowNote}\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <CharacterAvatar\r\n                    itemId={item._id}\r\n                    character={item.character}\r\n                    characterName={item.characterName}\r\n                    attributeChanged={item.attributeChanged}\r\n                    weeklyAttributeChanged={item.weeklyAttributeChanged}\r\n                    axiosConfigAuth={axiosConfigAuth}\r\n                    viewPage={viewPage}\r\n                    alarmCharacter={item.alarmCharacter}\r\n                    limit={limit}\r\n                    dontChange={item.dontChange}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    deviceType=\"mobile\"\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              {showNote && (\r\n                <Grid.Row\r\n                  style={{\r\n                    padding: 0,\r\n                    borderBottom: \"0.05rem inset ivory\",\r\n                    paddingBottom: \"7px\",\r\n                  }}\r\n                >\r\n                  <Grid.Column />\r\n                  {userTodoData.map((item, idx) => (\r\n                    <PerIdNote\r\n                      item={item}\r\n                      userTodoData={userTodoData}\r\n                      setUserTodoData={setUserTodoData}\r\n                      deviceType=\"mobile\"\r\n                    />\r\n                  ))}\r\n                </Grid.Row>\r\n              )}\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={\r\n                      <Icon\r\n                        name=\"calendar check outline\"\r\n                        style={{ fontSize: \"21px\" }}\r\n                      />\r\n                    }\r\n                    content={showContentPopupValue(\"휴식게이지\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <RestValueMobile\r\n                    item={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"카오스던전\")[0]}\r\n                    content={showContentPopupValue(\"카오스던전\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <ChaosDunValue\r\n                    chaosItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"가디언토벌\")[0]}\r\n                    content={showContentPopupValue(\"가디언토벌\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <GuardianDunValue\r\n                    guardianItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"에포나\")[0]}\r\n                    content={showContentPopupValue(\"에포나\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <EponaValue\r\n                    eponaItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"주간가디언\")[0]}\r\n                    content={showContentPopupValue(\"주간가디언\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <WeeklyGuardian\r\n                    weeklyGuardianItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"어비스던전\")[0]}\r\n                    content={showContentPopupValue(\"어비스던전\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <AbyssDun2\r\n                    abyssDun2Item={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"아르고스\")[0]}\r\n                    content={showContentPopupValue(\"아르고스\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <ArgosRaid\r\n                    argosRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow baltanRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"발탄\")[0]}\r\n                    content={showContentPopupValue(\"발탄\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <BaltanRaid\r\n                    baltanRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"비아키스\")[0]}\r\n                    content={showContentPopupValue(\"비아키스\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <BiakissRaid\r\n                    biakissRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"쿠크세이튼\")[0]}\r\n                    content={showContentPopupValue(\"쿠크세이튼\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <KukseitnRaid\r\n                    kukseitnRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"abrelRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"아브렐슈드\")[0]}\r\n                    content={showContentPopupValue(\"아브렐슈드\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <AbrelRaid\r\n                    abrelRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        </Segment>\r\n      )}\r\n\r\n      {addCharacterModal && (\r\n        <AddCharacterMobile\r\n          addCharacterModal={addCharacterModal}\r\n          closeAddCharacter={closeAddCharacter}\r\n          userTodoData={userTodoData}\r\n          axiosConfigAuth={axiosConfigAuth}\r\n          viewPage={viewPage}\r\n          limit={limit}\r\n        />\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDoRowMobile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { backendUrl, axiosConfig } from \"../components/util/ConstVar\";\r\n\r\nimport \"./login.css\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState(\"로그인이 필요합니다\");\r\n  const [user, setUser] = useState({\r\n    id: cookie.get(\"loginId\") ? cookie.get(\"loginId\") : \"\",\r\n    password: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/login`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set(\"loadoUserToken\", token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set(\"loadoUserCookie\", JSON.stringify(userCookie));\r\n          history.push(\"/userhomework\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.request);\r\n        // console.log(err.response);\r\n        // console.log(err.message);\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    loginCookie && history.push(\"/userhomework\");\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"divLoginPage\">\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\", margin: \"0px\" }}\r\n        verticalAlign=\"middle\"\r\n        id=\"loginPage\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as=\"h2\" textAlign=\"center\" style={{ color: \"tomato\" }}>\r\n            <Image src=\"https://react.semantic-ui.com/logo.png\" />{\" \"}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size=\"large\" onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"ID\"\r\n                name=\"id\"\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\r\n                로그인\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            계정이 없으신가요?{\" \"}\r\n            <a href=\"#\" onClick={() => history.push(\"/register\")}>\r\n              가입\r\n            </a>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <div class=\"custom-shape-divider-bottom-1634800167\">\r\n        <svg\r\n          data-name=\"Layer 1\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1200 120\"\r\n          preserveAspectRatio=\"none\"\r\n        >\r\n          <path\r\n            d=\"M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z\"\r\n            opacity=\".25\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n          <path\r\n            d=\"M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z\"\r\n            opacity=\".5\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n          <path\r\n            d=\"M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { backendUrl, axiosConfig } from \"../components/util/ConstVar\";\r\n\r\nimport \"../login/login.css\";\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState(\"회원가입\");\r\n  const [user, setUser] = useState({\r\n    id: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/register`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n          name: user.name,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set(\"loadoUserToken\", token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set(\"loadoUserCookie\", JSON.stringify(userCookie));\r\n          history.push(\"/userhomework\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"divLoginPage\">\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\", margin: \"0px\" }}\r\n        verticalAlign=\"middle\"\r\n        id=\"loginPage\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as=\"h2\" textAlign=\"center\" style={{ color: \"#394855\" }}>\r\n            <Image src=\"https://react.semantic-ui.com/logo.png\" />{\" \"}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size=\"large\" onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"ID\"\r\n                name=\"id\"\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"quote left\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"이름\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                value={user.name}\r\n              />\r\n\r\n              <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\r\n                가입\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            비밀번호를 잊어버리시면 복구가 불가능합니다\r\n            <br />\r\n            [비밀번호는 암호화되어 저장됩니다]\r\n            <br />\r\n            [예시: .....APvs6TgQOG5d8byxYdLJOD0O6Am.....]\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <div class=\"custom-shape-divider-bottom-1634800167\">\r\n        <svg\r\n          data-name=\"Layer 1\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1200 120\"\r\n          preserveAspectRatio=\"none\"\r\n        >\r\n          <path\r\n            d=\"M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z\"\r\n            opacity=\".25\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n          <path\r\n            d=\"M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z\"\r\n            opacity=\".5\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n          <path\r\n            d=\"M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../userHomework/userHomework.css\";\r\nimport { Segment, Grid, Header, Icon } from \"semantic-ui-react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport cookie from \"js-cookie\";\r\nimport { getLoadoLogs } from \"../components/util/ViewDataUtil\";\r\n\r\nimport \"./dashboard.css\";\r\n\r\nimport { characterKorean } from \"../../_data/characterDefinition\";\r\n\r\nfunction Dashboard() {\r\n  const [lineLabels, setlineLabels] = useState();\r\n  const [lineData, setlineData] = useState();\r\n  const [barLabels, setBarLabels] = useState();\r\n  const [barData, setBarData] = useState();\r\n\r\n  const [userCount, setUserCount] = useState();\r\n  const [userLoadoCount, setUserLoadoCount] = useState();\r\n  const [loadologs, setLoadoLogs] = useState();\r\n\r\n  useEffect(() => {\r\n    async function getLoadoLogsFunction() {\r\n      let resultData = await getLoadoLogs(cookie.get(\"loadoUserToken\"));\r\n      if (!resultData) return;\r\n      resultData.log.sort(function (a, b) {\r\n        const keyA = new Date(a.dateValue);\r\n        const keyB = new Date(b.dateValue);\r\n        // Compare the 2 dates\r\n        if (keyA < keyB) return -1;\r\n        if (keyA > keyB) return 1;\r\n        return 0;\r\n      });\r\n      const labels = [];\r\n      const data = [];\r\n      resultData.log.map((item) => {\r\n        labels.push(item.dateValue);\r\n        data.push(item.count);\r\n      });\r\n      setlineLabels(labels);\r\n      setlineData(data);\r\n\r\n      setUserCount(resultData.userCount);\r\n      setUserLoadoCount(resultData.hwCount);\r\n      setLoadoLogs(resultData.logsCount);\r\n\r\n      const barLabels = [];\r\n      const barData = [];\r\n\r\n      resultData.jobGroupingResult.map((item, idx) => {\r\n        // if (idx > 15) return;\r\n        barLabels.push(characterKorean[item._id]);\r\n        barData.push(item.characterCount);\r\n      });\r\n\r\n      setBarLabels(barLabels);\r\n      setBarData(barData);\r\n    }\r\n    getLoadoLogsFunction();\r\n  }, []);\r\n\r\n  const chartjsLineData = {\r\n    labels: lineLabels,\r\n    datasets: [\r\n      {\r\n        label: \"\",\r\n        data: lineData,\r\n        fill: false,\r\n        backgroundColor: \"rgb(255, 99, 132)\",\r\n        borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartjsLineOptions = {\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"이용 현황\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartjsBarData = {\r\n    labels: barLabels,\r\n    datasets: [\r\n      {\r\n        label: \"\",\r\n        data: barData,\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartjsBarOptions = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"직업 현황\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [12, 19, 3, 5, 2, 3],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Segment className=\"fullPage\" id=\"dashboardPage\" style={{ border: \"none\" }}>\r\n      <Grid columns={2}>\r\n        <Grid.Row>\r\n          <Grid.Column style={{ margin: \"auto\", textAlign: \"center\" }}>\r\n            <Header as=\"h2\" className=\"dashboardHeader\">\r\n              <Icon name=\"users\" />\r\n              등록된 사용자 수 : {userCount} 명\r\n            </Header>\r\n            <Header as=\"h2\" className=\"dashboardHeader\">\r\n              <Icon name=\"book\" />\r\n              등록된 숙제 수 : {userLoadoCount} 개\r\n            </Header>\r\n            <Header as=\"h2\" className=\"dashboardHeader\">\r\n              <Icon name=\"pencil square\" />\r\n              일주일 로그 수 : {loadologs} 개\r\n            </Header>\r\n          </Grid.Column>\r\n          <Grid.Column className=\"lineGraphAreaColumn\">\r\n            <div id=\"lineGraphArea\">\r\n              <Line\r\n                data={chartjsLineData}\r\n                options={chartjsLineOptions}\r\n                className=\"lineGraph\"\r\n              />\r\n            </div>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <br />\r\n      <div\r\n        style={{\r\n          height: \"500px\",\r\n          width: \"60%\",\r\n          backgroundColor: \"white\",\r\n          margin: \"0 auto\",\r\n        }}\r\n      >\r\n        <Bar\r\n          data={chartjsBarData}\r\n          options={chartjsBarOptions}\r\n          className=\"lineGraph\"\r\n        />\r\n      </div>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport { Grid, Segment } from 'semantic-ui-react';\r\nimport NavHeader from './pages/navHeader/web/NavHeader';\r\nimport NavHeaderMobile from './pages/navHeader/mobile/NavHeaderMobile';\r\nimport CharacterToDoRow from './pages/userHomework/index';\r\nimport CharacterToDoRowMobile from './pages/userHomeworkMobile/index';\r\nimport Login from './pages/login/index';\r\nimport Register from './pages/register/index';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { createMedia } from '@artsy/fresnel';\r\nimport Dashboard from './pages/dashboard/index';\r\n\r\nconst AppMedia = createMedia({\r\n  breakpoints: { zero: 0, mobile: 549, tablet: 850, computer: 1080 },\r\n});\r\n\r\nconst mediaStyles = AppMedia.createMediaStyle();\r\nconst { Media, MediaContextProvider } = AppMedia;\r\n\r\nfunction App() {\r\n  return (\r\n    <MediaContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/userhomework'>\r\n            <>\r\n              <Media between={['zero', 'tablet']}>\r\n                <Segment\r\n                  style={{\r\n                    backgroundColor: '#384862',\r\n                    padding: '0px',\r\n                    border: 'none',\r\n                    height: '100%',\r\n                    width: '100%',\r\n                  }}\r\n                >\r\n                  <NavHeaderMobile />\r\n                  <CharacterToDoRowMobile\r\n                    limit={3}\r\n                    type='mobile'\r\n                    style={{ padding: '0px' }}\r\n                  />\r\n                </Segment>\r\n              </Media>\r\n              <Media between={['tablet', 'computer']}>\r\n                <Segment id='biggerThanTablet'>\r\n                  <NavHeader />\r\n                  <CharacterToDoRow limit={6} type='mobile' />\r\n                </Segment>\r\n              </Media>\r\n              <Media greaterThanOrEqual='computer'>\r\n                <Segment id='biggerThanTablet'>\r\n                  <NavHeader />\r\n                  <CharacterToDoRow limit={8} type='computer' />\r\n                </Segment>\r\n              </Media>\r\n              {/* <Grid stackable style={{ border: \"none\" }}>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    background: \"lightCoral\",\r\n                  }}\r\n                >\r\n                  <Grid.Column style={{ border: \"none\" }}>\r\n                    <NavHeader />\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    paddingTop: \"0rem\",\r\n                    height: \"94vh\",\r\n                    backgroundColor: \"#384862\",\r\n                  }}\r\n                >\r\n                  <Grid.Column>\r\n                    <Media between={[\"zero\", \"tablet\"]}>\r\n                      <CharacterToDoRowMobile limit={4} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media between={[\"tablet\", \"computer\"]}>\r\n                      <CharacterToDoRow limit={6} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media greaterThanOrEqual=\"computer\">\r\n                      <CharacterToDoRow limit={8} type=\"computer\" />\r\n                    </Media>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid> */}\r\n            </>\r\n          </Route>\r\n          <Route path='/dashboard'>\r\n            <NavHeader />\r\n            <Dashboard />\r\n          </Route>\r\n          <Route path='/login'>\r\n            <Login />\r\n          </Route>\r\n          <Route path='/register'>\r\n            <Register />\r\n          </Route>\r\n          <Route path='/' exact>\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </MediaContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}