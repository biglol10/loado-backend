{"version":3,"sources":["Components/Utils/ConstVar.js","Components/Nav/HistoryModal.js","_data/characterDefinition.js","Components/Utils/ViewDataUtil.js","Components/HomeSubComp/ChangePosition.js","Components/Nav/NavHeader.js","Components/Home/CharacterToDo.js","Components/Utils/AddCharacter.js","Components/GridItem/RestValue.js","Components/Home/CharacterAvatar.js","Components/Home/PerIdNote.js","Components/GridItem/DungeonAndEpona.js","Components/GridItem/AbyssAndRaid.js","Components/HomeSubComp/AddAndChange.js","Components/HomeSubComp/PaginationComp.js","Components/HomeSubComp/SettingChange.js","Components/HomeSubComp/AlarmAndNote.js","Components/Home/CharacterToDoRow.js","Components/Home/Login.js","Components/Home/Register.js","App.js","index.js"],"names":["backendUrl","axiosConfig","headers","axiosConfigAuth","userCookie","Authorization","HistoryModal","showUpdateHistoryModal","setShowUpdateHistoryModal","Modal","open","onClose","closeOnDimmerClick","Header","style","backgroundColor","color","borderBottom","Content","fontWeight","marginRight","characterCdn","berserker","warlord","destroyer","holyknight","battlemaster","infighter","soulmaster","lancemaster","striker","devilhunter","blaster","hawkeye","scouter","gunslinger","summoner","arcana","bard","sorceress","blade","demonic","reaper","characterKorean","viewDataMain","minusOne","plusOne","plusPage","limit","activePage","setActivePage","a","searchString","Math","floor","axios","get","then","response","totalLength","data","setPage","viewData","success","catch","err","axiosResult","allViewDataMain","dataLength","applyChangesUtil","submitData","errorOccured","index","length","put","_id","toastMessage","msg","type","toast","error","position","POSITION","BOTTOM_LEFT","info","ChangePosition","dragStartIndex","changeRowModal","setChangeRowModal","useState","userTodoData","setUserTodoData","labelText","setLabelText","changedIndexArr","setChangedIndexArr","saveChanges","distinctIndexData","Array","from","Set","sendData","filter","item","includes","cookie","window","location","reload","useEffect","resultData","console","log","callData","dragStart","this","getAttribute","dragOver","e","preventDefault","dragDrop","dragEndIndex","fromIndex","toIndex","itemFrom","itemTo","itemFromIdx","idx","itemToIdx","push","swapItems","classList","remove","dragEnter","add","dragLeave","draggables","document","querySelectorAll","forEach","draggable","addEventListener","removeEventListener","size","Label","as","ribbon","marginLeft","onClick","Grid","columns","sort","b","map","Row","className","Column","width","Image","avatar","src","character","characterName","NavHeader","userIdString","userValue","JSON","parse","history","useHistory","setOpen","restValueBatch","post","alert","Menu","height","borderRadius","borderless","Item","fontStyle","Icon","name","padding","cursor","Popup","on","onOpen","trigger","display","userName","Button","content","Divider","userId","set","CharacterToDo","AddCharacter","addCharacterModal","closeAddCharacter","viewPage","selectCharacterModal","setSelectCharacterModal","selectedCharacter","setSelectedCharacter","setCharacterName","chaosRestValue","setChaosRestValue","guardianRestValue","setGuardianRestValue","eponaRestValue","setEponaRestValue","regex","regexNumber","inputRef","useRef","buttonRef","classSelected","event","selectedClass","target","indexOf","dataset","options","split","current","focus","closeAddCharacterModal","changeRestValue","test","value","id","changedValue","valueOutput","confirmAddCharacter","createdData","date","Date","now","chaosDone","guardianDone","eponaDone","guardianWeeklyDone","abyssDungeon2","argos","baltan","biakiss","kukuseitn","abrel","attributeChanged","weeklyAttributeChanged","createdAt","eventAdd","classElements","getElementsByClassName","element","getElementById","enterEvent","key","click","closeIcon","Input","transparent","placeholder","ref","onChange","insertedValue","changeInputCharName","List","divided","selection","horizontal","justifyContent","circular","icon","marginTop","autoClose","RestValue","showModal","setShowModal","rightclickEvent","closeModal","chaosRestValueChange","setChaosRestValueChange","guardianRestValueChange","setGuardianRestValueChange","eponaRestValueChange","setEponaRestValueChange","valueChange","TextField","label","Actions","negative","positive","indexValue","findIndex","anItem","newArr","CharacterAvatar","itemId","alarmCharacter","dontChange","deleteIcon","showDeleteIcon","showDontChange","setShowDontChange","dontChangeState","setDontChangeState","delete","message","dontChangeCharacter","PerIdNote","showTextArea","setShowTextArea","note","textValue","setTextValue","changeText","theText","TextArea","inverted","changeArr","arr","match","dataValue","ChaosDunValue","chaosItem","viewByCheckBox","text","chaosData","setChaosData","chaosDataChecked","setChaosDataChecked","changeData","paddingTop","Checkbox","checked","changeDataChecked","Dropdown","GuardianDunValue","guardianItem","guardianData","setGuardianData","guardianDataChecked","setGuardianDataChecked","EponaValue","eponaItem","eponaData","setEponaData","eponaDataChecked","setEponaDataChecked","WeeklyGuardian","weeklyGuardianItem","weeklyGuardianData","setWeeklyGuardianData","weeklyGuardianDataChecked","setWeeklyGuardianDataChecked","changeDatafunction","setItem","findIndexItem","changeItem","attrChanged","AbyssDun2","abyssDun2Item","abyssDun2","setAbyssDun2","ArgosRaid","argosRaidItem","argosRaid","setArgosRaid","BaltanRaid","baltanRaidItem","baltanRaid","setBaltanRaid","BiakissRaid","biakissRaidItem","biakissRaid","setBiakissRaid","KukseitnRaid","kukseitnRaidItem","kukseitnRaid","setKukseitnRaid","AbrelRaid","abrelRaidItem","abrelRaid","setAbrelRaid","AddAndChange","addCharacter","applyChanges","PaginationComp","pagination","pageChange","Pagination","firstItem","lastItem","pointing","secondary","totalPages","onPageChange","SettingChange","setViewByCheckBox","todayDate","today","getFullYear","getMonth","getDate","basic","image","AlarmAndNote","alarmTrue","alarmRestValue","showNote","setShowNote","CharacterToDoRow","setAddCharacterModal","loading","setLoading","setPagination","applyResult","setAlarmTrue","Segment","border","Dimmer","active","Loader","Container","marginBottom","todoList","alarmDataResult","alarmList","alarm","alarmRestValueUtil","paddingBottom","Login","loginMessage","setLoginMessage","password","user","setUser","handleChange","prev","textAlign","verticalAlign","maxWidth","Form","onSubmit","token","stringify","stacked","fluid","iconPosition","Message","href","Register","AppMedia","createMedia","breakpoints","zero","mobile","tablet","computer","Media","createMediaStyle","MediaContextProvider","App","path","stackable","background","between","greaterThanOrEqual","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d213b757.chunk.js","sourcesContent":["import cookie from 'js-cookie';\r\n\r\n// const backendUrl = 'https://loado-app.herokuapp.com';\r\nconst backendUrl = 'https://loado-backend.herokuapp.com';\r\n// const backendUrl = \"http://localhost:5000\";\r\n\r\nconst axiosConfig = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nconst axiosConfigAuth = (userCookie) => {\r\n  const bearer = `Bearer ${userCookie}`;\r\n  return {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: bearer,\r\n    },\r\n  };\r\n};\r\n\r\nexport { backendUrl, axiosConfig, axiosConfigAuth };\r\n","import React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\n\r\nfunction HistoryModal({ showUpdateHistoryModal, setShowUpdateHistoryModal }) {\r\n  return (\r\n    <Modal\r\n      open={showUpdateHistoryModal}\r\n      onClose={() => setShowUpdateHistoryModal(false)}\r\n      closeOnDimmerClick\r\n    >\r\n      <Modal.Header\r\n        style={{\r\n          backgroundColor: '#384862',\r\n          color: 'white',\r\n          borderBottom: '1px solid white',\r\n        }}\r\n      >\r\n        작업 내역 __ (이 팝업은 조금 더 보기 편하게 개편될 것입니다)\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <p>\r\n          <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n            2021-09-06\r\n          </span>\r\n          직업명 오타 수정 : 아르라카 {'->'} 아르카나\r\n        </p>\r\n        <p>\r\n          <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n            2021-09-07\r\n          </span>\r\n          가입 시 암호화 관련 설명 추가\r\n        </p>\r\n        <p>\r\n          <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n            2021-09-08\r\n          </span>\r\n          케릭터명 입력 후 엔터 이벤트를 등록하기 위해 [케릭터 추가] 팝업 등장\r\n          내부로직 수정\r\n        </p>\r\n        <p>\r\n          <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n            2021-09-09\r\n          </span>\r\n          (버튼이 안 보이는 분들을 위해) 케릭터 추가 기능에서 클래스 선택 및\r\n          케릭터명 입력 후 엔터 시 케릭터가 추가되는 기능 추가\r\n        </p>\r\n        <p>\r\n          <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n            2021-09-10\r\n          </span>\r\n          유지보수 및 코드 분석을 위해 내부 코드 리팩토링 진행 및 간결하게 수정\r\n        </p>\r\n        <p>\r\n          <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n            2021-09-12\r\n          </span>\r\n          9월10일 업데이트 후 첫 로그인 시 화면에 아무것도 안 뜨던 현상 수정,\r\n          컨탠츠에 마우스 올리면 행의 색갈이 바뀌도록 수정\r\n        </p>\r\n        <p>\r\n          <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n            2021-09-12\r\n          </span>\r\n          카던, 가디언, 에포나에 숫자로 선택할 필요없이 체크로 선택하여 저장하기\r\n          가능토록 수정\r\n        </p>\r\n        <p>\r\n          <span style={{ fontWeight: 'bold', marginRight: '20px' }}>\r\n            2021-09-16\r\n          </span>\r\n          케릭터 순서 변경 기능 추가 (우측 상단 이름 클릭 후 순서변경)\r\n        </p>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default HistoryModal;\r\n","const characterCdn = {\r\n  berserker:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/berserker_s.png\",\r\n  warlord:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/warlord_s.png\",\r\n  destroyer:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/destroyer_s.png\",\r\n  holyknight:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/holyknight_s.png\",\r\n  battlemaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/battlemaster_s.png\",\r\n  infighter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/infighter_s.png\",\r\n  soulmaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/soulmaster_s.png\",\r\n  lancemaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/lancemaster_s.png\",\r\n  striker:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/striker_s.png\",\r\n  devilhunter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/devilhunter_s.png\",\r\n  blaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blaster_s.png\",\r\n  hawkeye:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/hawkeye_s.png\",\r\n  scouter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/scouter_s.png\",\r\n  gunslinger:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/gunslinger_s.png\",\r\n  summoner:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/summoner_s.png\",\r\n  arcana:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/arcana_s.png\",\r\n  bard: \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/bard_s.png\",\r\n  sorceress:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/sorceress_s.png\",\r\n  blade:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blade_s.png\",\r\n  demonic:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/demonic_s.png\",\r\n  reaper:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/reaper_s.png\",\r\n};\r\n\r\nconst characterKorean = {\r\n  arcana: \"아르카나\",\r\n  bard: \"바드\",\r\n  battlemaster: \"배틀마스터\",\r\n  berserker: \"버서커\",\r\n  blade: \"블레이드\",\r\n  blaster: \"블래스터\",\r\n  demonic: \"데모닉\",\r\n  destroyer: \"디스트로이어\",\r\n  devilhunter: \"데빌헌터\",\r\n  gunslinger: \"건슬링어\",\r\n  hawkeye: \"호크아이\",\r\n  holyknight: \"홀리나이트\",\r\n  infighter: \"인파이터\",\r\n  lancemaster: \"창술사\",\r\n  reaper: \"리퍼\",\r\n  scouter: \"스카우터\",\r\n  sorceress: \"소서리스\",\r\n  soulmaster: \"기공사\",\r\n  striker: \"스트라이커\",\r\n  summoner: \"서머너\",\r\n  warlord: \"워로드\",\r\n};\r\n\r\nexport { characterCdn, characterKorean };\r\n","import axios from \"axios\";\r\nimport { backendUrl, axiosConfigAuth } from \"./ConstVar\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nasync function viewDataMain(\r\n  minusOne,\r\n  plusOne,\r\n  plusPage,\r\n  limit,\r\n  activePage,\r\n  setActivePage,\r\n  userCookie\r\n) {\r\n  let searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${activePage}`;\r\n\r\n  if (minusOne) {\r\n    searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n      activePage - 1\r\n    }`;\r\n    setActivePage(activePage - 1);\r\n  } else if (plusOne) {\r\n    searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n      Math.floor(plusPage / limit) + 1\r\n    }`;\r\n    setActivePage(Math.floor(plusPage / limit) + 1);\r\n  }\r\n\r\n  const axiosResult = await axios\r\n    .get(searchString, axiosConfigAuth(userCookie))\r\n    .then((response) => {\r\n      const totalLength = response.data.totalLength;\r\n      let setPage = 0;\r\n      if (totalLength) {\r\n        const totalPage =\r\n          totalLength / limit - Math.floor(totalLength / limit) > 0\r\n            ? Math.floor(totalLength / limit) + 1\r\n            : Math.floor(totalLength / limit);\r\n        setPage = totalPage;\r\n      } else {\r\n        setPage = 1;\r\n      }\r\n      return {\r\n        viewData: response.data,\r\n        success: true,\r\n        setPage,\r\n      };\r\n    })\r\n    .catch((err) => {\r\n      return {\r\n        viewData: [],\r\n        success: true,\r\n        setPage: 1,\r\n      };\r\n    });\r\n  return axiosResult;\r\n}\r\n\r\nasync function allViewDataMain(userCookie) {\r\n  let searchString = `${backendUrl}/loado/api/homeworks/getAllHomework`;\r\n  const axiosResult = await axios\r\n    .get(searchString, axiosConfigAuth(userCookie))\r\n    .then((response) => {\r\n      return {\r\n        viewData: response.data,\r\n        success: true,\r\n        dataLength: response.data.totalLength,\r\n      };\r\n    });\r\n  return axiosResult;\r\n}\r\n\r\nasync function applyChangesUtil(submitData, userCookie) {\r\n  let errorOccured = false;\r\n\r\n  for (let index = 0; index < submitData.length; index++) {\r\n    await axios\r\n      .put(\r\n        `${backendUrl}/loado/api/homeworks/${submitData[index]._id}`,\r\n        {\r\n          data: submitData[index],\r\n        },\r\n        axiosConfigAuth(userCookie)\r\n      )\r\n      .then((response) => {})\r\n      .catch((err) => {\r\n        errorOccured = true;\r\n      });\r\n  }\r\n  return errorOccured;\r\n}\r\n\r\nfunction alarmRestValueUtil(todoList, alarmTrue) {\r\n  let alarmList = [];\r\n  let alarm = false;\r\n\r\n  // 알람 중지\r\n  if (!alarmTrue) {\r\n    alarmList = todoList.map((item, idx) => {\r\n      item.alarmCharacter = false;\r\n      return item;\r\n    });\r\n    alarm = true;\r\n  }\r\n  // 알람 온\r\n  else {\r\n    alarmList = todoList.map((item, idx) => {\r\n      if (\r\n        item.chaosRestValue >= 40 ||\r\n        item.guardianRestValue >= 40 ||\r\n        item.eponaRestValue >= 60\r\n      ) {\r\n        item.alarmCharacter = true;\r\n      }\r\n      return item;\r\n    });\r\n    alarm = false;\r\n  }\r\n  return {\r\n    alarmList,\r\n    alarm,\r\n  };\r\n}\r\n\r\nfunction toastMessage(msg, type) {\r\n  if (type === \"error\") {\r\n    return toast.error(msg, {\r\n      position: toast.POSITION.BOTTOM_LEFT,\r\n    });\r\n  } else if (type === \"info\") {\r\n    return toast.info(msg, {\r\n      position: toast.POSITION.BOTTOM_LEFT,\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  viewDataMain,\r\n  allViewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Grid, Image, Header, Label } from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { characterCdn, characterKorean } from '../../_data/characterDefinition';\r\n\r\nimport { allViewDataMain, applyChangesUtil } from '../Utils/ViewDataUtil';\r\n\r\nfunction ChangePosition({ changeRowModal, setChangeRowModal }) {\r\n  const [userTodoData, setUserTodoData] = useState();\r\n  const [labelText, setLabelText] = useState('저장');\r\n\r\n  const [changedIndexArr, setChangedIndexArr] = useState([]);\r\n\r\n  const saveChanges = async () => {\r\n    // ES6 distinct values\r\n    const distinctIndexData = Array.from(new Set(changedIndexArr));\r\n    const sendData = userTodoData.filter((item, index) =>\r\n      distinctIndexData.includes(index)\r\n    );\r\n\r\n    const applyResult = await applyChangesUtil(\r\n      sendData,\r\n      cookie.get('loadoUserToken')\r\n    );\r\n\r\n    if (applyResult) {\r\n      setLabelText('저장에 실패했습니다');\r\n      return;\r\n    }\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function callData() {\r\n      const resultData = await allViewDataMain(cookie.get('loadoUserToken'));\r\n      console.log(resultData.viewData.data);\r\n      setUserTodoData(resultData.viewData.data);\r\n    }\r\n    callData();\r\n  }, []);\r\n\r\n  let dragStartIndex;\r\n\r\n  useEffect(() => {\r\n    function dragStart() {\r\n      dragStartIndex = +this.getAttribute('data-index');\r\n    }\r\n\r\n    function dragOver(e) {\r\n      //   console.log(\"Event: \", \"dragover\");\r\n      //   nothing happens and the reason\r\n      // for that is basically the drag over event is getting in the way.\r\n      // So we want the read the only reason I have drag over here is to prevent the default action.\r\n      e.preventDefault();\r\n    }\r\n\r\n    function dragDrop() {\r\n      const dragEndIndex = +this.getAttribute('data-index');\r\n      swapItems(dragStartIndex, dragEndIndex);\r\n      this.classList.remove('over');\r\n    }\r\n\r\n    function dragEnter() {\r\n      this.classList.add('over');\r\n    }\r\n    function dragLeave() {\r\n      this.classList.remove('over');\r\n    }\r\n\r\n    // Swap list iteams that are drag and drop\r\n    function swapItems(fromIndex, toIndex) {\r\n      const itemFrom = userTodoData[fromIndex - 1];\r\n      const itemTo = userTodoData[toIndex - 1];\r\n\r\n      const itemFromIdx = itemFrom.idx;\r\n      const itemToIdx = itemTo.idx;\r\n\r\n      itemFrom.idx = itemToIdx;\r\n      itemTo.idx = itemFromIdx;\r\n\r\n      userTodoData[fromIndex - 1] = itemTo;\r\n      userTodoData[toIndex - 1] = itemFrom;\r\n\r\n      changedIndexArr.push(fromIndex - 1);\r\n      changedIndexArr.push(toIndex - 1);\r\n      setChangedIndexArr(changedIndexArr);\r\n\r\n      console.log(changedIndexArr);\r\n\r\n      setUserTodoData([]); // 정보가 남아서 초기화\r\n      setUserTodoData(userTodoData);\r\n    }\r\n\r\n    if (userTodoData) {\r\n      const draggables = document.querySelectorAll('.draggable');\r\n\r\n      draggables.forEach((draggable) => {\r\n        draggable.addEventListener('dragstart', dragStart);\r\n        draggable.addEventListener('dragover', dragOver);\r\n        draggable.addEventListener('drop', dragDrop);\r\n        draggable.addEventListener('dragenter', dragEnter);\r\n        draggable.addEventListener('dragleave', dragLeave);\r\n      });\r\n\r\n      return () => {\r\n        draggables.forEach((draggable) => {\r\n          draggable.removeEventListener('dragstart', dragStart);\r\n          draggable.addEventListener('dragover', dragOver);\r\n          draggable.addEventListener('drop', dragDrop);\r\n          draggable.addEventListener('dragenter', dragEnter);\r\n          draggable.addEventListener('dragleave', dragLeave);\r\n        });\r\n      };\r\n    }\r\n  }, [userTodoData]);\r\n\r\n  return (\r\n    <Modal\r\n      open={changeRowModal}\r\n      onClose={() => setChangeRowModal(false)}\r\n      closeOnDimmerClick\r\n      size='tiny'\r\n    >\r\n      <Modal.Header\r\n        style={{\r\n          backgroundColor: '#384862',\r\n          color: 'white',\r\n          borderBottom: '1px solid white',\r\n        }}\r\n      >\r\n        케릭터 순서변경\r\n        {userTodoData && (\r\n          <Label\r\n            as='a'\r\n            color='orange'\r\n            ribbon\r\n            style={{ marginLeft: '80px' }}\r\n            onClick={saveChanges}\r\n          >\r\n            {labelText}\r\n          </Label>\r\n        )}\r\n      </Modal.Header>\r\n      <Modal.Content style={{ backgroundColor: 'lavender' }}>\r\n        <Grid columns={10}>\r\n          {userTodoData &&\r\n            userTodoData\r\n              .sort(function (a, b) {\r\n                return a['idx'] - b['idx'];\r\n              })\r\n              .map((item, index) => (\r\n                <Grid.Row\r\n                  className='draggable'\r\n                  draggable={true}\r\n                  data-index={item.idx}\r\n                  style={{ borderBottom: '1px solid rgb(56, 72, 98)' }}\r\n                >\r\n                  <Grid.Column width={7}>\r\n                    <Header as='h5'>\r\n                      <span style={{ marginRight: '20px' }}>{index + 1}.</span>\r\n                      <Image avatar src={characterCdn[item.character]} />{' '}\r\n                      <span style={{ marginLeft: '10px' }}>\r\n                        {item.characterName}\r\n                      </span>\r\n                    </Header>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n        </Grid>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ChangePosition;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Menu,\r\n  Header,\r\n  Icon,\r\n  Popup,\r\n  Button,\r\n  Modal,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { backendUrl, axiosConfig } from '../Utils/ConstVar';\r\n\r\nimport HistoryModal from '../Nav/HistoryModal';\r\nimport ChangePosition from '../HomeSubComp/ChangePosition';\r\n\r\nfunction NavHeader() {\r\n  let userIdString = cookie.get('loadoUserCookie');\r\n  let userValue = userIdString && JSON.parse(userIdString);\r\n  const history = useHistory();\r\n\r\n  const [showUpdateHistoryModal, setShowUpdateHistoryModal] = useState(false);\r\n  const [changeRowModal, setChangeRowModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const logoutUser = (userId) => {\r\n    cookie.set('loginId', userId);\r\n    cookie.remove('loadoUserCookie');\r\n    cookie.remove('loadoUserToken');\r\n    cookie.remove('token');\r\n    history.push('/login');\r\n  };\r\n\r\n  const restValueBatch = async () => {\r\n    let searchString = `${backendUrl}/loado/api/homeworks/loadoupdatepersonal`;\r\n    axios\r\n      .post(searchString, {}, axiosConfig)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        alert('휴식게이지를 반영하지 못했습니다');\r\n      });\r\n  };\r\n\r\n  const openChangeRowModal = () => {\r\n    setOpen(false);\r\n    setChangeRowModal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        style={{\r\n          backgroundColor: 'lightcoral',\r\n          height: '6vh',\r\n          borderRadius: '0px',\r\n        }}\r\n        borderless\r\n      >\r\n        <Menu.Item>\r\n          <Header\r\n            size='large'\r\n            style={{ marginRight: '150px', marginLeft: '50px', color: 'white' }}\r\n          >\r\n            <span style={{ fontStyle: 'italic' }}>\r\n              <Icon name='game' />\r\n              LoaDo\r\n            </span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            style={{ color: 'white', padding: '0 50px', cursor: 'pointer' }}\r\n            onClick={() =>\r\n              window.open(\r\n                'https://github.com/biglol10/loado-react/blob/main/README.md'\r\n              )\r\n            }\r\n          >\r\n            <Icon name='list ul' />\r\n            기능소개\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            style={{ color: 'white', padding: '0 50px', cursor: 'pointer' }}\r\n            onClick={() => setShowUpdateHistoryModal(!showUpdateHistoryModal)}\r\n          >\r\n            <Icon name='cube' />\r\n            작업 내역\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            style={{ color: 'white', padding: '0 50px', cursor: 'pointer' }}\r\n            onClick={() => restValueBatch()}\r\n          >\r\n            <Icon name='box' />\r\n            휴식게이지반영\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item style={{ marginLeft: 'auto', marginRight: '50px' }}>\r\n          <Popup\r\n            on='click'\r\n            position='top right'\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={\r\n              <Header\r\n                size='small'\r\n                style={{\r\n                  color: 'white',\r\n                  padding: '0 50px',\r\n                  display: 'flex',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                <Icon name='user' />\r\n                {userValue && userValue.userName}\r\n              </Header>\r\n            }\r\n          >\r\n            <p>케릭터 순서를 바꾸시겠습니까?</p>\r\n            <Button\r\n              color='blue'\r\n              content='순서변경'\r\n              onClick={openChangeRowModal}\r\n            />\r\n            <Divider />\r\n            <p>로그아웃 하시겠습니까?</p>\r\n            <Button\r\n              color='red'\r\n              content='로그아웃'\r\n              onClick={() => logoutUser(userValue.userId)}\r\n            />\r\n          </Popup>\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {showUpdateHistoryModal && (\r\n        <HistoryModal\r\n          showUpdateHistoryModal={showUpdateHistoryModal}\r\n          setShowUpdateHistoryModal={setShowUpdateHistoryModal}\r\n        />\r\n      )}\r\n\r\n      {changeRowModal && (\r\n        <ChangePosition\r\n          changeRowModal={changeRowModal}\r\n          setChangeRowModal={setChangeRowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeader;\r\n","import React, { useState } from \"react\";\r\nimport \"./CharacterToDo.css\";\r\nimport { Header, Button, Segment, Grid, Container } from \"semantic-ui-react\";\r\nimport TodoComponent from \"../Todo/TodoComponent\";\r\nimport todoData from \"../../_data/todoData.js\";\r\n\r\nfunction CharacterToDo() {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  const [userTodoData, setUserTodoData] = useState(todoData);\r\n\r\n  const [iconId, setIconId] = useState(\"\");\r\n\r\n  const [changedList, setChangedList] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <Grid className=\"fullPage\">\r\n        <Container\r\n          style={{ width: \"95%\", marginLeft: \"2.5%\", marginRight: \"2.5%\" }}\r\n        >\r\n          <Grid.Column width={16}>\r\n            <Segment basic style={{ marginBottom: \"0px\" }}>\r\n              <Header\r\n                size=\"huge\"\r\n                style={{ color: \"deepskyblue\", textAlign: \"center\" }}\r\n              >\r\n                로아 숙제관리\r\n              </Header>\r\n            </Segment>\r\n            <Segment basic className=\"contentHeader\">\r\n              <div className=\"headerValueStart\">\r\n                <Header size=\"medium\" style={{ color: \"white\" }}>\r\n                  {today}{\" \"}\r\n                  <span style={{ marginLeft: \"40px\" }}>\r\n                    금일 06:00 ~ 명일 05:59\r\n                  </span>\r\n                </Header>\r\n              </div>\r\n              <div className=\"headerValueEnd\">\r\n                <Button inverted color=\"red\">\r\n                  변경사항 저장\r\n                </Button>\r\n              </div>\r\n            </Segment>\r\n            <Segment basic style={{ backgroundColor: \"slategrey\" }}>\r\n              <Grid columns={16}>\r\n                <Grid.Row style={{ borderBottom: \"0.05rem inset ivory\" }}>\r\n                  <Grid.Column style={{ width: \"150px\" }}></Grid.Column>\r\n                  <Grid.Column width={2}>휴식게이지</Grid.Column>\r\n                  <Grid.Column width={12}>\r\n                    <Grid columns=\"equal\">\r\n                      <Grid.Row>\r\n                        <Grid.Column>카오스던전</Grid.Column>\r\n                        <Grid.Column>가디언토벌</Grid.Column>\r\n                        <Grid.Column>에포나</Grid.Column>\r\n                        <Grid.Column>가디언레이드</Grid.Column>\r\n                        <Grid.Column>어비스2종</Grid.Column>\r\n                        <Grid.Column width={2}>주간던전</Grid.Column>\r\n                        <Grid.Column>아르고스</Grid.Column>\r\n                        <Grid.Column>발탄</Grid.Column>\r\n                        <Grid.Column>비아키스</Grid.Column>\r\n                        <Grid.Column>쿠크세이튼</Grid.Column>\r\n                        <Grid.Column>아브렐슈드</Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                {userTodoData.map((item, idx) => (\r\n                  <TodoComponent\r\n                    listId={item._id}\r\n                    userTodoData={item}\r\n                    setUserTodoData={setUserTodoData}\r\n                    iconId={iconId}\r\n                    setIconId={setIconId}\r\n                    setChangedList={setChangedList}\r\n                    thisItemChanged={\r\n                      changedList.includes(item._id)\r\n                        ? \"thisItemChanged\"\r\n                        : \"thisItemNotChanged\"\r\n                    }\r\n                  />\r\n                ))}\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Container>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDo;\r\n","import React, { useState, useEffect, useRef, innerRef } from 'react';\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  List,\r\n  Button,\r\n} from 'semantic-ui-react';\r\nimport { characterCdn, characterKorean } from '../../_data/characterDefinition';\r\nimport axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { backendUrl } from '../Utils/ConstVar';\r\nimport cookie from 'js-cookie';\r\n\r\nimport './AddCharacter.css';\r\n\r\nfunction AddCharacter({\r\n  addCharacterModal,\r\n  closeAddCharacter,\r\n  userTodoData,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  limit,\r\n}) {\r\n  const [selectCharacterModal, setSelectCharacterModal] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState('');\r\n  const [characterName, setCharacterName] = useState('');\r\n  const [chaosRestValue, setChaosRestValue] = useState(0);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(0);\r\n  const [eponaRestValue, setEponaRestValue] = useState(0);\r\n  const regex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]+$/;\r\n  const regexNumber = /^[0-9]+$/;\r\n\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n\r\n  const closeSelectCharacter = () => setSelectCharacterModal(false);\r\n\r\n  const modalShow = () => {\r\n    setSelectCharacterModal(true);\r\n  };\r\n\r\n  const classSelected = (event) => {\r\n    let selectedClass;\r\n    if (event.target.className.indexOf('image') > 0) {\r\n      selectedClass = event.target.dataset.options;\r\n    } else {\r\n      selectedClass = event.target.className.split(' ')[2];\r\n    }\r\n    setSelectedCharacter(selectedClass);\r\n    setSelectCharacterModal(false);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeAddCharacterModal = () => {\r\n    setSelectedCharacter('');\r\n    setCharacterName('');\r\n    setChaosRestValue(0);\r\n    setGuardianRestValue(0);\r\n    setEponaRestValue(0);\r\n    closeAddCharacter();\r\n  };\r\n\r\n  const changeInputCharName = (event, data) => {\r\n    const insertedValue = data.value;\r\n    if (insertedValue.length === 0) {\r\n      setCharacterName('');\r\n      return;\r\n    }\r\n    if (!regex.test(insertedValue) || insertedValue.length > 12) return;\r\n    setCharacterName(insertedValue);\r\n  };\r\n\r\n  const changeRestValue = (event, data) => {\r\n    event.preventDefault();\r\n    if (!regexNumber.test(event.target.value)) return;\r\n    if (event.target.id === 'chaosChange') {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = chaosRestValue + (changedValue - chaosRestValue) * 10;\r\n      if (valueOutput < 0) setChaosRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValue(valueOutput);\r\n      else setChaosRestValue(100);\r\n    }\r\n    if (event.target.id === 'guardianChange') {\r\n      const changedValue = event.target.value;\r\n      const valueOutput =\r\n        guardianRestValue + (changedValue - guardianRestValue) * 10;\r\n      if (valueOutput < 0) setGuardianRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValue(valueOutput);\r\n      else setGuardianRestValue(100);\r\n    }\r\n    if (event.target.id === 'eponaChange') {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = eponaRestValue + (changedValue - eponaRestValue) * 10;\r\n      if (valueOutput < 0) setEponaRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValue(valueOutput);\r\n      else setEponaRestValue(100);\r\n    }\r\n  };\r\n\r\n  const confirmAddCharacter = () => {\r\n    const createdData = {\r\n      // _id: \"5d725a037b292f5f8ceff795\",\r\n      // user: \"5d7a514b5d2c12c7449be042\",\r\n      character: selectedCharacter,\r\n      characterName: characterName,\r\n      date: Date.now(),\r\n      // idx: 2,\r\n      chaosRestValue,\r\n      guardianRestValue,\r\n      eponaRestValue,\r\n      chaosDone: 0,\r\n      guardianDone: 0,\r\n      eponaDone: 0,\r\n      guardianWeeklyDone: 0,\r\n      abyssDungeon2: false,\r\n      // abyssDungeonWeekly: true,\r\n      // rehearsalAndDejavu: [\"kukuseitn\", \"abrel\"],\r\n      argos: false,\r\n      baltan: false,\r\n      biakiss: false,\r\n      kukuseitn: false,\r\n      abrel: false,\r\n      attributeChanged: false,\r\n      weeklyAttributeChanged: false,\r\n      createdAt: Date.now(),\r\n    };\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/homeworks`,\r\n        createdData,\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        // setUserTodoData([...userTodoData, response.data.data]);\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          userTodoData.length % limit === 0\r\n        ) {\r\n          viewPage(false, true, response.data.totalLength);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n        closeAddCharacterModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.error, {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        closeAddCharacterModal();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const classElements = document.getElementsByClassName(\r\n      'characterClassContent'\r\n    );\r\n    let eventAdd;\r\n    for (let index = 0; index < classElements.length; index++) {\r\n      eventAdd = classElements[index].addEventListener('click', (event) => {\r\n        classSelected(event);\r\n      });\r\n    }\r\n    return () => {\r\n      for (let index = 0; index < classElements.length; index++) {\r\n        classElements[index].removeEventListener('click', eventAdd);\r\n      }\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById('characterNameInputId');\r\n    const enterEvent = element.addEventListener('keypress', (event) => {\r\n      if (event.key === 'Enter') {\r\n        console.log(buttonRef.current);\r\n        if (buttonRef.current) buttonRef.current.click();\r\n      }\r\n    });\r\n    return () => {\r\n      element.removeEventListener('keypress', enterEvent);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size='mini'\r\n        open={addCharacterModal}\r\n        onClose={closeAddCharacterModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: 'dimgray' }}>\r\n          <Header className='itemHeader' as='h4'>\r\n            {!selectedCharacter ? (\r\n              <>\r\n                <span className='itemHeaderAttribute1'>클래스:</span>\r\n                <Icon\r\n                  name='add square'\r\n                  size='large'\r\n                  color='white'\r\n                  onClick={modalShow}\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className='itemHeaderAttribute2'>클래스:</span>\r\n                <span onClick={() => setSelectCharacterModal(true)}>\r\n                  <Image\r\n                    src={characterCdn[selectedCharacter]}\r\n                    size='mini'\r\n                    avatar\r\n                  />\r\n                  {characterKorean[selectedCharacter]}\r\n                </span>\r\n              </>\r\n            )}\r\n          </Header>\r\n          <Header className='itemHeader' as='h4'>\r\n            <span style={{ marginRight: '40px' }}>케릭명:</span>\r\n            <Input\r\n              transparent\r\n              placeholder='케릭터명'\r\n              style={{ color: 'white' }}\r\n              className='charNameInput'\r\n              value={characterName}\r\n              ref={inputRef}\r\n              id='characterNameInputId'\r\n              onChange={(event, data) => changeInputCharName(event, data)}\r\n            />\r\n          </Header>\r\n          <Header className='itemHeaderRest' as='h4'>\r\n            <List divided selection>\r\n              <List.Item>\r\n                <Label horizontal>카오스던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: 'white' }}\r\n                  className='charNameInput'\r\n                  value={chaosRestValue}\r\n                  id='chaosChange'\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>가디언던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: 'white' }}\r\n                  className='charNameInput'\r\n                  value={guardianRestValue}\r\n                  id='guardianChange'\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>에포나</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: 'white' }}\r\n                  className='charNameInput'\r\n                  value={eponaRestValue}\r\n                  id='eponaChange'\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n            </List>\r\n          </Header>\r\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Button\r\n              circular\r\n              color='google plus'\r\n              icon='cancel'\r\n              onClick={closeAddCharacterModal}\r\n            />\r\n            <Button\r\n              circular\r\n              color='twitter'\r\n              icon='check'\r\n              onClick={confirmAddCharacter}\r\n            />\r\n            <button\r\n              ref={buttonRef}\r\n              onClick={confirmAddCharacter}\r\n              style={{ display: 'none' }}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <Modal\r\n        open={selectCharacterModal}\r\n        onClose={closeSelectCharacter}\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n        className='classSelectModal'\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            backgroundColor: '#384862',\r\n            color: 'white',\r\n            borderBottom: '1px solid white',\r\n          }}\r\n        >\r\n          클래스\r\n        </Modal.Header>\r\n        <Modal.Content style={{ backgroundColor: '#384862', color: 'white' }}>\r\n          <Grid columns={6}>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  전사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column\r\n                className='characterClassContent berserker'\r\n                name='berserker'\r\n              >\r\n                <Image\r\n                  src={characterCdn.berserker}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='berserker'\r\n                />\r\n                버서커\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent warlord'>\r\n                <Image\r\n                  src={characterCdn.warlord}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='warlord'\r\n                />\r\n                워로드\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent destroyer'>\r\n                <Image\r\n                  src={characterCdn.destroyer}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='destroyer'\r\n                />\r\n                디스트로이어\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent holyknight'>\r\n                <Image\r\n                  src={characterCdn.holyknight}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='holyknight'\r\n                />\r\n                홀리나이트\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  무도가\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent battlemaster'>\r\n                <Image\r\n                  src={characterCdn.battlemaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='battlemaster'\r\n                />\r\n                배틀마스터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent infighter'>\r\n                <Image\r\n                  src={characterCdn.infighter}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='infighter'\r\n                />\r\n                인파이터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent soulmaster'>\r\n                <Image\r\n                  src={characterCdn.soulmaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='soulmaster'\r\n                />\r\n                기공사\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent lancemaster'>\r\n                <Image\r\n                  src={characterCdn.lancemaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='lancemaster'\r\n                />\r\n                창술사\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent striker'>\r\n                <Image\r\n                  src={characterCdn.striker}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='striker'\r\n                />\r\n                스트라이커\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  헌터\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent devilhunter'>\r\n                <Image\r\n                  src={characterCdn.devilhunter}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='devilhunter'\r\n                />\r\n                데빌헌터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent blaster'>\r\n                <Image\r\n                  src={characterCdn.blaster}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='blaster'\r\n                />\r\n                블래스터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent hawkeye'>\r\n                <Image\r\n                  src={characterCdn.hawkeye}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='hawkeye'\r\n                />\r\n                호크아이\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent scouter'>\r\n                <Image\r\n                  src={characterCdn.scouter}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='scouter'\r\n                />\r\n                스카우터\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent gunslinger'>\r\n                <Image\r\n                  src={characterCdn.gunslinger}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='gunslinger'\r\n                />\r\n                건슬링어\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  마법사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent summoner'>\r\n                <Image\r\n                  src={characterCdn.summoner}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='summoner'\r\n                />\r\n                서머너\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent arcana'>\r\n                <Image\r\n                  src={characterCdn.arcana}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='arcana'\r\n                />\r\n                아르카나\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent bard'>\r\n                <Image\r\n                  src={characterCdn.bard}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='bard'\r\n                />\r\n                바드\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent sorceress'>\r\n                <Image\r\n                  src={characterCdn.sorceress}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='sorceress'\r\n                />\r\n                소서리스\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className='characterClassHeader'>\r\n                <Header as='h4' style={{ marginTop: '6px', color: 'white' }}>\r\n                  암살자\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent blade'>\r\n                <Image\r\n                  src={characterCdn.blade}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='blade'\r\n                />\r\n                블레이드\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent demonic'>\r\n                <Image\r\n                  src={characterCdn.demonic}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='demonic'\r\n                />\r\n                데모닉\r\n              </Grid.Column>\r\n              <Grid.Column className='characterClassContent reaper'>\r\n                <Image\r\n                  src={characterCdn.reaper}\r\n                  size='mini'\r\n                  avatar\r\n                  data-options='reaper'\r\n                />\r\n                리퍼\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Modal, Image, Button } from \"semantic-ui-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { characterCdn } from \"../../_data/characterDefinition\";\r\n\r\nfunction RestValue({ item, userTodoData, setUserTodoData }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(item._id);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowModal(true);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  // if you use setShowModal directly in Modal onClose, react will throw error\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [chaosRestValue, setChaosRestValue] = useState(item.chaosRestValue);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValue, setEponaRestValue] = useState(item.eponaRestValue);\r\n\r\n  const [chaosRestValueChange, setChaosRestValueChange] = useState(\r\n    item.chaosRestValue\r\n  );\r\n  const [guardianRestValueChange, setGuardianRestValueChange] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValueChange, setEponaRestValueChange] = useState(\r\n    item.eponaRestValue\r\n  );\r\n\r\n  const valueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"chaosChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        chaosRestValueChange + (changedValue - chaosRestValueChange) * 10;\r\n      if (valueOutput < 0) setChaosRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValueChange(valueOutput);\r\n      else setChaosRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"guardianChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        guardianRestValueChange + (changedValue - guardianRestValueChange) * 10;\r\n      if (valueOutput < 0) setGuardianRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValueChange(valueOutput);\r\n      else setGuardianRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"eponaChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        eponaRestValueChange + (changedValue - eponaRestValueChange) * 10;\r\n      if (valueOutput < 0) setEponaRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValueChange(valueOutput);\r\n      else setEponaRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const confirmValue = () => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === item._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"chaosRestValue\"] = chaosRestValueChange;\r\n    newArr[indexValue][\"guardianRestValue\"] = guardianRestValueChange;\r\n    newArr[indexValue][\"eponaRestValue\"] = eponaRestValueChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column id={item._id}>\r\n        카던: {item.chaosRestValue}\r\n        <br />\r\n        가디언: {item.guardianRestValue}\r\n        <br />\r\n        에포나: {item.eponaRestValue}\r\n      </Grid.Column>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Header>\r\n          <Image src={characterCdn[item.character]} size=\"mini\" avatar />\r\n          {item.characterName}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextField\r\n            id=\"chaosChange\"\r\n            type=\"number\"\r\n            label=\"카오스던전\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={chaosRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"guardianChange\"\r\n            type=\"number\"\r\n            label=\"가디언토벌\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={guardianRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"eponaChange\"\r\n            type=\"number\"\r\n            label=\"에포나\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={eponaRestValueChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={closeModal}>\r\n            취소\r\n          </Button>\r\n          <Button positive onClick={confirmValue}>\r\n            확인\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestValue;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Image, Icon, Popup } from 'semantic-ui-react';\r\nimport { characterCdn } from '../../_data/characterDefinition';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\nimport './CharacterAvatarCss.css';\r\nimport { backendUrl } from '../Utils/ConstVar';\r\n\r\nfunction CharacterAvatar({\r\n  itemId,\r\n  character,\r\n  characterName,\r\n  attributeChanged,\r\n  weeklyAttributeChanged,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  alarmCharacter,\r\n  limit,\r\n  dontChange,\r\n  userTodoData,\r\n  setUserTodoData,\r\n}) {\r\n  const [deleteIcon, showDeleteIcon] = useState(false);\r\n\r\n  const [showDontChange, setShowDontChange] = useState(false);\r\n\r\n  const [dontChangeState, setDontChangeState] = useState(dontChange);\r\n\r\n  const [alarmState, setAlarmState] = useState('');\r\n\r\n  const deleteCharacter = (id) => {\r\n    // console.log(id);\r\n    // const indexValue = userTodoData.findIndex((anItem) => {\r\n    //   return anItem._id === id;\r\n    // });\r\n    // let newArr = [...userTodoData];\r\n    // newArr.splice(indexValue, 1);\r\n    // setUserTodoData(newArr);\r\n    // showDeleteIcon(false);\r\n\r\n    axios\r\n      .delete(\r\n        `${backendUrl}/loado/api/homeworks/${itemId}`,\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          response.data.totalLength % limit === 0\r\n        ) {\r\n          viewPage(true, false);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  const dontChangeCharacter = (id) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].dontChange = !dontChange;\r\n    newArr[indexValue]['attributeChanged'] = true;\r\n    setDontChangeState(!dontChangeState);\r\n    setUserTodoData(newArr);\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  // 원래 1회 실행으로 useEffect에 []를 넣었지만 이걸 넣으니 되돌아가기가 안됨... 그래서 [] 빼보니 됨\r\n  useEffect(() => {\r\n    let element = document.getElementById(`${itemId}_${characterName}`);\r\n    const rightclickEvent = element.addEventListener('contextmenu', (event) => {\r\n      event.preventDefault();\r\n      setShowDontChange(!showDontChange);\r\n    });\r\n    return () => {\r\n      element.removeEventListener('contextmenu', rightclickEvent);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column>\r\n        <Image\r\n          src={characterCdn[character]}\r\n          size='mini'\r\n          avatar\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n        />\r\n        <span\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n          className={alarmCharacter ? 'alarmLight' : ''}\r\n          id={`${itemId}_${characterName}`}\r\n          data-options={itemId}\r\n        >\r\n          {characterName}\r\n        </span>\r\n        {(attributeChanged || weeklyAttributeChanged) && (\r\n          <Icon\r\n            name='edit'\r\n            size='small'\r\n            style={{ color: 'springgreen', marginLeft: '3px' }}\r\n          />\r\n        )}\r\n        {deleteIcon && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name='trash'\r\n                color='red'\r\n                style={{ cursor: 'pointer', marginLeft: '1px' }}\r\n                onClick={() => deleteCharacter(itemId)}\r\n              />\r\n            }\r\n            content={`'${characterName}'에 대한 정보를 삭제하시겠습니까?`}\r\n          />\r\n        )}\r\n        {showDontChange && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name={dontChangeState ? 'bell' : 'bell slash'}\r\n                color='yellow'\r\n                style={{ cursor: 'pointer', marginLeft: '1px' }}\r\n                onClick={() => dontChangeCharacter(itemId)}\r\n              />\r\n            }\r\n            content={\r\n              dontChangeState\r\n                ? `'${characterName}' 휴식게이지 고정취소`\r\n                : `'${characterName}' 휴식게이지 고정`\r\n            }\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterAvatar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextArea, Icon } from 'semantic-ui-react';\r\n\r\nfunction PerIdNote({ item, userTodoData, setUserTodoData }) {\r\n  const [showTextArea, setShowTextArea] = useState(false);\r\n  const [textValue, setTextValue] = useState(item.note);\r\n\r\n  const dontChangeCharacter = (id, theText) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue]['note'] = theText;\r\n    newArr[indexValue]['attributeChanged'] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  const changeText = (event) => {\r\n    console.log(event);\r\n    if (event.target.value.length > 20) return;\r\n    setTextValue(event.target.value);\r\n    dontChangeCharacter(item._id, event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!showTextArea ? (\r\n        <>\r\n          {item.note}{' '}\r\n          <Icon\r\n            inverted\r\n            name='pencil square'\r\n            color='pink'\r\n            onClick={() => setShowTextArea(!showTextArea)}\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n        </>\r\n      ) : (\r\n        <TextArea value={textValue} onChange={(event) => changeText(event)} />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport default PerIdNote;\r\n","import React, { useState } from 'react';\r\nimport { Grid, Dropdown, Checkbox } from 'semantic-ui-react';\r\n\r\nfunction changeArr(arr, match, dataValue, type) {\r\n  const indexValue = arr.findIndex((anItem) => {\r\n    return anItem._id === match;\r\n  });\r\n  let newArr = [...arr];\r\n  newArr[indexValue][type] = dataValue;\r\n  newArr[indexValue]['attributeChanged'] = true;\r\n  return newArr;\r\n}\r\n\r\nfunction ChaosDunValue({\r\n  chaosItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${chaosItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${chaosItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${chaosItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [chaosData, setChaosData] = useState(chaosItem.chaosDone);\r\n\r\n  // 체크박스로 숙제를 체크하고 싶다는 피드백에 따라 작성\r\n  const [chaosDataChecked, setChaosDataChecked] = useState(\r\n    chaosItem.chaosDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setChaosData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      chaosItem._id,\r\n      data.value,\r\n      'chaosDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setChaosDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={chaosData}\r\n        />\r\n      ) : (\r\n        // 체크박스용\r\n        <Checkbox\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={chaosDataChecked}\r\n          value={chaosDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction GuardianDunValue({\r\n  guardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${guardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${guardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${guardianItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [guardianData, setGuardianData] = useState(guardianItem.guardianDone);\r\n\r\n  const [guardianDataChecked, setGuardianDataChecked] = useState(\r\n    guardianItem.guardianDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setGuardianData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      guardianItem._id,\r\n      data.value,\r\n      'guardianDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={guardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={guardianDataChecked}\r\n          value={guardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction EponaValue({\r\n  eponaItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${eponaItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${eponaItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${eponaItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${eponaItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [eponaData, setEponaData] = useState(eponaItem.eponaDone);\r\n\r\n  const [eponaDataChecked, setEponaDataChecked] = useState(\r\n    eponaItem.eponaDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setEponaData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      eponaItem._id,\r\n      data.value,\r\n      'eponaDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setEponaDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='epona'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={eponaData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='epona'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={eponaDataChecked}\r\n          value={eponaDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\n// Currently not used for nicer view\r\nfunction WeeklyGuardian({\r\n  weeklyGuardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${weeklyGuardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${weeklyGuardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${weeklyGuardianItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${weeklyGuardianItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [weeklyGuardianData, setWeeklyGuardianData] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone\r\n  );\r\n\r\n  const [weeklyGuardianDataChecked, setWeeklyGuardianDataChecked] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setWeeklyGuardianData(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === weeklyGuardianItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].guardianWeeklyDone = data.value;\r\n    newArr[indexValue]['attributeChanged'] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setWeeklyGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={weeklyGuardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={weeklyGuardianDataChecked}\r\n          value={weeklyGuardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport { ChaosDunValue, GuardianDunValue, EponaValue, WeeklyGuardian };\r\n","import React, { useState } from 'react';\r\nimport { Grid, Checkbox, Dropdown, Label } from 'semantic-ui-react';\r\n\r\nconst changeDatafunction = (\r\n  event,\r\n  data,\r\n  setItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  findIndexItem,\r\n  changeItem\r\n) => {\r\n  setItem(data.checked);\r\n  const indexValue = userTodoData.findIndex((anItem) => {\r\n    return anItem._id === findIndexItem._id;\r\n  });\r\n  let newArr = [...userTodoData];\r\n  newArr[indexValue][changeItem] = data.checked;\r\n  let attrChanged =\r\n    changeItem === 'abyssDungeonWeekly'\r\n      ? 'weeklyAttributeChanged'\r\n      : 'attributeChanged';\r\n  newArr[indexValue][attrChanged] = true;\r\n  setUserTodoData(newArr);\r\n};\r\n\r\nfunction AbyssDun2({ abyssDun2Item, userTodoData, setUserTodoData }) {\r\n  const [abyssDun2, setAbyssDun2] = useState(abyssDun2Item.abyssDungeon2);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='AbyssDun2'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbyssDun2,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abyssDun2Item,\r\n            'abyssDungeon2'\r\n          )\r\n        }\r\n        checked={abyssDun2}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbyssRaid({ idx, abyssRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abyssRaid, setAbyssRaid] = useState(abyssRaidItem.abyssDungeonWeekly);\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <Grid.Column style={{ display: 'flex' }}>\r\n        <Checkbox\r\n          name='AbyssRaid'\r\n          onChange={(event, data) =>\r\n            changeDatafunction(\r\n              event,\r\n              data,\r\n              setAbyssRaid,\r\n              userTodoData,\r\n              setUserTodoData,\r\n              abyssRaidItem,\r\n              'abyssDungeonWeekly'\r\n            )\r\n          }\r\n          checked={abyssRaid}\r\n        />\r\n      </Grid.Column>\r\n    )\r\n  );\r\n}\r\n\r\nfunction RehearsalAndDejavu({\r\n  rehearsalAndDejavuItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  idx,\r\n}) {\r\n  const options_combo1 = [\r\n    { key: 'kukuseitn', text: '쿠크리허설', value: 'kukuseitn' },\r\n    { key: 'abrel', text: '아브렐데쟈뷰', value: 'abrel' },\r\n  ];\r\n  const [rehearsalAndDejavu, setRehearsalAndDejavu] = useState(\r\n    rehearsalAndDejavuItem.rehearsalAndDejavu\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setRehearsalAndDejavu(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === rehearsalAndDejavuItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].rehearsalAndDejavu = data.value;\r\n    newArr[indexValue].weeklyAttributeChanged = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder='쿠크/아브렐'\r\n            fluid\r\n            multiple\r\n            selection\r\n            options={options_combo1}\r\n            value={rehearsalAndDejavu}\r\n            onChange={(event, data) => changeData(event, data)}\r\n          />\r\n        </Grid.Column>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nfunction ArgosRaid({ argosRaidItem, userTodoData, setUserTodoData }) {\r\n  const [argosRaid, setArgosRaid] = useState(argosRaidItem.argos);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='ArgosRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setArgosRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            argosRaidItem,\r\n            'argos'\r\n          )\r\n        }\r\n        checked={argosRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BaltanRaid({ baltanRaidItem, userTodoData, setUserTodoData }) {\r\n  const [baltanRaid, setBaltanRaid] = useState(baltanRaidItem.baltan);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='BaltanRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBaltanRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            baltanRaidItem,\r\n            'baltan'\r\n          )\r\n        }\r\n        checked={baltanRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BiakissRaid({ biakissRaidItem, userTodoData, setUserTodoData }) {\r\n  const [biakissRaid, setBiakissRaid] = useState(biakissRaidItem.biakiss);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='BiakissRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBiakissRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            biakissRaidItem,\r\n            'biakiss'\r\n          )\r\n        }\r\n        checked={biakissRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction KukseitnRaid({ kukseitnRaidItem, userTodoData, setUserTodoData }) {\r\n  const [kukseitnRaid, setKukseitnRaid] = useState(kukseitnRaidItem.kukuseitn);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='KukseitnRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setKukseitnRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            kukseitnRaidItem,\r\n            'kukuseitn'\r\n          )\r\n        }\r\n        checked={kukseitnRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbrelRaid({ abrelRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abrelRaid, setAbrelRaid] = useState(abrelRaidItem.abrel);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name='AbrelRaid'\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbrelRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abrelRaidItem,\r\n            'abrel'\r\n          )\r\n        }\r\n        checked={abrelRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport {\r\n  AbyssDun2,\r\n  AbyssRaid,\r\n  RehearsalAndDejavu,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nfunction AddAndChange({ addCharacter, applyChanges }) {\r\n  return (\r\n    <div className=\"headerValueEnd\">\r\n      <Button inverted color=\"olive\" onClick={addCharacter}>\r\n        케릭터 추가\r\n      </Button>\r\n      <Button inverted color=\"red\" onClick={applyChanges}>\r\n        변경사항 저장\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAndChange;\r\n","import React from \"react\";\r\nimport { Pagination } from \"semantic-ui-react\";\r\n\r\nfunction PaginationComp({ pagination, activePage, pageChange }) {\r\n  return (\r\n    <div className=\"headerValueCenter\">\r\n      <Pagination\r\n        // defaultActivePage={1}\r\n        firstItem={null}\r\n        lastItem={null}\r\n        pointing\r\n        secondary\r\n        totalPages={pagination}\r\n        activePage={activePage}\r\n        onPageChange={(event, data) => pageChange(event, data)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginationComp;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction SettingChange({ viewByCheckBox, setViewByCheckBox }) {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  return (\r\n    <div className=\"headerValueStart\">\r\n      <Header size=\"medium\" style={{ color: \"white\", paddingTop: \"5px\" }}>\r\n        {today}{\" \"}\r\n        <Label\r\n          as=\"a\"\r\n          basic\r\n          image\r\n          style={{ marginLeft: \"30px\" }}\r\n          onClick={() => setViewByCheckBox(!viewByCheckBox)}\r\n        >\r\n          {!viewByCheckBox ? (\r\n            <>\r\n              <Icon name=\"checkmark box\" />로 보기\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Icon name=\"angle double down\" />로 보기\r\n            </>\r\n          )}\r\n        </Label>\r\n      </Header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingChange;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction AlarmAndNote({\r\n  alarmTrue,\r\n  alarmRestValue,\r\n  userTodoData,\r\n  showNote,\r\n  setShowNote,\r\n}) {\r\n  return (\r\n    <Header\r\n      as=\"h4\"\r\n      style={{\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        padding: \".78571429em 1.5em .78571429em\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={alarmTrue ? \"alarm\" : \"alarm mute\"}\r\n          onClick={() => alarmRestValue(userTodoData)}\r\n        />\r\n        {\"  //  \"}\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={!showNote ? \"sticky note outline\" : \"angle double up\"}\r\n          onClick={() => setShowNote(!showNote)}\r\n        />\r\n      </div>\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default AlarmAndNote;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CharacterToDo.css\";\r\nimport AddCharacter from \"../Utils/AddCharacter\";\r\n\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Container,\r\n  Icon,\r\n  Dimmer,\r\n  Loader,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\nimport RestValue from \"../GridItem/RestValue\";\r\nimport CharacterAvatar from \"./CharacterAvatar\";\r\nimport PerIdNote from \"./PerIdNote\";\r\nimport {\r\n  ChaosDunValue,\r\n  GuardianDunValue,\r\n  EponaValue,\r\n  WeeklyGuardian,\r\n} from \"../GridItem/DungeonAndEpona\";\r\nimport {\r\n  AbyssDun2,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n} from \"../GridItem/AbyssAndRaid\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { backendUrl, axiosConfigAuth } from \"../Utils/ConstVar\";\r\nimport {\r\n  viewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n} from \"../Utils/ViewDataUtil\";\r\nimport AddAndChange from \"../HomeSubComp/AddAndChange\";\r\nimport PaginationComp from \"../HomeSubComp/PaginationComp\";\r\nimport SettingChange from \"../HomeSubComp/SettingChange\";\r\nimport AlarmAndNote from \"../HomeSubComp/AlarmAndNote\";\r\n\r\nfunction CharacterToDoRow({ limit, type }) {\r\n  const todayDate = new Date(Date.now());\r\n\r\n  const [userTodoData, setUserTodoData] = useState([]);\r\n\r\n  const [addCharacterModal, setAddCharacterModal] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const [pagination, setPagination] = useState(0);\r\n\r\n  const [viewByCheckBox, setViewByCheckBox] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const addCharacter = () => {\r\n    setAddCharacterModal(true);\r\n  };\r\n\r\n  const closeAddCharacter = () => {\r\n    setAddCharacterModal(false);\r\n  };\r\n\r\n  const viewPage = async (minusOne = false, plusOne = false, plusPage = 0) => {\r\n    setLoading(true);\r\n    setUserTodoData([]);\r\n\r\n    const resultData = await viewDataMain(\r\n      minusOne,\r\n      plusOne,\r\n      plusPage,\r\n      limit,\r\n      activePage,\r\n      setActivePage,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    if (resultData.success) {\r\n      setUserTodoData(resultData.viewData.data);\r\n      setPagination(resultData.setPage);\r\n    } else {\r\n      toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const applyChanges = async () => {\r\n    setLoading(true);\r\n\r\n    let submitData = userTodoData.filter(\r\n      (item) => item.attributeChanged === true\r\n    );\r\n\r\n    const applyResult = await applyChangesUtil(\r\n      submitData,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    setLoading(false);\r\n    if (applyResult) {\r\n      toastMessage(\"일부 변경사항이 제대로 반영되지 않았습니다\", \"error\");\r\n    }\r\n    viewPage();\r\n  };\r\n\r\n  const pageChange = async (event, data) => {\r\n    setLoading(true);\r\n    setActivePage(data.activePage);\r\n\r\n    // 샙트님 이거 2페이지에 있는 캐릭터 바꾸면 1페이지 같은 자리 있는것두 바뀌는거 같아여\r\n    // 이거 안 해주면 현재 페이지에서 바꾼 ID위치의 정보가 그대로 남아서 사용자에게 모든 페이지의 변경사항이 반영되는 것처럼 보임\r\n    setUserTodoData([]);\r\n\r\n    await axios\r\n      .get(\r\n        `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${data.activePage}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // for alarm animation\r\n  const [alarmTrue, setAlarmTrue] = useState(true);\r\n\r\n  // for note per list\r\n  const [showNote, setShowNote] = useState(false);\r\n\r\n  const alarmRestValue = (todoList) => {\r\n    const alarmDataResult = alarmRestValueUtil(todoList, alarmTrue);\r\n    setUserTodoData(alarmDataResult.alarmList);\r\n    setAlarmTrue(alarmDataResult.alarm);\r\n  };\r\n\r\n  // if no user cookie then redirect to login page\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    !loginCookie && history.push(\"/login\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    viewPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Segment\r\n          className=\"fullPage\"\r\n          style={{ height: \"94vh\", border: \"none\" }}\r\n        >\r\n          <Dimmer active>\r\n            <Loader size=\"big\">로딩중</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      ) : (\r\n        <Grid className=\"fullPage\">\r\n          <Container\r\n            style={{ width: \"95%\", marginLeft: \"2.5%\", marginRight: \"2.5%\" }}\r\n          >\r\n            <Grid.Column width={16}>\r\n              <Segment\r\n                basic\r\n                className=\"contentHeader\"\r\n                style={{ marginBottom: \"0px\" }}\r\n              >\r\n                <SettingChange\r\n                  viewByCheckBox={viewByCheckBox}\r\n                  setViewByCheckBox={setViewByCheckBox}\r\n                />\r\n                <PaginationComp\r\n                  pagination={pagination}\r\n                  activePage={activePage}\r\n                  pageChange={pageChange}\r\n                />\r\n                <AddAndChange\r\n                  addCharacter={addCharacter}\r\n                  applyChanges={applyChanges}\r\n                />\r\n              </Segment>\r\n              <Segment\r\n                basic\r\n                style={{ backgroundColor: \"dimgray\", marginTop: \"0px\" }}\r\n              >\r\n                <Grid columns={limit + 1}>\r\n                  <Grid.Row\r\n                    style={{ borderBottom: !showNote && \"0.05rem inset ivory\" }}\r\n                  >\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <AlarmAndNote\r\n                        alarmTrue={alarmTrue}\r\n                        alarmRestValue={alarmRestValue}\r\n                        userTodoData={userTodoData}\r\n                        showNote={showNote}\r\n                        setShowNote={setShowNote}\r\n                      />\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <CharacterAvatar\r\n                        itemId={item._id}\r\n                        character={item.character}\r\n                        characterName={item.characterName}\r\n                        attributeChanged={item.attributeChanged}\r\n                        weeklyAttributeChanged={item.weeklyAttributeChanged}\r\n                        axiosConfigAuth={axiosConfigAuth}\r\n                        viewPage={viewPage}\r\n                        alarmCharacter={item.alarmCharacter}\r\n                        limit={limit}\r\n                        dontChange={item.dontChange}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  {showNote && (\r\n                    <Grid.Row\r\n                      style={{\r\n                        padding: 0,\r\n                        borderBottom: \"0.05rem inset ivory\",\r\n                        paddingBottom: \"7px\",\r\n                      }}\r\n                    >\r\n                      <Grid.Column />\r\n                      {userTodoData.map((item, idx) => (\r\n                        <PerIdNote\r\n                          item={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                  )}\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <Icon name=\"calendar check outline\" />\r\n                      휴식게이지\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <RestValue\r\n                        item={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/chaosDun.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>카오스던전</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <ChaosDunValue\r\n                        chaosItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/guardianDun.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>가디언토벌</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <GuardianDunValue\r\n                        guardianItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/epona.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>에포나</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <EponaValue\r\n                        eponaItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/guardianDun.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>주간가디언</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <WeeklyGuardian\r\n                        weeklyGuardianItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/abyss2types.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>오레하2종</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbyssDun2\r\n                        abyssDun2Item={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  {/* 원정대 주간 컨탠츠는 안 보이게 하기로 결정 */}\r\n                  {/* <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/abyssWeekly.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>어비스레이드</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbyssRaid\r\n                        idx={idx}\r\n                        abyssRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/rehearsal.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>리허설, 데쟈뷰</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <RehearsalAndDejavu\r\n                        rehearsalAndDejavuItem={item}\r\n                        idx={idx}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row> */}\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/argos.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>아르고스</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <ArgosRaid\r\n                        argosRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow baltanRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/baltan.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>발탄</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <BaltanRaid\r\n                        baltanRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/biakiss.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>비아키스</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <BiakissRaid\r\n                        biakissRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/kukuseitn.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>쿠크세이튼</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <KukseitnRaid\r\n                        kukseitnRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"abrelRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/abrel.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>아브렐슈드</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbrelRaid\r\n                        abrelRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Container>\r\n        </Grid>\r\n      )}\r\n\r\n      {addCharacterModal && (\r\n        <AddCharacter\r\n          addCharacterModal={addCharacterModal}\r\n          closeAddCharacter={closeAddCharacter}\r\n          userTodoData={userTodoData}\r\n          axiosConfigAuth={axiosConfigAuth}\r\n          viewPage={viewPage}\r\n          limit={limit}\r\n        />\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDoRow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { backendUrl, axiosConfig } from \"../Utils/ConstVar\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState(\"로그인이 필요합니다\");\r\n  const [user, setUser] = useState({\r\n    id: cookie.get(\"loginId\") ? cookie.get(\"loginId\") : \"\",\r\n    password: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/login`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set(\"loadoUserToken\", token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set(\"loadoUserCookie\", JSON.stringify(userCookie));\r\n          history.push(\"/userhomework\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.request);\r\n        // console.log(err.response);\r\n        // console.log(err.message);\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    loginCookie && history.push(\"/userhomework\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\", marginTop: \"0\", backgroundColor: \"dimgray\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as=\"h2\" textAlign=\"center\" style={{ color: \"white\" }}>\r\n            <Image src=\"https://react.semantic-ui.com/logo.png\" />{\" \"}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size=\"large\" onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"ID\"\r\n                name=\"id\"\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\r\n                로그인\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            계정이 없으신가요?{\" \"}\r\n            <a href=\"#\" onClick={() => history.push(\"/register\")}>\r\n              가입\r\n            </a>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { backendUrl, axiosConfig } from '../Utils/ConstVar';\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState('회원가입');\r\n  const [user, setUser] = useState({\r\n    id: '',\r\n    password: '',\r\n    name: '',\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/register`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n          name: user.name,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set('loadoUserToken', token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set('loadoUserCookie', JSON.stringify(userCookie));\r\n          history.push('/userhomework');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        textAlign='center'\r\n        style={{ height: '100vh', marginTop: '0', backgroundColor: 'dimgray' }}\r\n        verticalAlign='middle'\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as='h2' textAlign='center' style={{ color: 'white' }}>\r\n            <Image src='https://react.semantic-ui.com/logo.png' />{' '}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size='large' onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon='user'\r\n                iconPosition='left'\r\n                placeholder='ID'\r\n                name='id'\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='lock'\r\n                iconPosition='left'\r\n                placeholder='비밀번호'\r\n                type='password'\r\n                name='password'\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon='quote left'\r\n                iconPosition='left'\r\n                placeholder='이름'\r\n                name='name'\r\n                onChange={handleChange}\r\n                value={user.name}\r\n              />\r\n\r\n              <Button color='teal' fluid size='large' type='submit'>\r\n                가입\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            비밀번호를 잊어버리시면 복구가 불가능합니다\r\n            <br />\r\n            [비밀번호는 암호화되어 저장됩니다]\r\n            <br />\r\n            [예시: .....APvs6TgQOG5d8byxYdLJOD0O6Am.....]\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import \"./App.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport NavHeader from \"./Components/Nav/NavHeader\";\r\nimport CharacterToDo from \"./Components/Home/CharacterToDo\";\r\nimport CharacterToDoRow from \"./Components/Home/CharacterToDoRow\";\r\nimport Login from \"./Components/Home/Login\";\r\nimport Register from \"./Components/Home/Register\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { createMedia } from \"@artsy/fresnel\";\r\n\r\nconst AppMedia = createMedia({\r\n  breakpoints: { zero: 0, mobile: 549, tablet: 850, computer: 1080 },\r\n});\r\n\r\nconst mediaStyles = AppMedia.createMediaStyle();\r\nconst { Media, MediaContextProvider } = AppMedia;\r\n\r\nfunction App() {\r\n  return (\r\n    <MediaContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/userhomework\">\r\n            <>\r\n              <Grid stackable style={{ border: \"none\" }}>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    background: \"lightCoral\",\r\n                  }}\r\n                >\r\n                  <Grid.Column style={{ border: \"none\" }}>\r\n                    <NavHeader />\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    paddingTop: \"0rem\",\r\n                    height: \"94vh\",\r\n                    backgroundColor: \"#384862\",\r\n                  }}\r\n                >\r\n                  <Grid.Column>\r\n                    <Media between={[\"zero\", \"tablet\"]}>\r\n                      <CharacterToDoRow limit={4} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media between={[\"tablet\", \"computer\"]}>\r\n                      <CharacterToDoRow limit={6} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media greaterThanOrEqual=\"computer\">\r\n                      <CharacterToDoRow limit={8} type=\"computer\" />\r\n                    </Media>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </>\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </MediaContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}