{"version":3,"sources":["pages/components/util/ConstVar.js","pages/components/updatehistory/HistoryModal.js","_data/characterDefinition.js","pages/components/util/ViewDataUtil.js","pages/components/characterRelated/ChangePosition.js","pages/components/util/uploadPicToCloudinary.js","pages/components/util/ProfileModal.js","pages/navHeader/web/NavHeader.js","pages/navHeader/web/index.js","pages/navHeader/mobile/NavHeaderMobile.js","pages/navHeader/mobile/index.js","pages/components/characterRelated/AddCharacter.js","pages/components/userHomework/RestValue.js","pages/components/characterRelated/CharacterAvatar.js","pages/components/userHomework/PerIdNote.js","pages/components/userHomework/DungeonAndEponaUtil.js","_data/contentDefinition.js","pages/components/userHomework/DungeonAndEpona.js","pages/components/userHomework/AbyssAndRaid.js","pages/components/userHomework/WeeklyRaidContents.js","pages/components/userHomework/AddAndChange.js","pages/components/userHomework/PaginationComp.js","pages/components/userHomework/SettingChange.js","pages/components/userHomework/AlarmAndNote.js","pages/userHomework/userHomework.js","pages/userHomework/index.js","pages/components/characterRelated/AddCharacterMobile.js","pages/components/userHomework/RestValueMobile.js","pages/components/userHomework/AlarmAndNoteMobile.js","pages/components/util/ContentDefinition.js","pages/userHomeworkMobile/CharacterToDoRowMobile.js","pages/userHomeworkMobile/index.js","pages/login/Login.js","pages/login/index.js","pages/register/Register.js","pages/register/index.js","pages/dashboard/dashboard.js","pages/dashboard/index.js","_data/itemImageMatch.js","pages/components/ItemPrice/AddItemToView.js","pages/components/ItemPrice/MonthlyTrendView.js","pages/components/ItemPrice/FullTrendView.js","pages/components/ItemPrice/ConditionSegment.js","pages/itemPrice/ItemPrice.js","pages/itemPrice/index.js","App.js","index.js"],"names":["backendUrl","process","axiosConfig","headers","axiosConfigAuth","userCookie","Authorization","numberWithCommas","x","toLocaleString","getLineColorFromImage","array","Math","floor","random","length","HistoryModal","showUpdateHistoryModal","setShowUpdateHistoryModal","setNoticeAlert","changeNotificationToFalse","useEffect","Modal","open","onClose","closeOnDimmerClick","Header","className","style","backgroundColor","color","borderBottom","Content","Grid","Row","padding","Column","width","characterCdn","berserker","warlord","destroyer","holyknight","battlemaster","infighter","soulmaster","lancemaster","striker","devilhunter","blaster","hawkeye","scouter","gunslinger","summoner","arcana","bard","sorceress","blade","demonic","reaper","drawer","characterKorean","viewDataMain","limit","theActivePage","setActivePage","a","searchString","axios","get","then","response","totalLength","data","setPage","viewData","success","catch","err","axiosResult","allViewDataMain","dataLength","applyChangesUtil","submitData","errorOccured","index","put","_id","getUserCheckBoxConfiguration","viewByCheckBox","result","changeUserCheckBoxConfiguration","alarmRestValueUtil","todoList","alarmTrue","alarmList","alarm","map","item","idx","chaosRestValue","guardianRestValue","eponaRestValue","alarmCharacter","toastMessage","msg","type","deviceType","alert","toast","error","position","POSITION","TOP_LEFT","info","BOTTOM_LEFT","updateProfilePic","profilePic","post","waitForSomeTime","timeToDelay","Promise","resolve","setTimeout","getLoadoLogs","ChangePosition","dragStartIndex","changeRowModal","setChangeRowModal","useState","userTodoData","setUserTodoData","labelText","setLabelText","changedIndexArr","setChangedIndexArr","saveChanges","distinctIndexData","Array","from","Set","sendData","filter","includes","cookie","window","location","reload","resultData","callData","dragStart","this","getAttribute","dragOver","e","preventDefault","dragDrop","dragEndIndex","fromIndex","toIndex","itemFrom","itemTo","itemFromIdx","itemToIdx","push","swapItems","classList","remove","dragEnter","add","dragLeave","draggables","document","querySelectorAll","forEach","draggable","addEventListener","removeEventListener","size","Label","as","ribbon","marginLeft","onClick","columns","sort","b","marginRight","Image","avatar","src","character","characterName","uploadPic","media","form","FormData","append","res","url","ProfileModal","profileModal","setProfileModal","cropper","setCropper","setMedia","mediaPreview","setMediaPreview","statusText","setStatusText","inputRef","useRef","cropperStyle","height","uploadResult","getCroppedCanvas","toDataURL","picUrl","destroy","Icon","name","cursor","current","click","ref","onChange","target","files","value","URL","createObjectURL","display","accept","image","cropBoxResizable","zoomable","highlight","responsive","guides","dragMode","initialAspectRatio","preview","viewMode","minCropBoxHeight","minCropBoxWidth","background","autoCropArea","checkOrientation","onInitialized","margin","content","overflow","boxSizing","Actions","Button","title","icon","circular","reset","setDragMode","negative","positive","NavHeader","userIdString","userValue","JSON","parse","history","useHistory","accountUser","setAccountUser","setOpen","openAdditionalMenu","setOpenAdditionalMenu","noticeAlert","user","newNotice","checkNewlyUpdate","Menu","borderRadius","marginBottom","borderless","Item","id","fontStyle","Popup","on","onOpen","trigger","vertical","userName","Card","Divider","hidden","Description","fontWeight","userId","set","NavHeaderMobile","restValueBatch","AddCharacter","addCharacterModal","closeAddCharacter","viewPage","activePage","selectCharacterModal","setSelectCharacterModal","selectedCharacter","setSelectedCharacter","setCharacterName","setChaosRestValue","setGuardianRestValue","setEponaRestValue","regex","regexNumber","buttonRef","classSelected","event","selectedClass","indexOf","dataset","options","split","focus","closeAddCharacterModal","changeRestValue","test","changedValue","valueOutput","confirmAddCharacter","createdData","date","Date","now","chaosDone","guardianDone","eponaDone","guardianWeeklyDone","abyssDungeon2","argos","baltan","biakiss","kukuseitn","abrel","attributeChanged","weeklyAttributeChanged","createdAt","eventAdd","classElements","getElementsByClassName","element","getElementById","enterEvent","key","closeIcon","Input","transparent","placeholder","insertedValue","changeInputCharName","List","divided","selection","horizontal","justifyContent","marginTop","autoClose","RestValue","showModal","setShowModal","rightclickEvent","closeModal","chaosRestValueChange","setChaosRestValueChange","guardianRestValueChange","setGuardianRestValueChange","eponaRestValueChange","setEponaRestValueChange","valueChange","TextField","label","indexValue","findIndex","anItem","newArr","CharacterAvatar","itemId","dontChange","deleteIcon","showDeleteIcon","showDontChange","setShowDontChange","dontChangeState","setDontChangeState","delete","console","log","message","dontChangeCharacter","PerIdNote","showTextArea","setShowTextArea","note","textValue","setTextValue","changeText","theText","TextArea","inverted","changeArr","arr","match","dataValue","ChaosDunValue","chaosItem","text","chaosData","setChaosData","chaosDataChecked","setChaosDataChecked","changeData","paddingTop","Checkbox","checked","changeDataChecked","Dropdown","GuardianDunValue","guardianItem","guardianData","setGuardianData","guardianDataChecked","setGuardianDataChecked","EponaValue","eponaItem","eponaData","setEponaData","eponaDataChecked","setEponaDataChecked","WeeklyGuardian","weeklyGuardianItem","weeklyGuardianData","setWeeklyGuardianData","weeklyGuardianDataChecked","setWeeklyGuardianDataChecked","contentKeyKorToEng","휴식게이지","카오스던전","가디언토벌","에포나","주간가디언","어비스던전","아르고스","발탄","비아키스","쿠크세이튼","아브렐슈드","오레하2종","어비스6종","낙원3종","DungeonAndEpona","changeDatafunction","setItem","findIndexItem","changeItem","attrChanged","AbyssDun6Types","abyssDun6TypesItem","abyssDungeon6Types","abyssDun6Types","setAbyssDun6Types","AbyssDun3Nakwon","abyssDun3NakwonItem","abyssDungeon3Nakwon","abyssDun3Nakwon","setAbyssDun3Nakwon","AbyssDun2","abyssDun2Item","abyssDun2","setAbyssDun2","ArgosRaid","argosRaidItem","argosRaid","setArgosRaid","BaltanRaid","baltanRaidItem","baltanRaid","setBaltanRaid","BiakissRaid","biakissRaidItem","biakissRaid","setBiakissRaid","KukseitnRaid","kukseitnRaidItem","kukseitnRaid","setKukseitnRaid","AbrelRaid","abrelRaidItem","abrelRaid","setAbrelRaid","WeeklyRaidContents","AddAndChange","addCharacter","applyChanges","PaginationComp","pagination","pageChange","Pagination","firstItem","lastItem","pointing","secondary","totalPages","onPageChange","SettingChange","changeUserCheckBoxConfigurationFunction","todayDate","today","getFullYear","getMonth","getDate","basic","AlarmAndNote","alarmRestValue","showNote","setShowNote","CharacterToDoRow","setAddCharacterModal","loading","setLoading","setPagination","setViewByCheckBox","applyResult","setAlarmTrue","callUsersCheckBoxValue","Segment","border","Dimmer","active","Loader","Container","alarmDataResult","paddingBottom","mobileInputRef","fullList","setFullList","mobileDropDownList","setMobileDropDownList","aList","addItem","iconPosition","filteredList","filterDropDown","scrolling","option","RestValueMobile","AlarmAndNoteMobile","showContentPopupValue","justContent","fontSize","CharacterToDoRowMobile","pinned","AddCharacterMobile","Login","loginMessage","setLoginMessage","password","setUser","handleChange","prev","textAlign","verticalAlign","maxWidth","Form","onSubmit","token","stringify","stacked","fluid","Message","href","class","xmlns","viewBox","preserveAspectRatio","d","opacity","Register","Dashboard","dashboard","lineLabels","setlineLabels","lineData","setlineData","barLabels","setBarLabels","barData","setBarData","userCount","setUserCount","userLoadoCount","setUserLoadoCount","loadologs","setLoadoLogs","keyA","dateValue","keyB","labels","count","hwCount","logsCount","jobGroupingResult","characterCount","getLoadoLogsFunction","chartjsLineData","datasets","fill","borderColor","chartjsBarData","borderWidth","scales","y","beginAtZero","plugins","yAxes","ticks","itemList","imageItemMatch","에스더의기운","파괴강석","파괴석결정","중급오레하융화재료","상급오레하융화재료","위대한명예의돌파석","수호강석","경이로운명예의돌파석","태양의은총","태양의축복","태양의가호","명예의파편주머니소","명예의파편주머니중","명예의파편주머니대","야금술단조심화","재봉술수선심화","AddItemToView","addItemPriceModal","setAddItemTrend","closeAddItemTrend","searchItemCollection","itemSearch","setItemSearch","itemListState","setItemListState","itemCollection","setItemCollection","saveLoading","setSaveLoading","itemSearchChange","startDate","localStorage","getItem","endDate","userInterest","itemName","item_name","currentTarget","deleteItemCollection","replaceAll","paddingRight","postData","saveUserItem","Group","raised","listStyle","MonthlyTrendView","viewMonthlyModal","setViewMonthlyModal","dataApply","dataApply2","firstLoad","setFirstLoad","moment","format","setDateValue","itemPriceTrend","setItemPriceTrend","loadingState","setLoadingState","searchItemMonthlyTrend","daysInMonth","dateStartParam","dateEndParam","userItemCollection","itemCollectionPrice","cssOverride","css","LocalizationProvider","dateAdapter","AdapterDateFns","locale","koLocale","DatePicker","views","minDate","maxDate","newValue","renderInput","params","paramDateValue","inputProps","substring","helperText","series","halfIndex","ceil","firstHalf","nextHalf","divideIndex","firstDivide","nextDivide","finalDivide","ReturnChartMobile","FullTrendView","seeFullLogTrendModal","closeFullLogTrendItem","itemPriceLog","setItemPriceLog","averageValue","medianValue","statValue","setStatValue","overflowY","Table","celled","HeaderCell","Body","Object","keys","Cell","rowSpan","createdDttm","itemPrice","item2","index2","ReturnTable","ConditionSegment","changeDate","InputLabelProps","shrink","ItemPrice","addItemTrend","setSeeFullLogTrendModal","fullLogTrendItem","setFullLogTrendItem","setUserItemCollection","startDateMoment","endDateMoment","diff","dataArr","monthlyView","createdDttmValueCut","minusOneDateValue","itemPriceAverage","max","apply","min","toString","valueDiff","interval","chart","dropShadow","enabled","top","left","blur","toolbar","show","tools","zoom","zoomin","zoomout","colors","dataLabels","enabledOnSeries","undefined","formatter","val","opts","stroke","curve","grid","row","markers","xaxis","categories","yaxis","legend","horizontalAlign","floating","offsetY","offsetX","AppMedia","createMedia","breakpoints","zero","mobile","tablet","computer","Media","createMediaStyle","MediaContextProvider","App","path","between","greaterThanOrEqual","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2e1e6214.chunk.js","sourcesContent":["const backendUrl = process.env.REACT_APP_BACKENDURL;\r\n\r\nconst axiosConfig = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nconst axiosConfigAuth = (userCookie) => {\r\n  const bearer = `Bearer ${userCookie}`;\r\n  return {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: bearer,\r\n    },\r\n  };\r\n};\r\n\r\nconst numberWithCommas = (x) => {\r\n  return x ? x.toLocaleString('en-US') : 0;\r\n};\r\n\r\nconst getLineColorFromImage = () => {\r\n  const array = [\r\n    '#C0392B',\r\n    '#E74C3C',\r\n    '#9B59B6',\r\n    '#8E44AD',\r\n    '#2980B9',\r\n    '#3498DB',\r\n    '#1ABC9C',\r\n    '#16A085',\r\n    '#27AE60',\r\n    '#2ECC71',\r\n    '#F1C40F',\r\n    '#F39C12',\r\n    '#E67E22',\r\n    '#7F8C8D',\r\n    '#34495E',\r\n    '#2C3E50',\r\n  ];\r\n  const randomColor = array[Math.floor(Math.random() * array.length)];\r\n  return randomColor;\r\n};\r\n\r\nexport {\r\n  backendUrl,\r\n  axiosConfig,\r\n  axiosConfigAuth,\r\n  getLineColorFromImage,\r\n  numberWithCommas,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Modal, Grid } from \"semantic-ui-react\";\r\nimport \"./HistoryModal.css\";\r\n\r\nfunction HistoryModal({\r\n  showUpdateHistoryModal,\r\n  setShowUpdateHistoryModal,\r\n  setNoticeAlert,\r\n  changeNotificationToFalse,\r\n}) {\r\n  useEffect(() => {\r\n    changeNotificationToFalse();\r\n    setNoticeAlert(false);\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      open={showUpdateHistoryModal}\r\n      onClose={() => setShowUpdateHistoryModal(false)}\r\n      closeOnDimmerClick\r\n    >\r\n      <Modal.Header\r\n        className=\"modalHeader\"\r\n        style={{\r\n          backgroundColor: \"#384862\",\r\n          color: \"white\",\r\n          borderBottom: \"1px solid white\",\r\n        }}\r\n      >\r\n        작업/업데이트 내역\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Grid>\r\n          {/* <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-06\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              직업명 오타 수정 : 아르라카 {\"->\"} 아르카나\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-09-07\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>가입 시 암호화 관련 설명 추가</Grid.Column>\r\n          </Grid.Row> */}\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-10-09\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              이제 자신의 프로필 사진을 변경해보세요!!! 계정명을 클릭해서 프로필\r\n              이미지를 자르고 업로드 하실 수 있습니다\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2021-10-28\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              특정 상황에서 페이징처리가 제대로 되지 않던 상황을 픽스했습니다\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2022-02-04\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 아이폰, 맥OS에서 정상 작동되게 수정,\r\n              <br />\r\n              2. [멈출 수 없는 충동 각인서] 추가\r\n              <br />\r\n              3. 한 페이지에 즉구가격이 전부 \"-\" 로 되어있을 때 발생하던 에러\r\n              수정했습니다 (페이지이동처리)\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2022-02-13\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 날짜 조건 추가 (최대 2주 간격조회 가능)... 자잘한 기능을 더\r\n              수정할 예정\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ padding: \"10px 0px\" }}>\r\n            <Grid.Column className=\"updateItemDate\" width={2}>\r\n              2022-02-13\r\n            </Grid.Column>\r\n            <Grid.Column width={14}>\r\n              1. 월별 조회기능 추가 (아이템 클릭 후 월별 트랜드 클릭)\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default HistoryModal;\r\n","const characterCdn = {\r\n  berserker:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/berserker_s.png\",\r\n  warlord:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/warlord_s.png\",\r\n  destroyer:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/destroyer_s.png\",\r\n  holyknight:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/holyknight_s.png\",\r\n  battlemaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/battlemaster_s.png\",\r\n  infighter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/infighter_s.png\",\r\n  soulmaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/soulmaster_s.png\",\r\n  lancemaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/lancemaster_s.png\",\r\n  striker:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/striker_s.png\",\r\n  devilhunter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/devilhunter_s.png\",\r\n  blaster:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blaster_s.png\",\r\n  hawkeye:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/hawkeye_s.png\",\r\n  scouter:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/scouter_s.png\",\r\n  gunslinger:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/gunslinger_s.png\",\r\n  summoner:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/summoner_s.png\",\r\n  arcana:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/arcana_s.png\",\r\n  bard: \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/bard_s.png\",\r\n  sorceress:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/sorceress_s.png\",\r\n  blade:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/blade_s.png\",\r\n  demonic:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/demonic_s.png\",\r\n  reaper:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/reaper_s.png\",\r\n  drawer:\r\n    \"https://cdn-lostark.game.onstove.com/2018/obt/assets/images/common/thumb/artist.png\",\r\n};\r\n\r\nconst characterKorean = {\r\n  arcana: \"아르카나\",\r\n  bard: \"바드\",\r\n  battlemaster: \"배틀마스터\",\r\n  berserker: \"버서커\",\r\n  blade: \"블레이드\",\r\n  blaster: \"블래스터\",\r\n  demonic: \"데모닉\",\r\n  destroyer: \"디스트로이어\",\r\n  devilhunter: \"데빌헌터\",\r\n  gunslinger: \"건슬링어\",\r\n  hawkeye: \"호크아이\",\r\n  holyknight: \"홀리나이트\",\r\n  infighter: \"인파이터\",\r\n  lancemaster: \"창술사\",\r\n  reaper: \"리퍼\",\r\n  scouter: \"스카우터\",\r\n  sorceress: \"소서리스\",\r\n  soulmaster: \"기공사\",\r\n  striker: \"스트라이커\",\r\n  summoner: \"서머너\",\r\n  warlord: \"워로드\",\r\n  drawer: \"도화가\",\r\n};\r\n\r\nconst characterEnglish = {\r\n  아르카나: \"arcana\",\r\n  바드: \"bard\",\r\n  배틀마스터: \"battlemaster\",\r\n  버서커: \"berserker\",\r\n  블래이드: \"blade\",\r\n  블래스터: \"blaster\",\r\n  데모닉: \"demonic\",\r\n  디스트로이어: \"destroyer\",\r\n  데빌헌터: \"devilhunter\",\r\n  건슬링어: \"gunslinger\",\r\n  호크아이: \"hawkeye\",\r\n  홀리나이트: \"holyknight\",\r\n  인파이터: \"infighter\",\r\n  창술사: \"lancemaster\",\r\n  리퍼: \"reaper\",\r\n  스카우터: \"scouter\",\r\n  소서리스: \"sorceress\",\r\n  기공사: \"soulmaster\",\r\n  스트라이커: \"striker\",\r\n  서머너: \"summoner\",\r\n  워로드: \"warlord\",\r\n  도화가: \"drawer\",\r\n};\r\n\r\nexport { characterCdn, characterKorean, characterEnglish };\r\n","import axios from \"axios\";\r\nimport { backendUrl, axiosConfigAuth } from \"./ConstVar\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nasync function viewDataMain(limit, theActivePage, setActivePage, userCookie) {\r\n  let searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${theActivePage}`;\r\n\r\n  setActivePage(theActivePage);\r\n\r\n  // if (minusOne) {\r\n  //   searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n  //     whatPage - 1\r\n  //   }`;\r\n  //   setActivePage(whatPage - 1);\r\n  // } else if (plusOne) {\r\n  //   searchString = `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${\r\n  //     Math.floor(plusPage / limit) + 1\r\n  //   }`;\r\n  //   setActivePage(Math.floor(plusPage / limit) + 1);\r\n  // }\r\n\r\n  const axiosResult = await axios\r\n    .get(searchString, axiosConfigAuth(userCookie))\r\n    .then((response) => {\r\n      const totalLength = response.data.totalLength;\r\n      let setPage = 0;\r\n      if (totalLength) {\r\n        const totalPage =\r\n          totalLength / limit - Math.floor(totalLength / limit) > 0\r\n            ? Math.floor(totalLength / limit) + 1\r\n            : Math.floor(totalLength / limit);\r\n        setPage = totalPage;\r\n      } else {\r\n        setPage = 1;\r\n      }\r\n      return {\r\n        viewData: response.data,\r\n        success: true,\r\n        setPage,\r\n      };\r\n    })\r\n    .catch((err) => {\r\n      return {\r\n        viewData: [],\r\n        success: true,\r\n        setPage: 1,\r\n      };\r\n    });\r\n  return axiosResult;\r\n}\r\n\r\nasync function allViewDataMain(userCookie) {\r\n  let searchString = `${backendUrl}/loado/api/homeworks/getAllHomework`;\r\n  const axiosResult = await axios\r\n    .get(searchString, axiosConfigAuth(userCookie))\r\n    .then((response) => {\r\n      return {\r\n        viewData: response.data,\r\n        success: true,\r\n        dataLength: response.data.totalLength,\r\n      };\r\n    });\r\n  return axiosResult;\r\n}\r\n\r\nasync function applyChangesUtil(submitData, userCookie) {\r\n  let errorOccured = false;\r\n\r\n  for (let index = 0; index < submitData.length; index++) {\r\n    await axios\r\n      .put(\r\n        `${backendUrl}/loado/api/homeworks/${submitData[index]._id}`,\r\n        {\r\n          data: submitData[index],\r\n        },\r\n        axiosConfigAuth(userCookie)\r\n      )\r\n      .then((response) => {})\r\n      .catch((err) => {\r\n        errorOccured = true;\r\n      });\r\n  }\r\n  return errorOccured;\r\n}\r\n\r\nasync function getUserCheckBoxConfiguration(userCookie) {\r\n  const result = await axios\r\n    .get(\r\n      `${backendUrl}/loado/api/userConfigure/viewbycheckbox`,\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data.viewByCheckBox;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nasync function changeUserCheckBoxConfiguration(viewByCheckBox, userCookie) {\r\n  const result = await axios\r\n    .put(\r\n      `${backendUrl}/loado/api/userConfigure/viewbycheckbox`,\r\n      {\r\n        viewByCheckBox,\r\n      },\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data.success;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nfunction alarmRestValueUtil(todoList, alarmTrue) {\r\n  let alarmList = [];\r\n  let alarm = false;\r\n\r\n  // 알람 중지\r\n  if (!alarmTrue) {\r\n    alarmList = todoList.map((item, idx) => {\r\n      item.alarmCharacter = false;\r\n      return item;\r\n    });\r\n    alarm = true;\r\n  }\r\n  // 알람 온\r\n  else {\r\n    alarmList = todoList.map((item, idx) => {\r\n      if (\r\n        item.chaosRestValue >= 40 ||\r\n        item.guardianRestValue >= 40 ||\r\n        item.eponaRestValue >= 60\r\n      ) {\r\n        item.alarmCharacter = true;\r\n      }\r\n      return item;\r\n    });\r\n    alarm = false;\r\n  }\r\n  return {\r\n    alarmList,\r\n    alarm,\r\n  };\r\n}\r\n\r\nfunction toastMessage(msg, type, deviceType = \"notMobile\") {\r\n  if (deviceType === \"mobile\") {\r\n    alert(\"came to mobile\");\r\n    if (type === \"error\") {\r\n      return toast.error(msg, {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n    } else if (type === \"info\") {\r\n      return toast.info(msg, {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n    }\r\n  } else {\r\n    alert(\"came to not mobile\");\r\n    if (type === \"error\") {\r\n      return toast.error(msg, {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n      });\r\n    } else if (type === \"info\") {\r\n      return toast.info(msg, {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nasync function updateProfilePic(profilePic, userCookie) {\r\n  const result = await axios\r\n    .post(\r\n      `${backendUrl}/loado/api/userConfigure/uploadProfilePic`,\r\n      {\r\n        profilePic,\r\n      },\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data.success;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nfunction waitForSomeTime(timeToDelay) {\r\n  return new Promise((resolve) => setTimeout(resolve, timeToDelay));\r\n}\r\n\r\nasync function getLoadoLogs(userCookie) {\r\n  const result = await axios\r\n    .get(\r\n      `${backendUrl}/loado/api/adminFeatures/adminData/dailyLogsData`,\r\n      axiosConfigAuth(userCookie)\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n  return result;\r\n}\r\n\r\nexport {\r\n  viewDataMain,\r\n  allViewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n  updateProfilePic,\r\n  waitForSomeTime,\r\n  getLoadoLogs,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Grid, Image, Header, Label } from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { characterCdn, characterKorean } from '../../../_data/characterDefinition';\r\n\r\nimport { allViewDataMain, applyChangesUtil } from '../util/ViewDataUtil';\r\n\r\nfunction ChangePosition({ changeRowModal, setChangeRowModal }) {\r\n  const [userTodoData, setUserTodoData] = useState();\r\n  const [labelText, setLabelText] = useState('저장');\r\n\r\n  const [changedIndexArr, setChangedIndexArr] = useState([]);\r\n\r\n  const saveChanges = async () => {\r\n    setLabelText('저장중입니다');\r\n    // ES6 distinct values\r\n    const distinctIndexData = Array.from(new Set(changedIndexArr));\r\n    const sendData = userTodoData.filter((item, index) =>\r\n      distinctIndexData.includes(index)\r\n    );\r\n    const applyResult = await applyChangesUtil(\r\n      sendData,\r\n      cookie.get('loadoUserToken')\r\n    );\r\n\r\n    if (applyResult) {\r\n      setLabelText('저장에 실패했습니다');\r\n      return;\r\n    }\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function callData() {\r\n      const resultData = await allViewDataMain(cookie.get('loadoUserToken'));\r\n      setUserTodoData(resultData.viewData.data);\r\n    }\r\n    callData();\r\n  }, []);\r\n\r\n  let dragStartIndex;\r\n\r\n  useEffect(() => {\r\n    function dragStart() {\r\n      dragStartIndex = +this.getAttribute('data-index');\r\n    }\r\n\r\n    function dragOver(e) {\r\n      //   nothing happens and the reason\r\n      // for that is basically the drag over event is getting in the way.\r\n      // So we want the read the only reason I have drag over here is to prevent the default action.\r\n      e.preventDefault();\r\n    }\r\n\r\n    function dragDrop() {\r\n      const dragEndIndex = +this.getAttribute('data-index');\r\n      swapItems(dragStartIndex, dragEndIndex);\r\n      this.classList.remove('over');\r\n    }\r\n\r\n    function dragEnter() {\r\n      this.classList.add('over');\r\n    }\r\n    function dragLeave() {\r\n      this.classList.remove('over');\r\n    }\r\n\r\n    // Swap list iteams that are drag and drop\r\n    function swapItems(fromIndex, toIndex) {\r\n      const itemFrom = userTodoData[fromIndex - 1];\r\n      const itemTo = userTodoData[toIndex - 1];\r\n\r\n      const itemFromIdx = itemFrom.idx;\r\n      const itemToIdx = itemTo.idx;\r\n\r\n      itemFrom.idx = itemToIdx;\r\n      itemTo.idx = itemFromIdx;\r\n\r\n      userTodoData[fromIndex - 1] = itemTo;\r\n      userTodoData[toIndex - 1] = itemFrom;\r\n\r\n      changedIndexArr.push(fromIndex - 1);\r\n      changedIndexArr.push(toIndex - 1);\r\n      setChangedIndexArr(changedIndexArr);\r\n\r\n      // console.log(changedIndexArr);\r\n\r\n      setUserTodoData([]); // 정보가 남아서 초기화\r\n      setUserTodoData(userTodoData);\r\n    }\r\n\r\n    if (userTodoData) {\r\n      const draggables = document.querySelectorAll('.draggable');\r\n\r\n      draggables.forEach((draggable) => {\r\n        draggable.addEventListener('dragstart', dragStart);\r\n        draggable.addEventListener('dragover', dragOver);\r\n        draggable.addEventListener('drop', dragDrop);\r\n        draggable.addEventListener('dragenter', dragEnter);\r\n        draggable.addEventListener('dragleave', dragLeave);\r\n      });\r\n\r\n      return () => {\r\n        draggables.forEach((draggable) => {\r\n          draggable.removeEventListener('dragstart', dragStart);\r\n          draggable.addEventListener('dragover', dragOver);\r\n          draggable.addEventListener('drop', dragDrop);\r\n          draggable.addEventListener('dragenter', dragEnter);\r\n          draggable.addEventListener('dragleave', dragLeave);\r\n        });\r\n      };\r\n    }\r\n  }, [userTodoData]);\r\n\r\n  return (\r\n    <Modal\r\n      open={changeRowModal}\r\n      onClose={() => setChangeRowModal(false)}\r\n      closeOnDimmerClick\r\n      size='tiny'\r\n    >\r\n      <Modal.Header\r\n        style={{\r\n          backgroundColor: '#384862',\r\n          color: 'white',\r\n          borderBottom: '1px solid white',\r\n        }}\r\n      >\r\n        케릭터 순서변경\r\n        {userTodoData && (\r\n          <Label\r\n            as='a'\r\n            color='orange'\r\n            ribbon\r\n            style={{ marginLeft: '80px' }}\r\n            onClick={saveChanges}\r\n          >\r\n            {labelText}\r\n          </Label>\r\n        )}\r\n      </Modal.Header>\r\n      <Modal.Content style={{ backgroundColor: 'lavender' }}>\r\n        <Grid columns={10}>\r\n          {userTodoData &&\r\n            userTodoData\r\n              .sort(function (a, b) {\r\n                return a['idx'] - b['idx'];\r\n              })\r\n              .map((item, index) => (\r\n                <Grid.Row\r\n                  className='draggable'\r\n                  draggable={true}\r\n                  data-index={item.idx}\r\n                  style={{ borderBottom: '1px solid rgb(56, 72, 98)' }}\r\n                >\r\n                  <Grid.Column width={7}>\r\n                    <Header as='h5'>\r\n                      <span style={{ marginRight: '20px' }}>{index + 1}.</span>\r\n                      <Image avatar src={characterCdn[item.character]} />{' '}\r\n                      <span style={{ marginLeft: '10px' }}>\r\n                        {item.characterName}\r\n                      </span>\r\n                    </Header>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n        </Grid>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ChangePosition;\r\n","import axios from \"axios\";\r\n\r\nconst uploadPic = async (media) => {\r\n  try {\r\n    const form = new FormData();\r\n    form.append(\"file\", media);\r\n    form.append(\"upload_preset\", \"Loado_Image\");\r\n    form.append(\"cloud_name\", \"biglol\");\r\n    const res = await axios.post(process.env.REACT_APP_CLOUDINARY_URL, form);\r\n    return res.data.url;\r\n  } catch (error) {\r\n    return;\r\n  }\r\n};\r\n\r\nexport default uploadPic;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n  Image,\r\n} from \"semantic-ui-react\";\r\nimport Cropper from \"react-cropper\";\r\nimport uploadPic from \"../../components/util/uploadPicToCloudinary\";\r\nimport { updateProfilePic, waitForSomeTime } from \"./ViewDataUtil\";\r\nimport cookie from \"js-cookie\";\r\n\r\nfunction ProfileModal({ profileModal, setProfileModal, profilePic }) {\r\n  const [cropper, setCropper] = useState();\r\n  const [media, setMedia] = useState(null);\r\n  const [mediaPreview, setMediaPreview] = useState();\r\n  const [statusText, setStatusText] = useState(\r\n    \"이미지를 업로드하고 잘라보세요 (icon)\"\r\n  );\r\n  const inputRef = useRef();\r\n\r\n  const handleImageChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    if (name === \"media\") {\r\n      setMedia(files[0]);\r\n      setMediaPreview(URL.createObjectURL(files[0]));\r\n      // console.log(\"objectURL is \", URL.createObjectURL(files[0]));  https://kyounghwan01.github.io/blog/JS/JSbasic/Blob-url/#createobjecturl\r\n    }\r\n  };\r\n\r\n  const cropperStyle = {\r\n    height: \"400px\",\r\n    width: \"100%\",\r\n  };\r\n\r\n  const submitData = async () => {\r\n    let picUrl;\r\n    let uploadResult = false;\r\n\r\n    if (false) {\r\n      alert(\"ASDF\");\r\n      setMedia(cropper.getCroppedCanvas().toDataURL()); // passing actual crop image\r\n      //   setMediaPreview(cropper.getCroppedCanvas().toDataURL())\r\n      cropper.destroy(); // release the cropper from the memory\r\n    }\r\n\r\n    if (media !== null && cropper) {\r\n      setStatusText(\"이미지를 업로드 중입니다\");\r\n      picUrl = await uploadPic(cropper.getCroppedCanvas().toDataURL());\r\n      waitForSomeTime(500);\r\n      cropper.destroy();\r\n      if (!picUrl) {\r\n        setStatusText(\"이미지 업로드에 실패했습니다\");\r\n      }\r\n      uploadResult = await updateProfilePic(\r\n        picUrl,\r\n        cookie.get(\"loadoUserToken\")\r\n      );\r\n    }\r\n    if (!uploadResult) {\r\n      setStatusText(\"이미지 업로드에 실패했습니다\");\r\n      return;\r\n    }\r\n    setProfileModal(false);\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        closeOnDimmerClick={false}\r\n        size=\"large\"\r\n        // onClose={setProfileModal(false)}\r\n        open={profileModal}\r\n      >\r\n        <Modal.Header>\r\n          {statusText}{\" \"}\r\n          <Icon\r\n            name=\"image\"\r\n            style={{ color: \"red\", cursor: \"pointer\" }}\r\n            onClick={() => inputRef.current.click()}\r\n          />\r\n          <input\r\n            ref={inputRef}\r\n            onChange={handleImageChange}\r\n            name=\"media\"\r\n            style={{ display: \"none\" }}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n          />\r\n        </Modal.Header>\r\n        <Grid columns={2}>\r\n          <Grid.Column>\r\n            <Modal.Content image>\r\n              {mediaPreview ? (\r\n                <Cropper\r\n                  style={cropperStyle}\r\n                  cropBoxResizable\r\n                  zoomable\r\n                  highlight\r\n                  responsive\r\n                  guides\r\n                  dragMode=\"move\"\r\n                  initialAspectRatio={1}\r\n                  preview=\".img-preview\"\r\n                  src={mediaPreview}\r\n                  viewMode={1}\r\n                  minCropBoxHeight={10}\r\n                  minCropBoxWidth={10}\r\n                  background={false}\r\n                  autoCropArea={1}\r\n                  checkOrientation={false}\r\n                  onInitialized={(cropper) => setCropper(cropper)}\r\n                />\r\n              ) : (\r\n                <Image\r\n                  src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\r\n                  style={{ ...cropperStyle, cursor: \"pointer\" }}\r\n                  onClick={() => inputRef.current.click()}\r\n                />\r\n              )}\r\n              {/* cropper can only generate preview from a url string not from object, so we passed mediapreview not media state */}\r\n            </Modal.Content>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Modal.Content image>\r\n              <div style={{ margin: \"15px 0px\" }}>\r\n                <Header as=\"h3\">\r\n                  <Icon name=\"file image outline\" />\r\n                  <Header.Content content=\"최종 이미지\" />\r\n                </Header>\r\n              </div>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"300px\",\r\n                    display: \"inline-block\",\r\n                    padding: \"10px\",\r\n                    overflow: \"hidden\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  className=\"img-preview\"\r\n                ></div>\r\n              </div>\r\n            </Modal.Content>\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Modal.Actions>\r\n          <Button\r\n            title=\"Reset (R)\"\r\n            icon=\"redo\"\r\n            circular\r\n            onClick={() => cropper && cropper.reset()}\r\n          />\r\n          {/* \r\n          <Button\r\n            title=\"Move Canvas (M)\"\r\n            icon=\"move\"\r\n            circular\r\n            onClick={() => cropper && cropper.setDragMode(\"move\")}\r\n          /> */}\r\n\r\n          <Button\r\n            title=\"New Cropbox (C)\"\r\n            icon=\"crop\"\r\n            circular\r\n            onClick={() => cropper && cropper.setDragMode(\"crop\")}\r\n          />\r\n\r\n          <Button\r\n            negative\r\n            content=\"취소\"\r\n            icon=\"cancel\"\r\n            onClick={() => setProfileModal(false)}\r\n          />\r\n\r\n          <Button\r\n            content=\"프로필 업로드\"\r\n            icon=\"checkmark\"\r\n            positive\r\n            onClick={submitData}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Menu,\r\n  Header,\r\n  Icon,\r\n  Popup,\r\n  Button,\r\n  Divider,\r\n  Image,\r\n  Card,\r\n  Label,\r\n} from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  backendUrl,\r\n  axiosConfig,\r\n  axiosConfigAuth,\r\n} from '../../components/util/ConstVar';\r\n\r\nimport HistoryModal from '../../components/updatehistory/HistoryModal';\r\nimport ChangePosition from '../../components/characterRelated/ChangePosition';\r\nimport ProfileModal from '../../components/util/ProfileModal';\r\n\r\nimport './NavHeader.css';\r\n\r\nfunction NavHeader() {\r\n  let userIdString = cookie.get('loadoUserCookie');\r\n  let userValue = userIdString && JSON.parse(userIdString);\r\n  const history = useHistory();\r\n\r\n  const [accountUser, setAccountUser] = useState(null);\r\n\r\n  const [showUpdateHistoryModal, setShowUpdateHistoryModal] = useState(false);\r\n  const [changeRowModal, setChangeRowModal] = useState(false);\r\n  const [profileModal, setProfileModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [openAdditionalMenu, setOpenAdditionalMenu] = useState(false);\r\n\r\n  const [noticeAlert, setNoticeAlert] = useState(false);\r\n\r\n  const logoutUser = (userId) => {\r\n    cookie.set('loginId', userId);\r\n    cookie.remove('loadoUserCookie');\r\n    cookie.remove('loadoUserToken');\r\n    cookie.remove('token');\r\n    history.push('/login');\r\n  };\r\n\r\n  const restValueBatch = async () => {\r\n    let searchString = `${backendUrl}/loado/api/homeworks/loadoupdatepersonal`;\r\n    axios\r\n      .post(searchString, {}, axiosConfig)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        alert('휴식게이지를 반영하지 못했습니다');\r\n      });\r\n  };\r\n\r\n  const openChangeRowModal = () => {\r\n    setOpen(false);\r\n    setChangeRowModal(true);\r\n  };\r\n\r\n  const openProfileModal = () => {\r\n    setOpen(false);\r\n    setProfileModal(true);\r\n  };\r\n\r\n  const changeNotificationToFalse = async () => {\r\n    await axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/changeNotification`,\r\n        {},\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) return;\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function checkNewlyUpdate() {\r\n      const axiosResult = await axios\r\n        .post(\r\n          `${backendUrl}/loado/api/users/checkNotification`,\r\n          {},\r\n          axiosConfigAuth(cookie.get('loadoUserToken'))\r\n        )\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            setNoticeAlert(response.data.user.newNotice);\r\n            setAccountUser(response.data.user);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setNoticeAlert(false);\r\n        });\r\n    }\r\n    checkNewlyUpdate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        style={{\r\n          background: '-webkit-linear-gradient(right, #da0050, #8e2b88)',\r\n          height: '6vh',\r\n          borderRadius: '0px',\r\n          marginBottom: '0px',\r\n        }}\r\n        borderless\r\n      >\r\n        <Menu.Item>\r\n          <Header\r\n            size='large'\r\n            id='navTitle'\r\n            onClick={() =>\r\n              window.open(\r\n                'https://github.com/biglol10/loado-react/blob/main/README.md'\r\n              )\r\n            }\r\n          >\r\n            <span style={{ fontStyle: 'italic' }}>\r\n              <Icon name='game' />\r\n              LoaDo\r\n            </span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            onClick={() => setShowUpdateHistoryModal(!showUpdateHistoryModal)}\r\n            className={noticeAlert ? 'newNoticeAlert headerItem' : 'headerItem'}\r\n          >\r\n            <Icon name='cube' />\r\n            작업 내역\r\n          </Header>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item>\r\n          <Popup\r\n            on='click'\r\n            position='top right'\r\n            onClose={() => setOpenAdditionalMenu(false)}\r\n            onOpen={() => setOpenAdditionalMenu(true)}\r\n            open={openAdditionalMenu}\r\n            trigger={\r\n              <Header size='small' className='headerItem'>\r\n                <Icon name='chevron circle down' />\r\n                추가기능\r\n              </Header>\r\n            }\r\n          >\r\n            <Menu vertical>\r\n              <Menu.Item\r\n                name='inbox'\r\n                onClick={() => history.push('/itemPrice')}\r\n              >\r\n                <Label color='teal'>\r\n                  <Icon name='line graph' />\r\n                </Label>\r\n                아이템시세\r\n              </Menu.Item>\r\n              {/* <Menu.Item\r\n                name='inbox'\r\n                onClick={() => history.push('/itemPrice')}\r\n              >\r\n                <Label color='red'>\r\n                  <Icon name='play' />\r\n                </Label>\r\n                강화시뮬레이션\r\n              </Menu.Item> */}\r\n            </Menu>\r\n          </Popup>\r\n        </Menu.Item>\r\n\r\n        {/* <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            className='headerItem'\r\n            onClick={() => restValueBatch()}\r\n          >\r\n            <Icon name='box' />\r\n            휴식게이지반영\r\n          </Header>\r\n        </Menu.Item> */}\r\n        {/* {accountUser?.role === \"admin\" && (\r\n          <Menu.Item>\r\n            <Header\r\n              size=\"small\"\r\n              className=\"headerItem\"\r\n              onClick={() => history.push(\"/dashboard\")}\r\n            >\r\n              <Icon name=\"dashboard\" />\r\n              대시보드\r\n            </Header>\r\n          </Menu.Item>\r\n        )} */}\r\n\r\n        <Menu.Item>\r\n          <Header\r\n            size='small'\r\n            className='headerItem'\r\n            onClick={() => history.push('/dashboard')}\r\n          >\r\n            <Icon name='dashboard' />\r\n            대시보드\r\n          </Header>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item className='personIconItem'>\r\n          <Popup\r\n            on='click'\r\n            position='top right'\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={\r\n              <Header size='small' className='personIcon'>\r\n                {accountUser?.profilePic ? (\r\n                  <div>\r\n                    <Image src={accountUser.profilePic} avatar />\r\n                    <span style={{ color: 'white' }}>{userValue.userName}</span>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <Icon name='user' />\r\n                    {userValue && userValue.userName}\r\n                  </>\r\n                )}\r\n              </Header>\r\n            }\r\n          >\r\n            <Card>\r\n              <Image\r\n                avatar\r\n                // style={{ height: '70px', width: '70px', objectFit: 'cover' }}\r\n                src={\r\n                  accountUser?.profilePic\r\n                    ? accountUser.profilePic\r\n                    : 'https://react.semantic-ui.com/images/wireframe/image.png'\r\n                }\r\n                style={{\r\n                  margin: '0 auto',\r\n                  height: '150px',\r\n                  width: '150px',\r\n                  borderRadius: '500rem !important',\r\n                }}\r\n                id='profilePicId'\r\n              />\r\n              <Card.Content>\r\n                <Card.Header>{userValue && userValue.userName}</Card.Header>\r\n                <Divider hidden />\r\n                <Card.Description>\r\n                  <p style={{ fontWeight: 'bold' }}>\r\n                    프로필 이미지를 바꾸시겠습니까?\r\n                  </p>\r\n                  <Button\r\n                    color='violet'\r\n                    content='프로필변경'\r\n                    onClick={openProfileModal}\r\n                  />\r\n                  <Divider />\r\n                  <p style={{ fontWeight: 'bold' }}>\r\n                    케릭터 순서를 바꾸시겠습니까?\r\n                  </p>\r\n                  <Button\r\n                    color='blue'\r\n                    content='순서변경'\r\n                    onClick={openChangeRowModal}\r\n                  />\r\n                  <Divider />\r\n                  <p style={{ fontWeight: 'bold' }}>로그아웃 하시겠습니까?</p>\r\n                  <Button\r\n                    color='red'\r\n                    content='로그아웃'\r\n                    onClick={() => logoutUser(userValue.userId)}\r\n                  />\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>\r\n          </Popup>\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {profileModal && (\r\n        <ProfileModal\r\n          profileModal={profileModal}\r\n          setProfileModal={setProfileModal}\r\n          profilePic={accountUser?.profilePic}\r\n        />\r\n      )}\r\n\r\n      {showUpdateHistoryModal && (\r\n        <HistoryModal\r\n          showUpdateHistoryModal={showUpdateHistoryModal}\r\n          setShowUpdateHistoryModal={setShowUpdateHistoryModal}\r\n          setNoticeAlert={setNoticeAlert}\r\n          changeNotificationToFalse={changeNotificationToFalse}\r\n        />\r\n      )}\r\n\r\n      {changeRowModal && (\r\n        <ChangePosition\r\n          changeRowModal={changeRowModal}\r\n          setChangeRowModal={setChangeRowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeader;\r\n","import NavHeader from \"./NavHeader\";\r\n\r\nexport default NavHeader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Menu,\r\n  Header,\r\n  Icon,\r\n  Popup,\r\n  Button,\r\n  Modal,\r\n  Divider,\r\n} from 'semantic-ui-react';\r\nimport cookie from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { backendUrl, axiosConfig, axiosConfigAuth } from '../../components/util/ConstVar';\r\n\r\nimport HistoryModal from '../../components/updatehistory/HistoryModal';\r\nimport ChangePosition from '../../components/characterRelated/ChangePosition';\r\n\r\nimport './NavHeaderMobile.css';\r\n\r\nfunction NavHeaderMobile() {\r\n  let userIdString = cookie.get('loadoUserCookie');\r\n  let userValue = userIdString && JSON.parse(userIdString);\r\n  const history = useHistory();\r\n\r\n  const [showUpdateHistoryModal, setShowUpdateHistoryModal] = useState(false);\r\n  const [changeRowModal, setChangeRowModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [noticeAlert, setNoticeAlert] = useState(false);\r\n\r\n  const [mobileSize, setMobileSize] = useState(false);\r\n\r\n  const logoutUser = (userId) => {\r\n    cookie.set('loginId', userId);\r\n    cookie.remove('loadoUserCookie');\r\n    cookie.remove('loadoUserToken');\r\n    cookie.remove('token');\r\n    history.push('/login');\r\n  };\r\n\r\n  const restValueBatch = async () => {\r\n    let searchString = `${backendUrl}/loado/api/homeworks/loadoupdatepersonal`;\r\n    axios\r\n      .post(searchString, {}, axiosConfig)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        alert('휴식게이지를 반영하지 못했습니다');\r\n      });\r\n  };\r\n\r\n  const openChangeRowModal = () => {\r\n    setOpen(false);\r\n    setChangeRowModal(true);\r\n  };\r\n\r\n  const changeNotificationToFalse = async () => {\r\n    await axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/changeNotification`,\r\n        {},\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) return;\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function checkNewlyUpdate() {\r\n      const axiosResult = await axios\r\n        .post(\r\n          `${backendUrl}/loado/api/users/checkNotification`,\r\n          {},\r\n          axiosConfigAuth(cookie.get('loadoUserToken'))\r\n        )\r\n        .then((response) => {\r\n          if (response.data.success) setNoticeAlert(response.data.newNotice);\r\n        })\r\n        .catch((err) => {\r\n          setNoticeAlert(false);\r\n        });\r\n    }\r\n    checkNewlyUpdate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        style={{\r\n          background: '-webkit-linear-gradient(right, #da0050, #8e2b88)',\r\n          height: '6vh',\r\n          borderRadius: '0px',\r\n          marginBottom: '0px',\r\n          width: '100%',\r\n        }}\r\n        borderless\r\n      >\r\n        <Menu.Item>\r\n          <Header\r\n            size='large'\r\n            id='navTitleMobile'\r\n            onClick={() =>\r\n              window.open(\r\n                'https://github.com/biglol10/loado-react/blob/main/README.md'\r\n              )\r\n            }\r\n          >\r\n            <span style={{ fontStyle: 'italic' }}>\r\n              <Icon name='game' />\r\n              LoaDo\r\n            </span>\r\n          </Header>\r\n        </Menu.Item>\r\n        <Menu.Item style={{ marginLeft: 'auto' }}>\r\n          <Popup\r\n            on='click'\r\n            position='top right'\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={\r\n              <Header\r\n                size='small'\r\n                style={{\r\n                  color: 'white',\r\n                  padding: '0 50px',\r\n                  display: 'flex',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                <Icon name='user' />\r\n                {userValue && userValue.userName}\r\n              </Header>\r\n            }\r\n          >\r\n            <h4>개인휴식게이지 반영</h4>\r\n            <Button\r\n              color='teal'\r\n              content='휴게반영'\r\n              onClick={() => restValueBatch()}\r\n            />\r\n            <Divider />\r\n            <h4>아이템시세</h4>\r\n            <Button\r\n              color='blue'\r\n              content='시세보기'\r\n              onClick={() => history.push('/itemPrice')}\r\n            />\r\n            <Divider />\r\n            <h4>로그아웃 하시겠습니까?</h4>\r\n            <Button\r\n              color='red'\r\n              content='로그아웃'\r\n              onClick={() => logoutUser(userValue.userId)}\r\n            />\r\n          </Popup>\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {showUpdateHistoryModal && (\r\n        <HistoryModal\r\n          showUpdateHistoryModal={showUpdateHistoryModal}\r\n          setShowUpdateHistoryModal={setShowUpdateHistoryModal}\r\n          setNoticeAlert={setNoticeAlert}\r\n          changeNotificationToFalse={changeNotificationToFalse}\r\n        />\r\n      )}\r\n\r\n      {changeRowModal && (\r\n        <ChangePosition\r\n          changeRowModal={changeRowModal}\r\n          setChangeRowModal={setChangeRowModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeaderMobile;\r\n","import NavHeaderMobile from \"./NavHeaderMobile\";\r\n\r\nexport default NavHeaderMobile;\r\n","import React, { useState, useEffect, useRef, innerRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  List,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  characterCdn,\r\n  characterKorean,\r\n} from \"../../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { backendUrl } from \"../util/ConstVar\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport \"./AddCharacter.css\";\r\n\r\nfunction AddCharacter({\r\n  addCharacterModal,\r\n  closeAddCharacter,\r\n  userTodoData,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  limit,\r\n  activePage,\r\n}) {\r\n  const [selectCharacterModal, setSelectCharacterModal] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState(\"\");\r\n  const [characterName, setCharacterName] = useState(\"\");\r\n  const [chaosRestValue, setChaosRestValue] = useState(0);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(0);\r\n  const [eponaRestValue, setEponaRestValue] = useState(0);\r\n  const regex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]+$/;\r\n  const regexNumber = /^[0-9]+$/;\r\n\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n\r\n  const closeSelectCharacter = () => setSelectCharacterModal(false);\r\n\r\n  const modalShow = () => {\r\n    setSelectCharacterModal(true);\r\n  };\r\n\r\n  const classSelected = (event) => {\r\n    let selectedClass;\r\n    if (event.target.className.indexOf(\"image\") > 0) {\r\n      selectedClass = event.target.dataset.options;\r\n    } else {\r\n      selectedClass = event.target.className.split(\" \")[2];\r\n    }\r\n    setSelectedCharacter(selectedClass);\r\n    setSelectCharacterModal(false);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeAddCharacterModal = () => {\r\n    setSelectedCharacter(\"\");\r\n    setCharacterName(\"\");\r\n    setChaosRestValue(0);\r\n    setGuardianRestValue(0);\r\n    setEponaRestValue(0);\r\n    closeAddCharacter();\r\n  };\r\n\r\n  const changeInputCharName = (event, data) => {\r\n    const insertedValue = data.value;\r\n    if (insertedValue.length === 0) {\r\n      setCharacterName(\"\");\r\n      return;\r\n    }\r\n    if (!regex.test(insertedValue) || insertedValue.length > 12) return;\r\n    setCharacterName(insertedValue);\r\n  };\r\n\r\n  const changeRestValue = (event, data) => {\r\n    event.preventDefault();\r\n    if (!regexNumber.test(event.target.value)) return;\r\n    if (event.target.id === \"chaosChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = chaosRestValue + (changedValue - chaosRestValue) * 10;\r\n      if (valueOutput < 0) setChaosRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValue(valueOutput);\r\n      else setChaosRestValue(100);\r\n    }\r\n    if (event.target.id === \"guardianChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput =\r\n        guardianRestValue + (changedValue - guardianRestValue) * 10;\r\n      if (valueOutput < 0) setGuardianRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValue(valueOutput);\r\n      else setGuardianRestValue(100);\r\n    }\r\n    if (event.target.id === \"eponaChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = eponaRestValue + (changedValue - eponaRestValue) * 10;\r\n      if (valueOutput < 0) setEponaRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValue(valueOutput);\r\n      else setEponaRestValue(100);\r\n    }\r\n  };\r\n\r\n  const confirmAddCharacter = () => {\r\n    const createdData = {\r\n      // _id: \"5d725a037b292f5f8ceff795\",\r\n      // user: \"5d7a514b5d2c12c7449be042\",\r\n      character: selectedCharacter,\r\n      characterName: characterName,\r\n      date: Date.now(),\r\n      // idx: 2,\r\n      chaosRestValue,\r\n      guardianRestValue,\r\n      eponaRestValue,\r\n      chaosDone: 0,\r\n      guardianDone: 0,\r\n      eponaDone: 0,\r\n      guardianWeeklyDone: 0,\r\n      abyssDungeon2: false,\r\n      // abyssDungeonWeekly: true,\r\n      // rehearsalAndDejavu: [\"kukuseitn\", \"abrel\"],\r\n      argos: false,\r\n      baltan: false,\r\n      biakiss: false,\r\n      kukuseitn: false,\r\n      abrel: false,\r\n      attributeChanged: false,\r\n      weeklyAttributeChanged: false,\r\n      createdAt: Date.now(),\r\n    };\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/homeworks`,\r\n        createdData,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        // setUserTodoData([...userTodoData, response.data.data]);\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          userTodoData.length % limit === 0\r\n        ) {\r\n          activePage = Math.floor(response.data.totalLength / limit) + 1;\r\n          viewPage(activePage);\r\n        } else {\r\n          viewPage(activePage);\r\n        }\r\n        closeAddCharacterModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.error, {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        closeAddCharacterModal();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const classElements = document.getElementsByClassName(\r\n      \"characterClassContent\"\r\n    );\r\n    let eventAdd;\r\n    for (let index = 0; index < classElements.length; index++) {\r\n      eventAdd = classElements[index].addEventListener(\"click\", (event) => {\r\n        classSelected(event);\r\n      });\r\n    }\r\n    return () => {\r\n      for (let index = 0; index < classElements.length; index++) {\r\n        classElements[index].removeEventListener(\"click\", eventAdd);\r\n      }\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById(\"characterNameInputId\");\r\n    const enterEvent = element.addEventListener(\"keypress\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        if (buttonRef.current) buttonRef.current.click();\r\n      }\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"keypress\", enterEvent);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={addCharacterModal}\r\n        onClose={closeAddCharacterModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: \"dimgray\" }}>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            {!selectedCharacter ? (\r\n              <>\r\n                <span className=\"itemHeaderAttribute1\">클래스:</span>\r\n                <Icon\r\n                  name=\"add square\"\r\n                  size=\"large\"\r\n                  color=\"white\"\r\n                  onClick={modalShow}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"itemHeaderAttribute2\">클래스:</span>\r\n                <span onClick={() => setSelectCharacterModal(true)}>\r\n                  <Image\r\n                    src={characterCdn[selectedCharacter]}\r\n                    size=\"mini\"\r\n                    avatar\r\n                  />\r\n                  {characterKorean[selectedCharacter]}\r\n                </span>\r\n              </>\r\n            )}\r\n          </Header>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            <span style={{ marginRight: \"40px\" }}>케릭명:</span>\r\n            <Input\r\n              transparent\r\n              placeholder=\"케릭터명\"\r\n              style={{ color: \"white\" }}\r\n              className=\"charNameInput\"\r\n              value={characterName}\r\n              ref={inputRef}\r\n              id=\"characterNameInputId\"\r\n              onChange={(event, data) => changeInputCharName(event, data)}\r\n            />\r\n          </Header>\r\n          <Header className=\"itemHeaderRest\" as=\"h4\">\r\n            <List divided selection>\r\n              <List.Item>\r\n                <Label horizontal>카오스던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={chaosRestValue}\r\n                  id=\"chaosChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>가디언토벌</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={guardianRestValue}\r\n                  id=\"guardianChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>에포나</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={eponaRestValue}\r\n                  id=\"eponaChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n            </List>\r\n          </Header>\r\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <Button\r\n              circular\r\n              color=\"google plus\"\r\n              icon=\"cancel\"\r\n              onClick={closeAddCharacterModal}\r\n            />\r\n            <Button\r\n              circular\r\n              color=\"twitter\"\r\n              icon=\"check\"\r\n              onClick={confirmAddCharacter}\r\n            />\r\n            <button\r\n              ref={buttonRef}\r\n              onClick={confirmAddCharacter}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <Modal\r\n        open={selectCharacterModal}\r\n        onClose={closeSelectCharacter}\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n        className=\"classSelectModal\"\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            backgroundColor: \"#384862\",\r\n            color: \"white\",\r\n            borderBottom: \"1px solid white\",\r\n          }}\r\n        >\r\n          클래스\r\n        </Modal.Header>\r\n        <Modal.Content style={{ backgroundColor: \"#384862\", color: \"white\" }}>\r\n          <Grid columns={6}>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  전사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column\r\n                className=\"characterClassContent berserker\"\r\n                name=\"berserker\"\r\n              >\r\n                <Image\r\n                  src={characterCdn.berserker}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"berserker\"\r\n                />\r\n                버서커\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent warlord\">\r\n                <Image\r\n                  src={characterCdn.warlord}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"warlord\"\r\n                />\r\n                워로드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent destroyer\">\r\n                <Image\r\n                  src={characterCdn.destroyer}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"destroyer\"\r\n                />\r\n                디스트로이어\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent holyknight\">\r\n                <Image\r\n                  src={characterCdn.holyknight}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"holyknight\"\r\n                />\r\n                홀리나이트\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  무도가\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent battlemaster\">\r\n                <Image\r\n                  src={characterCdn.battlemaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"battlemaster\"\r\n                />\r\n                배틀마스터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent infighter\">\r\n                <Image\r\n                  src={characterCdn.infighter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"infighter\"\r\n                />\r\n                인파이터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent soulmaster\">\r\n                <Image\r\n                  src={characterCdn.soulmaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"soulmaster\"\r\n                />\r\n                기공사\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent lancemaster\">\r\n                <Image\r\n                  src={characterCdn.lancemaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"lancemaster\"\r\n                />\r\n                창술사\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent striker\">\r\n                <Image\r\n                  src={characterCdn.striker}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"striker\"\r\n                />\r\n                스트라이커\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  헌터\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent devilhunter\">\r\n                <Image\r\n                  src={characterCdn.devilhunter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"devilhunter\"\r\n                />\r\n                데빌헌터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent blaster\">\r\n                <Image\r\n                  src={characterCdn.blaster}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"blaster\"\r\n                />\r\n                블래스터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent hawkeye\">\r\n                <Image\r\n                  src={characterCdn.hawkeye}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"hawkeye\"\r\n                />\r\n                호크아이\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent scouter\">\r\n                <Image\r\n                  src={characterCdn.scouter}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"scouter\"\r\n                />\r\n                스카우터\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent gunslinger\">\r\n                <Image\r\n                  src={characterCdn.gunslinger}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"gunslinger\"\r\n                />\r\n                건슬링어\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  마법사\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent summoner\">\r\n                <Image\r\n                  src={characterCdn.summoner}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"summoner\"\r\n                />\r\n                서머너\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent arcana\">\r\n                <Image\r\n                  src={characterCdn.arcana}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"arcana\"\r\n                />\r\n                아르카나\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent bard\">\r\n                <Image\r\n                  src={characterCdn.bard}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"bard\"\r\n                />\r\n                바드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent sorceress\">\r\n                <Image\r\n                  src={characterCdn.sorceress}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"sorceress\"\r\n                />\r\n                소서리스\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  암살자\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent blade\">\r\n                <Image\r\n                  src={characterCdn.blade}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"blade\"\r\n                />\r\n                블레이드\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent demonic\">\r\n                <Image\r\n                  src={characterCdn.demonic}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"demonic\"\r\n                />\r\n                데모닉\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent reaper\">\r\n                <Image\r\n                  src={characterCdn.reaper}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"reaper\"\r\n                />\r\n                리퍼\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column className=\"characterClassHeader\">\r\n                <Header as=\"h4\" style={{ marginTop: \"6px\", color: \"white\" }}>\r\n                  스페셜리스트\r\n                </Header>\r\n              </Grid.Column>\r\n              <Grid.Column className=\"characterClassContent drawer\">\r\n                <Image\r\n                  src={characterCdn.drawer}\r\n                  size=\"mini\"\r\n                  avatar\r\n                  data-options=\"drawer\"\r\n                />\r\n                도화가\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Modal, Image, Button } from \"semantic-ui-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { characterCdn } from \"../../../_data/characterDefinition\";\r\n\r\nfunction RestValue({ item, userTodoData, setUserTodoData }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(item._id);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowModal(true);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  // if you use setShowModal directly in Modal onClose, react will throw error\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [chaosRestValue, setChaosRestValue] = useState(item.chaosRestValue);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValue, setEponaRestValue] = useState(item.eponaRestValue);\r\n\r\n  const [chaosRestValueChange, setChaosRestValueChange] = useState(\r\n    item.chaosRestValue\r\n  );\r\n  const [guardianRestValueChange, setGuardianRestValueChange] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValueChange, setEponaRestValueChange] = useState(\r\n    item.eponaRestValue\r\n  );\r\n\r\n  const valueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"chaosChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        chaosRestValueChange + (changedValue - chaosRestValueChange) * 10;\r\n      if (valueOutput < 0) setChaosRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValueChange(valueOutput);\r\n      else setChaosRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"guardianChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        guardianRestValueChange + (changedValue - guardianRestValueChange) * 10;\r\n      if (valueOutput < 0) setGuardianRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValueChange(valueOutput);\r\n      else setGuardianRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"eponaChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        eponaRestValueChange + (changedValue - eponaRestValueChange) * 10;\r\n      if (valueOutput < 0) setEponaRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValueChange(valueOutput);\r\n      else setEponaRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const confirmValue = () => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === item._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"chaosRestValue\"] = chaosRestValueChange;\r\n    newArr[indexValue][\"guardianRestValue\"] = guardianRestValueChange;\r\n    newArr[indexValue][\"eponaRestValue\"] = eponaRestValueChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column id={item._id}>\r\n        카던: {item.chaosRestValue}\r\n        <br />\r\n        가디언: {item.guardianRestValue}\r\n        <br />\r\n        에포나: {item.eponaRestValue}\r\n      </Grid.Column>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Header>\r\n          <Image src={characterCdn[item.character]} size=\"mini\" avatar />\r\n          {item.characterName}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextField\r\n            id=\"chaosChange\"\r\n            type=\"number\"\r\n            label=\"카오스던전\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={chaosRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"guardianChange\"\r\n            type=\"number\"\r\n            label=\"가디언토벌\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={guardianRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"eponaChange\"\r\n            type=\"number\"\r\n            label=\"에포나\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={eponaRestValueChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={closeModal}>\r\n            취소\r\n          </Button>\r\n          <Button positive onClick={confirmValue}>\r\n            확인\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestValue;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Image, Icon, Popup } from \"semantic-ui-react\";\r\nimport { characterCdn } from \"../../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport \"./CharacterAvatar.css\";\r\nimport { backendUrl } from \"../util/ConstVar\";\r\n\r\nfunction CharacterAvatar({\r\n  itemId,\r\n  character,\r\n  characterName,\r\n  attributeChanged,\r\n  weeklyAttributeChanged,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  alarmCharacter,\r\n  limit,\r\n  dontChange,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  deviceType,\r\n  activePage,\r\n  setActivePage\r\n}) {\r\n  const [deleteIcon, showDeleteIcon] = useState(false);\r\n\r\n  const [showDontChange, setShowDontChange] = useState(false);\r\n\r\n  const [dontChangeState, setDontChangeState] = useState(dontChange);\r\n\r\n  const [alarmState, setAlarmState] = useState(\"\");\r\n\r\n  const deleteCharacter = (id) => {\r\n    // const indexValue = userTodoData.findIndex((anItem) => {\r\n    //   return anItem._id === id;\r\n    // });\r\n    // let newArr = [...userTodoData];\r\n    // newArr.splice(indexValue, 1);\r\n    // setUserTodoData(newArr);\r\n    // showDeleteIcon(false);\r\n\r\n    axios\r\n      .delete(\r\n        `${backendUrl}/loado/api/homeworks/${itemId}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          response.data.totalLength % limit === 0\r\n        ) {\r\n          if (activePage <= response.data.totalLength / limit) {\r\n            viewPage(activePage);\r\n          } else if (activePage > response.data.totalLength / limit) {\r\n            activePage = response.data.totalLength / limit;\r\n            viewPage(activePage);\r\n          }\r\n        } else {\r\n          viewPage(activePage);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  const dontChangeCharacter = (id) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].dontChange = !dontChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setDontChangeState(!dontChangeState);\r\n    setUserTodoData(newArr);\r\n    showDeleteIcon(false);\r\n  };\r\n\r\n  // 원래 1회 실행으로 useEffect에 []를 넣었지만 이걸 넣으니 되돌아가기가 안됨... 그래서 [] 빼보니 됨\r\n  useEffect(() => {\r\n    let element = document.getElementById(`${itemId}_${characterName}`);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowDontChange(!showDontChange);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column>\r\n        <Image\r\n          src={characterCdn[character]}\r\n          size=\"mini\"\r\n          avatar\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n        />\r\n        {deviceType === \"mobile\" && <br />}\r\n        <span\r\n          onClick={() => showDeleteIcon(!deleteIcon)}\r\n          className={alarmCharacter ? \"alarmLight\" : \"\"}\r\n          id={`${itemId}_${characterName}`}\r\n          data-options={itemId}\r\n        >\r\n          {characterName}\r\n        </span>\r\n        {(attributeChanged || weeklyAttributeChanged) && (\r\n          <Icon\r\n            name=\"edit\"\r\n            size=\"small\"\r\n            style={{ color: \"springgreen\", marginLeft: \"3px\" }}\r\n          />\r\n        )}\r\n        {deleteIcon && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name=\"trash\"\r\n                color=\"red\"\r\n                style={{ cursor: \"pointer\", marginLeft: \"1px\" }}\r\n                onClick={() => deleteCharacter(itemId)}\r\n              />\r\n            }\r\n            content={`'${characterName}'에 대한 정보를 삭제하시겠습니까?`}\r\n          />\r\n        )}\r\n        {showDontChange && (\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                name={dontChangeState ? \"bell\" : \"bell slash\"}\r\n                color=\"yellow\"\r\n                style={{ cursor: \"pointer\", marginLeft: \"1px\" }}\r\n                onClick={() => dontChangeCharacter(itemId)}\r\n              />\r\n            }\r\n            content={\r\n              dontChangeState\r\n                ? `'${characterName}' 휴식게이지 고정취소`\r\n                : `'${characterName}' 휴식게이지 고정`\r\n            }\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterAvatar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextArea, Icon } from \"semantic-ui-react\";\r\n\r\nfunction PerIdNote({ item, userTodoData, setUserTodoData, deviceType }) {\r\n  const [showTextArea, setShowTextArea] = useState(false);\r\n  const [textValue, setTextValue] = useState(item.note);\r\n\r\n  const dontChangeCharacter = (id, theText) => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"note\"] = theText;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  const changeText = (event) => {\r\n    if (event.target.value.length > 20) return;\r\n    setTextValue(event.target.value);\r\n    dontChangeCharacter(item._id, event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!showTextArea ? (\r\n        <>\r\n          {item.note}{\" \"}\r\n          <Icon\r\n            inverted\r\n            name=\"pencil square\"\r\n            color=\"pink\"\r\n            onClick={() => setShowTextArea(!showTextArea)}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </>\r\n      ) : deviceType === \"mobile\" ? (\r\n        <TextArea\r\n          style={{ width: \"100%\" }}\r\n          value={textValue}\r\n          onChange={(event) => changeText(event)}\r\n        />\r\n      ) : (\r\n        <TextArea value={textValue} onChange={(event) => changeText(event)} />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport default PerIdNote;\r\n","import React, { useState } from 'react';\r\nimport { Grid, Dropdown, Checkbox } from 'semantic-ui-react';\r\n\r\nfunction changeArr(arr, match, dataValue, type) {\r\n  const indexValue = arr.findIndex((anItem) => {\r\n    return anItem._id === match;\r\n  });\r\n  let newArr = [...arr];\r\n  newArr[indexValue][type] = dataValue;\r\n  newArr[indexValue]['attributeChanged'] = true;\r\n  return newArr;\r\n}\r\n\r\nfunction ChaosDunValue({\r\n  chaosItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${chaosItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${chaosItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${chaosItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [chaosData, setChaosData] = useState(chaosItem.chaosDone);\r\n\r\n  // 체크박스로 숙제를 체크하고 싶다는 피드백에 따라 작성\r\n  const [chaosDataChecked, setChaosDataChecked] = useState(\r\n    chaosItem.chaosDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setChaosData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      chaosItem._id,\r\n      data.value,\r\n      'chaosDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setChaosDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={chaosData}\r\n        />\r\n      ) : (\r\n        // 체크박스용\r\n        <Checkbox\r\n          name='chaosDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={chaosDataChecked}\r\n          value={chaosDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction GuardianDunValue({\r\n  guardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${guardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${guardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${guardianItem._id}_3`, text: '2회', value: 2 },\r\n  ];\r\n\r\n  const [guardianData, setGuardianData] = useState(guardianItem.guardianDone);\r\n\r\n  const [guardianDataChecked, setGuardianDataChecked] = useState(\r\n    guardianItem.guardianDone === 2 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setGuardianData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      guardianItem._id,\r\n      data.value,\r\n      'guardianDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 2 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column style={{ paddingTop: '1px' }}>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={guardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='guardianDun'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={guardianDataChecked}\r\n          value={guardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction EponaValue({\r\n  eponaItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${eponaItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${eponaItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${eponaItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${eponaItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [eponaData, setEponaData] = useState(eponaItem.eponaDone);\r\n\r\n  const [eponaDataChecked, setEponaDataChecked] = useState(\r\n    eponaItem.eponaDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setEponaData(data.value);\r\n    const newArr = changeArr(\r\n      userTodoData,\r\n      eponaItem._id,\r\n      data.value,\r\n      'eponaDone'\r\n    );\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setEponaDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='epona'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={eponaData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='epona'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={eponaDataChecked}\r\n          value={eponaDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\n// Currently not used for nicer view\r\nfunction WeeklyGuardian({\r\n  weeklyGuardianItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  const options = [\r\n    { key: `${weeklyGuardianItem._id}_1`, text: '0회', value: 0 },\r\n    { key: `${weeklyGuardianItem._id}_2`, text: '1회', value: 1 },\r\n    { key: `${weeklyGuardianItem._id}_3`, text: '2회', value: 2 },\r\n    { key: `${weeklyGuardianItem._id}_4`, text: '3회', value: 3 },\r\n  ];\r\n\r\n  const [weeklyGuardianData, setWeeklyGuardianData] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone\r\n  );\r\n\r\n  const [weeklyGuardianDataChecked, setWeeklyGuardianDataChecked] = useState(\r\n    weeklyGuardianItem.guardianWeeklyDone === 3 ? true : false\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setWeeklyGuardianData(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === weeklyGuardianItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].guardianWeeklyDone = data.value;\r\n    newArr[indexValue]['attributeChanged'] = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  // 체크박스용\r\n  const changeDataChecked = (event, data) => {\r\n    setWeeklyGuardianDataChecked(data.checked);\r\n    if (data.checked) changeData(event, { value: 3 });\r\n    else changeData(event, { value: 0 });\r\n  };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      {!viewByCheckBox ? (\r\n        <Dropdown\r\n          options={options}\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeData(event, data)}\r\n          value={weeklyGuardianData}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          name='weeklyGuardian'\r\n          onChange={(event, data) => changeDataChecked(event, data)}\r\n          checked={weeklyGuardianDataChecked}\r\n          value={weeklyGuardianDataChecked}\r\n        />\r\n      )}\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport { ChaosDunValue, GuardianDunValue, EponaValue, WeeklyGuardian };\r\n","const contentKeyKorToEng = {\r\n  휴식게이지: \"calendar\",\r\n  카오스던전: \"chaosDun\",\r\n  가디언토벌: \"guardianDun\",\r\n  에포나: \"epona\",\r\n  주간가디언: \"guardianDun\",\r\n  어비스던전: \"abyss2types\",\r\n  아르고스: \"argos\",\r\n  발탄: \"baltan\",\r\n  비아키스: \"biakiss\",\r\n  쿠크세이튼: \"kukuseitn\",\r\n  아브렐슈드: \"abrel\",\r\n  오레하2종: \"abyss2types\",\r\n  어비스6종: \"abyss6Types\",\r\n  낙원3종: \"3Nakwon\",\r\n};\r\n\r\nexport default contentKeyKorToEng;\r\n","import React from \"react\";\r\nimport { Grid, Image } from \"semantic-ui-react\";\r\n\r\nimport {\r\n  ChaosDunValue,\r\n  GuardianDunValue,\r\n  EponaValue,\r\n  WeeklyGuardian,\r\n} from \"./DungeonAndEponaUtil\";\r\n\r\nimport contentKeyKorToEng from \"../../../_data/contentDefinition\";\r\n\r\nfunction DungeonAndEpona({\r\n  content,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  viewByCheckBox,\r\n}) {\r\n  return (\r\n    <Grid.Row className=\"eachRow\">\r\n      <Grid.Column className=\"contentColumn\">\r\n        <div>\r\n          <Image\r\n            src={`./images/loa_icons/${contentKeyKorToEng[content]}.png`}\r\n            avatar\r\n            className=\"contentImage\"\r\n          />\r\n          <span>{content}</span>\r\n        </div>\r\n      </Grid.Column>\r\n      {content === \"카오스던전\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <ChaosDunValue\r\n            chaosItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n            viewByCheckBox={viewByCheckBox}\r\n          />\r\n        ))}\r\n      {content === \"가디언토벌\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <GuardianDunValue\r\n            guardianItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n            viewByCheckBox={viewByCheckBox}\r\n          />\r\n        ))}\r\n      {content === \"에포나\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <EponaValue\r\n            eponaItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n            viewByCheckBox={viewByCheckBox}\r\n          />\r\n        ))}\r\n      {content === \"주간가디언\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <WeeklyGuardian\r\n            weeklyGuardianItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n            viewByCheckBox={viewByCheckBox}\r\n          />\r\n        ))}\r\n    </Grid.Row>\r\n  );\r\n}\r\n\r\nexport default DungeonAndEpona;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Checkbox, Dropdown, Label } from \"semantic-ui-react\";\r\n\r\nconst changeDatafunction = (\r\n  event,\r\n  data,\r\n  setItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  findIndexItem,\r\n  changeItem\r\n) => {\r\n  setItem(data.checked);\r\n  const indexValue = userTodoData.findIndex((anItem) => {\r\n    return anItem._id === findIndexItem._id;\r\n  });\r\n  let newArr = [...userTodoData];\r\n  newArr[indexValue][changeItem] = data.checked;\r\n  let attrChanged =\r\n    changeItem === \"abyssDungeonWeekly\"\r\n      ? \"weeklyAttributeChanged\"\r\n      : \"attributeChanged\";\r\n  newArr[indexValue][attrChanged] = true;\r\n  setUserTodoData(newArr);\r\n};\r\n\r\nfunction AbyssDun6Types({ abyssDun6TypesItem, userTodoData, setUserTodoData }) {\r\n  const [abyssDun6Types, setAbyssDun6Types] = useState(\r\n    abyssDun6TypesItem.abyssDungeon6Types\r\n  );\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"AbyssDun6Types\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbyssDun6Types,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abyssDun6TypesItem,\r\n            \"abyssDungeon6Types\"\r\n          )\r\n        }\r\n        checked={abyssDun6Types}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbyssDun3Nakwon({\r\n  abyssDun3NakwonItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n}) {\r\n  const [abyssDun3Nakwon, setAbyssDun3Nakwon] = useState(\r\n    abyssDun3NakwonItem.abyssDungeon3Nakwon\r\n  );\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"AbyssDun3Nakwon\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbyssDun3Nakwon,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abyssDun3NakwonItem,\r\n            \"abyssDungeon3Nakwon\"\r\n          )\r\n        }\r\n        checked={abyssDun3Nakwon}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbyssDun2({ abyssDun2Item, userTodoData, setUserTodoData }) {\r\n  const [abyssDun2, setAbyssDun2] = useState(abyssDun2Item.abyssDungeon2);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"AbyssDun2\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbyssDun2,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abyssDun2Item,\r\n            \"abyssDungeon2\"\r\n          )\r\n        }\r\n        checked={abyssDun2}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbyssRaid({ idx, abyssRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abyssRaid, setAbyssRaid] = useState(abyssRaidItem.abyssDungeonWeekly);\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <Grid.Column style={{ display: \"flex\" }}>\r\n        <Checkbox\r\n          name=\"AbyssRaid\"\r\n          onChange={(event, data) =>\r\n            changeDatafunction(\r\n              event,\r\n              data,\r\n              setAbyssRaid,\r\n              userTodoData,\r\n              setUserTodoData,\r\n              abyssRaidItem,\r\n              \"abyssDungeonWeekly\"\r\n            )\r\n          }\r\n          checked={abyssRaid}\r\n        />\r\n      </Grid.Column>\r\n    )\r\n  );\r\n}\r\n\r\nfunction RehearsalAndDejavu({\r\n  rehearsalAndDejavuItem,\r\n  userTodoData,\r\n  setUserTodoData,\r\n  idx,\r\n}) {\r\n  const options_combo1 = [\r\n    { key: \"kukuseitn\", text: \"쿠크리허설\", value: \"kukuseitn\" },\r\n    { key: \"abrel\", text: \"아브렐데쟈뷰\", value: \"abrel\" },\r\n  ];\r\n  const [rehearsalAndDejavu, setRehearsalAndDejavu] = useState(\r\n    rehearsalAndDejavuItem.rehearsalAndDejavu\r\n  );\r\n\r\n  const changeData = (event, data) => {\r\n    setRehearsalAndDejavu(data.value);\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === rehearsalAndDejavuItem._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue].rehearsalAndDejavu = data.value;\r\n    newArr[indexValue].weeklyAttributeChanged = true;\r\n    setUserTodoData(newArr);\r\n  };\r\n\r\n  return (\r\n    idx === 0 && (\r\n      <>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder=\"쿠크/아브렐\"\r\n            fluid\r\n            multiple\r\n            selection\r\n            options={options_combo1}\r\n            value={rehearsalAndDejavu}\r\n            onChange={(event, data) => changeData(event, data)}\r\n          />\r\n        </Grid.Column>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nfunction ArgosRaid({ argosRaidItem, userTodoData, setUserTodoData }) {\r\n  const [argosRaid, setArgosRaid] = useState(argosRaidItem.argos);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"ArgosRaid\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setArgosRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            argosRaidItem,\r\n            \"argos\"\r\n          )\r\n        }\r\n        checked={argosRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BaltanRaid({ baltanRaidItem, userTodoData, setUserTodoData }) {\r\n  const [baltanRaid, setBaltanRaid] = useState(baltanRaidItem.baltan);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"BaltanRaid\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBaltanRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            baltanRaidItem,\r\n            \"baltan\"\r\n          )\r\n        }\r\n        checked={baltanRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction BiakissRaid({ biakissRaidItem, userTodoData, setUserTodoData }) {\r\n  const [biakissRaid, setBiakissRaid] = useState(biakissRaidItem.biakiss);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"BiakissRaid\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setBiakissRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            biakissRaidItem,\r\n            \"biakiss\"\r\n          )\r\n        }\r\n        checked={biakissRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction KukseitnRaid({ kukseitnRaidItem, userTodoData, setUserTodoData }) {\r\n  const [kukseitnRaid, setKukseitnRaid] = useState(kukseitnRaidItem.kukuseitn);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"KukseitnRaid\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setKukseitnRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            kukseitnRaidItem,\r\n            \"kukuseitn\"\r\n          )\r\n        }\r\n        checked={kukseitnRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nfunction AbrelRaid({ abrelRaidItem, userTodoData, setUserTodoData }) {\r\n  const [abrelRaid, setAbrelRaid] = useState(abrelRaidItem.abrel);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Checkbox\r\n        name=\"AbrelRaid\"\r\n        onChange={(event, data) =>\r\n          changeDatafunction(\r\n            event,\r\n            data,\r\n            setAbrelRaid,\r\n            userTodoData,\r\n            setUserTodoData,\r\n            abrelRaidItem,\r\n            \"abrel\"\r\n          )\r\n        }\r\n        checked={abrelRaid}\r\n      />\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport {\r\n  AbyssDun6Types,\r\n  AbyssDun3Nakwon,\r\n  AbyssDun2,\r\n  AbyssRaid,\r\n  RehearsalAndDejavu,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n};\r\n","import React from \"react\";\r\nimport { Grid, Image } from \"semantic-ui-react\";\r\n\r\nimport {\r\n  AbyssDun6Types,\r\n  AbyssDun3Nakwon,\r\n  AbyssDun2,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n} from \"./AbyssAndRaid\";\r\n\r\nimport contentKeyKorToEng from \"../../../_data/contentDefinition\";\r\n\r\nfunction WeeklyRaidContents({ content, userTodoData, setUserTodoData }) {\r\n  return (\r\n    <Grid.Row className=\"eachRow\">\r\n      <Grid.Column className=\"contentColumn\">\r\n        <div>\r\n          <Image\r\n            src={`./images/loa_icons/${contentKeyKorToEng[content]}.png`}\r\n            avatar\r\n            className=\"contentImage\"\r\n          />\r\n          <span>{content}</span>\r\n        </div>\r\n      </Grid.Column>\r\n      {content === \"어비스6종\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <AbyssDun6Types\r\n            abyssDun6TypesItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"낙원3종\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <AbyssDun3Nakwon\r\n            abyssDun3NakwonItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"오레하2종\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <AbyssDun2\r\n            abyssDun2Item={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"아르고스\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <ArgosRaid\r\n            argosRaidItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"발탄\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <BaltanRaid\r\n            baltanRaidItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"비아키스\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <BiakissRaid\r\n            biakissRaidItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"쿠크세이튼\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <KukseitnRaid\r\n            kukseitnRaidItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n      {content === \"아브렐슈드\" &&\r\n        userTodoData.map((item, idx) => (\r\n          <AbrelRaid\r\n            abrelRaidItem={item}\r\n            userTodoData={userTodoData}\r\n            setUserTodoData={setUserTodoData}\r\n          />\r\n        ))}\r\n    </Grid.Row>\r\n  );\r\n}\r\n\r\nexport default WeeklyRaidContents;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nfunction AddAndChange({ addCharacter, applyChanges }) {\r\n  return (\r\n    <div className=\"headerValueEnd\">\r\n      <Button inverted color=\"olive\" onClick={addCharacter}>\r\n        케릭터 추가\r\n      </Button>\r\n      <Button inverted color=\"red\" onClick={applyChanges}>\r\n        변경사항 저장\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddAndChange;\r\n","import React from 'react';\r\nimport { Pagination } from 'semantic-ui-react';\r\n\r\nfunction PaginationComp({ pagination, activePage, pageChange, deviceType }) {\r\n  return (\r\n    <div className='headerValueCenter'>\r\n      <Pagination\r\n        // defaultActivePage={1}\r\n        firstItem={null}\r\n        lastItem={null}\r\n        pointing\r\n        secondary\r\n        totalPages={pagination}\r\n        activePage={activePage}\r\n        onPageChange={(event, data) => pageChange(event, data)}\r\n        size={deviceType === 'mobile' && 'mini'}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginationComp;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction SettingChange({\r\n  viewByCheckBox,\r\n  deviceType,\r\n  changeUserCheckBoxConfigurationFunction,\r\n}) {\r\n  const todayDate = new Date(Date.now());\r\n  const today = `${todayDate.getFullYear()}-${\r\n    todayDate.getMonth() + 1\r\n  }-${todayDate.getDate()}`;\r\n\r\n  return (\r\n    <div className=\"headerValueStart\">\r\n      <Header size=\"medium\" style={{ color: \"white\", paddingTop: \"5px\" }}>\r\n        {deviceType !== \"mobile\" && today}{\" \"}\r\n        <Label\r\n          as=\"a\"\r\n          basic\r\n          image\r\n          style={{ marginLeft: \"30px\" }}\r\n          onClick={() =>\r\n            changeUserCheckBoxConfigurationFunction(!viewByCheckBox)\r\n          }\r\n        >\r\n          {!viewByCheckBox ? (\r\n            <>\r\n              <Icon name=\"checkmark box\" />\r\n              {deviceType !== \"mobile\" && \"로 보기\"}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Icon name=\"angle double down\" />\r\n              {deviceType !== \"mobile\" && \"로 보기\"}\r\n            </>\r\n          )}\r\n        </Label>\r\n      </Header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingChange;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction AlarmAndNote({\r\n  alarmTrue,\r\n  alarmRestValue,\r\n  userTodoData,\r\n  showNote,\r\n  setShowNote,\r\n}) {\r\n  return (\r\n    <Header\r\n      as=\"h4\"\r\n      style={{\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        padding: \".78571429em 1.5em .78571429em\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={alarmTrue ? \"alarm\" : \"alarm mute\"}\r\n          onClick={() => alarmRestValue(userTodoData)}\r\n        />\r\n        {\"  //  \"}\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={!showNote ? \"sticky note outline\" : \"angle double up\"}\r\n          onClick={() => setShowNote(!showNote)}\r\n        />\r\n      </div>\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default AlarmAndNote;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./userHomework.css\";\r\nimport AddCharacter from \"../components/characterRelated/AddCharacter\";\r\n\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Container,\r\n  Icon,\r\n  Dimmer,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\nimport RestValue from \"../components/userHomework/RestValue\";\r\nimport CharacterAvatar from \"../components/characterRelated/CharacterAvatar\";\r\nimport PerIdNote from \"../components/userHomework/PerIdNote\";\r\nimport DungeonAndEpona from \"../components/userHomework/DungeonAndEpona\";\r\nimport WeeklyRaidContents from \"../components/userHomework/WeeklyRaidContents\";\r\n\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { backendUrl, axiosConfigAuth } from \"../components/util/ConstVar\";\r\nimport {\r\n  viewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n} from \"../components/util/ViewDataUtil\";\r\nimport AddAndChange from \"../components/userHomework/AddAndChange\";\r\nimport PaginationComp from \"../components/userHomework/PaginationComp\";\r\nimport SettingChange from \"../components/userHomework/SettingChange\";\r\nimport AlarmAndNote from \"../components/userHomework/AlarmAndNote\";\r\n\r\nfunction CharacterToDoRow({ limit, type }) {\r\n  const [userTodoData, setUserTodoData] = useState([]);\r\n\r\n  const [addCharacterModal, setAddCharacterModal] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const [pagination, setPagination] = useState(0);\r\n\r\n  const [viewByCheckBox, setViewByCheckBox] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const addCharacter = () => {\r\n    setAddCharacterModal(true);\r\n  };\r\n\r\n  const closeAddCharacter = () => {\r\n    setAddCharacterModal(false);\r\n  };\r\n\r\n  const viewPage = async (theActivePage = \"\") => {\r\n    setLoading(true);\r\n    setUserTodoData([]);\r\n\r\n    const resultData = await viewDataMain(\r\n      limit,\r\n      theActivePage ? theActivePage : activePage,\r\n      setActivePage,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    if (resultData.success) {\r\n      setUserTodoData(resultData.viewData.data);\r\n      setPagination(resultData.setPage);\r\n    } else {\r\n      toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const applyChanges = async () => {\r\n    setLoading(true);\r\n\r\n    let submitData = userTodoData.filter(\r\n      (item) => item.attributeChanged === true\r\n    );\r\n\r\n    const applyResult = await applyChangesUtil(\r\n      submitData,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    setLoading(false);\r\n    if (applyResult) {\r\n      toastMessage(\"일부 변경사항이 제대로 반영되지 않았습니다\", \"error\");\r\n    }\r\n    viewPage();\r\n  };\r\n\r\n  const pageChange = async (event, data) => {\r\n    setLoading(true);\r\n    setActivePage(data.activePage);\r\n\r\n    // 샙트님 이거 2페이지에 있는 캐릭터 바꾸면 1페이지 같은 자리 있는것두 바뀌는거 같아여\r\n    // 이거 안 해주면 현재 페이지에서 바꾼 ID위치의 정보가 그대로 남아서 사용자에게 모든 페이지의 변경사항이 반영되는 것처럼 보임\r\n    setUserTodoData([]);\r\n\r\n    await axios\r\n      .get(\r\n        `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${data.activePage}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const changeUserCheckBoxConfigurationFunction = async (viewByCheckBox) => {\r\n    const result = await changeUserCheckBoxConfiguration(\r\n      viewByCheckBox,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n    if (result) {\r\n      setViewByCheckBox(viewByCheckBox);\r\n    }\r\n  };\r\n\r\n  // for alarm animation\r\n  const [alarmTrue, setAlarmTrue] = useState(true);\r\n\r\n  // for note per list\r\n  const [showNote, setShowNote] = useState(false);\r\n\r\n  const alarmRestValue = (todoList) => {\r\n    const alarmDataResult = alarmRestValueUtil(todoList, alarmTrue);\r\n    setUserTodoData(alarmDataResult.alarmList);\r\n    setAlarmTrue(alarmDataResult.alarm);\r\n  };\r\n\r\n  // if no user cookie then redirect to login page\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    !loginCookie && history.push(\"/login\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    viewPage();\r\n\r\n    async function callUsersCheckBoxValue() {\r\n      const resultData = await getUserCheckBoxConfiguration(\r\n        cookie.get(\"loadoUserToken\")\r\n      );\r\n      setViewByCheckBox(resultData);\r\n    }\r\n    callUsersCheckBoxValue();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Segment\r\n          className=\"fullPage\"\r\n          style={{ height: \"94vh\", border: \"none\" }}\r\n        >\r\n          <Dimmer active>\r\n            <Loader size=\"big\">로딩중</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      ) : (\r\n        <Segment id=\"gridSegment\">\r\n          <Grid className=\"fullPage\">\r\n            <Container id=\"gridContainer\">\r\n              <Grid.Column width={16}>\r\n                <Segment\r\n                  basic\r\n                  className=\"contentHeader\"\r\n                  style={{ marginBottom: \"0px\" }}\r\n                >\r\n                  <SettingChange\r\n                    viewByCheckBox={viewByCheckBox}\r\n                    setViewByCheckBox={setViewByCheckBox}\r\n                    changeUserCheckBoxConfigurationFunction={\r\n                      changeUserCheckBoxConfigurationFunction\r\n                    }\r\n                  />\r\n                  <PaginationComp\r\n                    pagination={pagination}\r\n                    activePage={activePage}\r\n                    pageChange={pageChange}\r\n                  />\r\n                  <AddAndChange\r\n                    addCharacter={addCharacter}\r\n                    applyChanges={applyChanges}\r\n                  />\r\n                </Segment>\r\n                <Segment\r\n                  basic\r\n                  style={{ backgroundColor: \"dimgray\", marginTop: \"0px\" }}\r\n                >\r\n                  <Grid columns={limit + 1}>\r\n                    <Grid.Row\r\n                      style={{\r\n                        borderBottom: !showNote && \"0.05rem inset ivory\",\r\n                      }}\r\n                    >\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <AlarmAndNote\r\n                          alarmTrue={alarmTrue}\r\n                          alarmRestValue={alarmRestValue}\r\n                          userTodoData={userTodoData}\r\n                          showNote={showNote}\r\n                          setShowNote={setShowNote}\r\n                        />\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <CharacterAvatar\r\n                          itemId={item._id}\r\n                          character={item.character}\r\n                          characterName={item.characterName}\r\n                          attributeChanged={item.attributeChanged}\r\n                          weeklyAttributeChanged={item.weeklyAttributeChanged}\r\n                          axiosConfigAuth={axiosConfigAuth}\r\n                          viewPage={viewPage}\r\n                          alarmCharacter={item.alarmCharacter}\r\n                          limit={limit}\r\n                          dontChange={item.dontChange}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                          activePage={activePage}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    {showNote && (\r\n                      <Grid.Row\r\n                        style={{\r\n                          padding: 0,\r\n                          borderBottom: \"0.05rem inset ivory\",\r\n                          paddingBottom: \"7px\",\r\n                        }}\r\n                      >\r\n                        <Grid.Column />\r\n                        {userTodoData.map((item, idx) => (\r\n                          <PerIdNote\r\n                            item={item}\r\n                            userTodoData={userTodoData}\r\n                            setUserTodoData={setUserTodoData}\r\n                          />\r\n                        ))}\r\n                      </Grid.Row>\r\n                    )}\r\n                    <Grid.Row className=\"eachRow\">\r\n                      <Grid.Column className=\"contentColumn\">\r\n                        <Icon name=\"calendar check outline\" />\r\n                        휴식게이지\r\n                      </Grid.Column>\r\n                      {userTodoData.map((item, idx) => (\r\n                        <RestValue\r\n                          item={item}\r\n                          userTodoData={userTodoData}\r\n                          setUserTodoData={setUserTodoData}\r\n                        />\r\n                      ))}\r\n                    </Grid.Row>\r\n                    {Array.from([\r\n                      \"카오스던전\",\r\n                      \"가디언토벌\",\r\n                      \"에포나\",\r\n                      \"주간가디언\",\r\n                    ]).map((item, idx) => (\r\n                      <DungeonAndEpona\r\n                        content={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n\r\n                    {Array.from([\r\n                      \"어비스6종\",\r\n                      \"낙원3종\",\r\n                      \"오레하2종\",\r\n                      \"아르고스\",\r\n                      \"발탄\",\r\n                      \"비아키스\",\r\n                      \"쿠크세이튼\",\r\n                      \"아브렐슈드\",\r\n                    ]).map((item, idx) => (\r\n                      <WeeklyRaidContents\r\n                        content={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                        viewByCheckBox={viewByCheckBox}\r\n                      />\r\n                    ))}\r\n\r\n                    {/* 원정대 주간 컨탠츠는 안 보이게 하기로 결정 */}\r\n                    {/* <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/abyssWeekly.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>어비스레이드</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <AbyssRaid\r\n                        idx={idx}\r\n                        abyssRaidItem={item}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row className=\"eachRow\">\r\n                    <Grid.Column className=\"contentColumn\">\r\n                      <div>\r\n                        <Image\r\n                          src=\"./images/loa_icons/rehearsal.png\"\r\n                          avatar\r\n                          className=\"contentImage\"\r\n                        />\r\n                        <span>리허설, 데쟈뷰</span>\r\n                      </div>\r\n                    </Grid.Column>\r\n                    {userTodoData.map((item, idx) => (\r\n                      <RehearsalAndDejavu\r\n                        rehearsalAndDejavuItem={item}\r\n                        idx={idx}\r\n                        userTodoData={userTodoData}\r\n                        setUserTodoData={setUserTodoData}\r\n                      />\r\n                    ))}\r\n                  </Grid.Row> */}\r\n                  </Grid>\r\n                </Segment>\r\n              </Grid.Column>\r\n            </Container>\r\n          </Grid>\r\n        </Segment>\r\n      )}\r\n\r\n      {addCharacterModal && (\r\n        <AddCharacter\r\n          addCharacterModal={addCharacterModal}\r\n          closeAddCharacter={closeAddCharacter}\r\n          userTodoData={userTodoData}\r\n          axiosConfigAuth={axiosConfigAuth}\r\n          viewPage={viewPage}\r\n          limit={limit}\r\n          activePage={activePage}\r\n        />\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDoRow;\r\n","import CharacterToDoRow from \"./userHomework\";\r\n\r\nexport default CharacterToDoRow;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Image,\r\n  Header,\r\n  Input,\r\n  Label,\r\n  List,\r\n  Button,\r\n  Dropdown,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { characterCdn, characterKorean } from \"../../../_data/characterDefinition\";\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { backendUrl } from \"../util/ConstVar\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport \"./AddCharacter.css\";\r\n\r\nfunction AddCharacter({\r\n  addCharacterModal,\r\n  closeAddCharacter,\r\n  userTodoData,\r\n  axiosConfigAuth,\r\n  viewPage,\r\n  limit,\r\n}) {\r\n  const [selectCharacterModal, setSelectCharacterModal] = useState(false);\r\n  const [selectedCharacter, setSelectedCharacter] = useState(\"\");\r\n  const [characterName, setCharacterName] = useState(\"\");\r\n  const [chaosRestValue, setChaosRestValue] = useState(0);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(0);\r\n  const [eponaRestValue, setEponaRestValue] = useState(0);\r\n  const regex = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|]+$/;\r\n  const regexNumber = /^[0-9]+$/;\r\n\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n  const mobileInputRef = useRef();\r\n\r\n  const closeSelectCharacter = () => setSelectCharacterModal(false);\r\n\r\n  const modalShow = () => {\r\n    setSelectCharacterModal(true);\r\n  };\r\n\r\n  const classSelected = (event) => {\r\n    let selectedClass;\r\n    if (event.target.className.indexOf(\"image\") > 0) {\r\n      selectedClass = event.target.dataset.options;\r\n    } else {\r\n      selectedClass = event.target.className.split(\" \")[2];\r\n    }\r\n    setSelectedCharacter(selectedClass);\r\n    setSelectCharacterModal(false);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const closeAddCharacterModal = () => {\r\n    setSelectedCharacter(\"\");\r\n    setCharacterName(\"\");\r\n    setChaosRestValue(0);\r\n    setGuardianRestValue(0);\r\n    setEponaRestValue(0);\r\n    closeAddCharacter();\r\n  };\r\n\r\n  const changeInputCharName = (event, data) => {\r\n    const insertedValue = data.value;\r\n    if (insertedValue.length === 0) {\r\n      setCharacterName(\"\");\r\n      return;\r\n    }\r\n    if (!regex.test(insertedValue) || insertedValue.length > 12) return;\r\n    setCharacterName(insertedValue);\r\n  };\r\n\r\n  const changeRestValue = (event, data) => {\r\n    event.preventDefault();\r\n    if (!regexNumber.test(event.target.value)) return;\r\n    if (event.target.id === \"chaosChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = chaosRestValue + (changedValue - chaosRestValue) * 10;\r\n      if (valueOutput < 0) setChaosRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValue(valueOutput);\r\n      else setChaosRestValue(100);\r\n    }\r\n    if (event.target.id === \"guardianChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput =\r\n        guardianRestValue + (changedValue - guardianRestValue) * 10;\r\n      if (valueOutput < 0) setGuardianRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValue(valueOutput);\r\n      else setGuardianRestValue(100);\r\n    }\r\n    if (event.target.id === \"eponaChange\") {\r\n      const changedValue = event.target.value;\r\n      const valueOutput = eponaRestValue + (changedValue - eponaRestValue) * 10;\r\n      if (valueOutput < 0) setEponaRestValue(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValue(valueOutput);\r\n      else setEponaRestValue(100);\r\n    }\r\n  };\r\n\r\n  const confirmAddCharacter = () => {\r\n    const createdData = {\r\n      // _id: \"5d725a037b292f5f8ceff795\",\r\n      // user: \"5d7a514b5d2c12c7449be042\",\r\n      character: selectedCharacter,\r\n      characterName: characterName,\r\n      date: Date.now(),\r\n      // idx: 2,\r\n      chaosRestValue,\r\n      guardianRestValue,\r\n      eponaRestValue,\r\n      chaosDone: 0,\r\n      guardianDone: 0,\r\n      eponaDone: 0,\r\n      guardianWeeklyDone: 0,\r\n      abyssDungeon2: false,\r\n      // abyssDungeonWeekly: true,\r\n      // rehearsalAndDejavu: [\"kukuseitn\", \"abrel\"],\r\n      argos: false,\r\n      baltan: false,\r\n      biakiss: false,\r\n      kukuseitn: false,\r\n      abrel: false,\r\n      attributeChanged: false,\r\n      weeklyAttributeChanged: false,\r\n      createdAt: Date.now(),\r\n    };\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/homeworks`,\r\n        createdData,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        // setUserTodoData([...userTodoData, response.data.data]);\r\n        if (\r\n          response.data.totalLength > 0 &&\r\n          userTodoData.length % limit === 0\r\n        ) {\r\n          viewPage(false, true, response.data.totalLength);\r\n        } else {\r\n          viewPage(false, false);\r\n        }\r\n        closeAddCharacterModal();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.error, {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n        });\r\n        closeAddCharacterModal();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const classElements = document.getElementsByClassName(\r\n      \"characterClassContent\"\r\n    );\r\n    let eventAdd;\r\n    for (let index = 0; index < classElements.length; index++) {\r\n      eventAdd = classElements[index].addEventListener(\"click\", (event) => {\r\n        classSelected(event);\r\n      });\r\n    }\r\n    return () => {\r\n      for (let index = 0; index < classElements.length; index++) {\r\n        classElements[index].removeEventListener(\"click\", eventAdd);\r\n      }\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById(\"characterNameInputId\");\r\n    const enterEvent = element.addEventListener(\"keypress\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        if (buttonRef.current) buttonRef.current.click();\r\n      }\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"keypress\", enterEvent);\r\n    };\r\n  }, []);\r\n\r\n  // for mobile\r\n  const [fullList, setFullList] = useState([]);\r\n  const [mobileDropDownList, setMobileDropDownList] = useState([]);\r\n  useEffect(() => {\r\n    const aList = [];\r\n    for (var key in characterCdn) {\r\n      const addItem = {\r\n        key,\r\n        text: characterKorean[key],\r\n        value: key,\r\n        image: { avatar: true, src: characterCdn[key] },\r\n      };\r\n      aList.push(addItem);\r\n    }\r\n    setFullList(aList);\r\n    setMobileDropDownList(aList);\r\n    if (mobileInputRef.current) mobileInputRef.current.focus();\r\n  }, [selectCharacterModal]);\r\n  const filterDropDown = (event, data) => {\r\n    if (!data.value) {\r\n      setMobileDropDownList(fullList);\r\n      return;\r\n    }\r\n\r\n    const filteredList = fullList.filter((item) => {\r\n      return item.text.indexOf(data.value) > -1;\r\n    });\r\n    setMobileDropDownList(filteredList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={addCharacterModal}\r\n        onClose={closeAddCharacterModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        // centered={false}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: \"dimgray\" }}>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            {!selectedCharacter ? (\r\n              <>\r\n                <span className=\"itemHeaderAttribute1\">클래스:</span>\r\n                <Icon\r\n                  name=\"add square\"\r\n                  size=\"large\"\r\n                  color=\"white\"\r\n                  onClick={modalShow}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"itemHeaderAttribute2\">클래스:</span>\r\n                <span onClick={() => setSelectCharacterModal(true)}>\r\n                  <Image\r\n                    src={characterCdn[selectedCharacter]}\r\n                    size=\"mini\"\r\n                    avatar\r\n                  />\r\n                  {characterKorean[selectedCharacter]}\r\n                </span>\r\n              </>\r\n            )}\r\n          </Header>\r\n          <Header className=\"itemHeader\" as=\"h4\">\r\n            <span style={{ marginRight: \"40px\" }}>케릭명:</span>\r\n            <Input\r\n              transparent\r\n              placeholder=\"케릭터명\"\r\n              style={{ color: \"white\" }}\r\n              className=\"charNameInput\"\r\n              value={characterName}\r\n              ref={inputRef}\r\n              id=\"characterNameInputId\"\r\n              onChange={(event, data) => changeInputCharName(event, data)}\r\n            />\r\n          </Header>\r\n          <Header className=\"itemHeaderRest\" as=\"h4\">\r\n            <List divided selection>\r\n              <List.Item>\r\n                <Label horizontal>카오스던전</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={chaosRestValue}\r\n                  id=\"chaosChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>가디언토벌</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={guardianRestValue}\r\n                  id=\"guardianChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n              <List.Item>\r\n                <Label horizontal>에포나</Label>\r\n                <Input\r\n                  transparent\r\n                  style={{ color: \"white\" }}\r\n                  className=\"charNameInput\"\r\n                  value={eponaRestValue}\r\n                  id=\"eponaChange\"\r\n                  onChange={(event, data) => changeRestValue(event, data)}\r\n                />\r\n              </List.Item>\r\n            </List>\r\n          </Header>\r\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <Button\r\n              circular\r\n              color=\"google plus\"\r\n              icon=\"cancel\"\r\n              onClick={closeAddCharacterModal}\r\n            />\r\n            <Button\r\n              circular\r\n              color=\"twitter\"\r\n              icon=\"check\"\r\n              onClick={confirmAddCharacter}\r\n            />\r\n            <button\r\n              ref={buttonRef}\r\n              onClick={confirmAddCharacter}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n      {selectCharacterModal && (\r\n        <Modal\r\n          open={selectCharacterModal}\r\n          onClose={closeSelectCharacter}\r\n          // centered={false}\r\n          className=\"classSelectModal\"\r\n        >\r\n          <Modal.Header\r\n            style={{\r\n              backgroundColor: \"#384862\",\r\n              color: \"white\",\r\n              borderBottom: \"1px solid white\",\r\n            }}\r\n          >\r\n            클래스선택\r\n          </Modal.Header>\r\n          <Modal.Content style={{ backgroundColor: \"#384862\", color: \"white\" }}>\r\n            <Segment>\r\n              <Input\r\n                icon=\"search\"\r\n                iconPosition=\"left\"\r\n                className=\"search\"\r\n                ref={mobileInputRef}\r\n                onChange={(event, data) => filterDropDown(event, data)}\r\n              />\r\n              <br />\r\n              <Dropdown open={true}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Header icon=\"tags\" content=\"직업\" />\r\n                  <Dropdown.Menu scrolling>\r\n                    {mobileDropDownList.map((option) => (\r\n                      <Dropdown.Item\r\n                        key={option.value}\r\n                        {...option}\r\n                        onClick={(event, data) => {\r\n                          setSelectedCharacter(data.value);\r\n                          setSelectCharacterModal(false);\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </Dropdown.Menu>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Segment>\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Modal, Image, Button } from \"semantic-ui-react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { characterCdn } from \"../../../_data/characterDefinition\";\r\n\r\nfunction RestValueMobile({ item, userTodoData, setUserTodoData }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(item._id);\r\n    const rightclickEvent = element.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n      setShowModal(true);\r\n    });\r\n    return () => {\r\n      element.removeEventListener(\"contextmenu\", rightclickEvent);\r\n    };\r\n  });\r\n\r\n  // if you use setShowModal directly in Modal onClose, react will throw error\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const [chaosRestValue, setChaosRestValue] = useState(item.chaosRestValue);\r\n  const [guardianRestValue, setGuardianRestValue] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValue, setEponaRestValue] = useState(item.eponaRestValue);\r\n\r\n  const [chaosRestValueChange, setChaosRestValueChange] = useState(\r\n    item.chaosRestValue\r\n  );\r\n  const [guardianRestValueChange, setGuardianRestValueChange] = useState(\r\n    item.guardianRestValue\r\n  );\r\n  const [eponaRestValueChange, setEponaRestValueChange] = useState(\r\n    item.eponaRestValue\r\n  );\r\n\r\n  const valueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.id === \"chaosChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        chaosRestValueChange + (changedValue - chaosRestValueChange) * 10;\r\n      if (valueOutput < 0) setChaosRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setChaosRestValueChange(valueOutput);\r\n      else setChaosRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"guardianChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        guardianRestValueChange + (changedValue - guardianRestValueChange) * 10;\r\n      if (valueOutput < 0) setGuardianRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setGuardianRestValueChange(valueOutput);\r\n      else setGuardianRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n    if (e.target.id === \"eponaChange\") {\r\n      const changedValue = e.target.value;\r\n      const valueOutput =\r\n        eponaRestValueChange + (changedValue - eponaRestValueChange) * 10;\r\n      if (valueOutput < 0) setEponaRestValueChange(0);\r\n      else if (0 <= valueOutput && valueOutput <= 100)\r\n        setEponaRestValueChange(valueOutput);\r\n      else setEponaRestValueChange(100);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const confirmValue = () => {\r\n    const indexValue = userTodoData.findIndex((anItem) => {\r\n      return anItem._id === item._id;\r\n    });\r\n    let newArr = [...userTodoData];\r\n    newArr[indexValue][\"chaosRestValue\"] = chaosRestValueChange;\r\n    newArr[indexValue][\"guardianRestValue\"] = guardianRestValueChange;\r\n    newArr[indexValue][\"eponaRestValue\"] = eponaRestValueChange;\r\n    newArr[indexValue][\"attributeChanged\"] = true;\r\n    setUserTodoData(newArr);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column id={item._id}>\r\n        카오스: {item.chaosRestValue}\r\n        <br />\r\n        가디언: {item.guardianRestValue}\r\n        <br />\r\n        에포나: {item.eponaRestValue}\r\n      </Grid.Column>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={showModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Header>\r\n          <Image src={characterCdn[item.character]} size=\"mini\" avatar />\r\n          {item.characterName}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextField\r\n            id=\"chaosChange\"\r\n            type=\"number\"\r\n            label=\"카오스던전\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={chaosRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"guardianChange\"\r\n            type=\"number\"\r\n            label=\"가디언토벌\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={guardianRestValueChange}\r\n          />\r\n          <TextField\r\n            id=\"eponaChange\"\r\n            type=\"number\"\r\n            label=\"에포나\"\r\n            onChange={(e) => valueChange(e)}\r\n            value={eponaRestValueChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={closeModal}>\r\n            취소\r\n          </Button>\r\n          <Button positive onClick={confirmValue}>\r\n            확인\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestValueMobile;\r\n","import React from \"react\";\r\nimport { Header, Label, Icon } from \"semantic-ui-react\";\r\n\r\nfunction AlarmAndNoteMobile({\r\n  alarmTrue,\r\n  alarmRestValue,\r\n  userTodoData,\r\n  showNote,\r\n  setShowNote,\r\n}) {\r\n  return (\r\n    <Header\r\n      as=\"h4\"\r\n      style={{\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        padding: \".78571429em 1.5em .78571429em\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={alarmTrue ? \"alarm\" : \"alarm mute\"}\r\n          onClick={() => alarmRestValue(userTodoData)}\r\n        />\r\n        {\"  //  \"}\r\n        <Icon\r\n          className=\"iconClass\"\r\n          name={!showNote ? \"sticky note outline\" : \"angle double up\"}\r\n          onClick={() => setShowNote(!showNote)}\r\n        />\r\n      </div>\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default AlarmAndNoteMobile;\r\n","import { Image } from 'semantic-ui-react';\r\n\r\nconst showContentPopupValue = (content) => {\r\n  const justContent = (\r\n    <div\r\n      style={{\r\n        backgroundColor: 'rgb(56, 72, 98)',\r\n        color: 'white',\r\n        padding: '5px',\r\n        fontSize: '10px',\r\n      }}\r\n    >\r\n      {content}\r\n    </div>\r\n  );\r\n\r\n  const contentKeyKorToEng = {\r\n    휴식게이지: 'calendar',\r\n    카오스던전: 'chaosDun',\r\n    가디언토벌: 'guardianDun',\r\n    에포나: 'epona',\r\n    주간가디언: 'guardianDun',\r\n    어비스던전: 'abyss2types',\r\n    아르고스: 'argos',\r\n    발탄: 'baltan',\r\n    비아키스: 'biakiss',\r\n    쿠크세이튼: 'kukuseitn',\r\n    아브렐슈드: 'abrel',\r\n  };\r\n\r\n  const imageContent = (\r\n    <div>\r\n      <Image\r\n        src={`./images/loa_icons/${contentKeyKorToEng[content]}.png`}\r\n        avatar\r\n        className='contentImage'\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return [imageContent, justContent];\r\n};\r\n\r\nexport { showContentPopupValue };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./userHomeworkMobile.css\";\r\nimport AddCharacterMobile from \"../components/characterRelated/AddCharacterMobile\";\r\n\r\nimport { Segment, Grid, Icon, Dimmer, Loader, Popup } from \"semantic-ui-react\";\r\nimport RestValueMobile from \"../components/userHomework/RestValueMobile\";\r\nimport CharacterAvatar from \"../components/characterRelated/CharacterAvatar\";\r\nimport {\r\n  ChaosDunValue,\r\n  GuardianDunValue,\r\n  EponaValue,\r\n  WeeklyGuardian,\r\n} from \"../components/userHomework/DungeonAndEponaUtil\";\r\nimport {\r\n  AbyssDun2,\r\n  ArgosRaid,\r\n  BaltanRaid,\r\n  BiakissRaid,\r\n  KukseitnRaid,\r\n  AbrelRaid,\r\n} from \"../components/userHomework/AbyssAndRaid\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { backendUrl, axiosConfigAuth } from \"../components/util/ConstVar\";\r\nimport {\r\n  viewDataMain,\r\n  applyChangesUtil,\r\n  alarmRestValueUtil,\r\n  toastMessage,\r\n  getUserCheckBoxConfiguration,\r\n  changeUserCheckBoxConfiguration,\r\n} from \"../components/util/ViewDataUtil\";\r\nimport AddAndChange from \"../components/userHomework/AddAndChange\";\r\nimport PaginationComp from \"../components/userHomework/PaginationComp\";\r\nimport SettingChange from \"../components/userHomework/SettingChange\";\r\nimport AlarmAndNoteMobile from \"../components/userHomework/AlarmAndNoteMobile\";\r\nimport { showContentPopupValue } from \"../components/util/ContentDefinition\";\r\nimport PerIdNote from \"../components/userHomework/PerIdNote\";\r\n\r\nfunction CharacterToDoRowMobile({ limit, type }) {\r\n  const [userTodoData, setUserTodoData] = useState([]);\r\n\r\n  const [addCharacterModal, setAddCharacterModal] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const [pagination, setPagination] = useState(0);\r\n\r\n  const [viewByCheckBox, setViewByCheckBox] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const addCharacter = () => {\r\n    setAddCharacterModal(true);\r\n  };\r\n\r\n  const closeAddCharacter = () => {\r\n    setAddCharacterModal(false);\r\n  };\r\n\r\n  const viewPage = async (theActivePage = \"\") => {\r\n    setLoading(true);\r\n    setUserTodoData([]);\r\n\r\n    const resultData = await viewDataMain(\r\n      limit,\r\n      theActivePage ? theActivePage : activePage,\r\n      setActivePage,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    if (resultData.success) {\r\n      setUserTodoData(resultData.viewData.data);\r\n      setPagination(resultData.setPage);\r\n    } else {\r\n      toastMessage(\"데이터를 불러오지 못했습니다\", \"error\", \"mobile\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const applyChanges = async () => {\r\n    setLoading(true);\r\n\r\n    let submitData = userTodoData.filter(\r\n      (item) => item.attributeChanged === true\r\n    );\r\n\r\n    const applyResult = await applyChangesUtil(\r\n      submitData,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n\r\n    setLoading(false);\r\n    if (applyResult) {\r\n      toastMessage(\"일부 변경사항이 제대로 반영되지 않았습니다\", \"error\");\r\n    }\r\n    viewPage();\r\n  };\r\n\r\n  const pageChange = async (event, data) => {\r\n    setLoading(true);\r\n    setActivePage(data.activePage);\r\n\r\n    // 샙트님 이거 2페이지에 있는 캐릭터 바꾸면 1페이지 같은 자리 있는것두 바뀌는거 같아여\r\n    // 이거 안 해주면 현재 페이지에서 바꾼 ID위치의 정보가 그대로 남아서 사용자에게 모든 페이지의 변경사항이 반영되는 것처럼 보임\r\n    setUserTodoData([]);\r\n\r\n    await axios\r\n      .get(\r\n        `${backendUrl}/loado/api/homeworks?limit=${limit}&page=${data.activePage}`,\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        setUserTodoData(response.data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        toastMessage(\"데이터를 불러오지 못했습니다\", \"error\");\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const changeUserCheckBoxConfigurationFunction = async (viewByCheckBox) => {\r\n    const result = await changeUserCheckBoxConfiguration(\r\n      viewByCheckBox,\r\n      cookie.get(\"loadoUserToken\")\r\n    );\r\n    if (result) {\r\n      setViewByCheckBox(viewByCheckBox);\r\n    }\r\n  };\r\n\r\n  // for alarm animation\r\n  const [alarmTrue, setAlarmTrue] = useState(true);\r\n\r\n  // for note per list\r\n  const [showNote, setShowNote] = useState(false);\r\n\r\n  const alarmRestValue = (todoList) => {\r\n    const alarmDataResult = alarmRestValueUtil(todoList, alarmTrue);\r\n    setUserTodoData(alarmDataResult.alarmList);\r\n    setAlarmTrue(alarmDataResult.alarm);\r\n  };\r\n\r\n  // if no user cookie then redirect to login page\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    !loginCookie && history.push(\"/login\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    viewPage();\r\n\r\n    async function callUsersCheckBoxValue() {\r\n      const resultData = await getUserCheckBoxConfiguration(\r\n        cookie.get(\"loadoUserToken\")\r\n      );\r\n      setViewByCheckBox(resultData);\r\n    }\r\n    callUsersCheckBoxValue();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Segment\r\n          className=\"fullPage\"\r\n          style={{ height: \"94vh\", border: \"none\" }}\r\n        >\r\n          <Dimmer active>\r\n            <Loader size=\"big\">로딩중</Loader>\r\n          </Dimmer>\r\n        </Segment>\r\n      ) : (\r\n        <Segment id=\"mobileMainPageSegment\">\r\n          <PaginationComp\r\n            pagination={pagination}\r\n            activePage={activePage}\r\n            pageChange={pageChange}\r\n            deviceType=\"mobile\"\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              marginTop: \"20px\",\r\n              justifyContent: \"space-between\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <SettingChange\r\n              viewByCheckBox={viewByCheckBox}\r\n              changeUserCheckBoxConfigurationFunction={\r\n                changeUserCheckBoxConfigurationFunction\r\n              }\r\n              deviceType=\"mobile\"\r\n            />\r\n            <AddAndChange\r\n              addCharacter={addCharacter}\r\n              applyChanges={applyChanges}\r\n              style={{ fontSize: \"5px\" }}\r\n            />\r\n          </div>\r\n          <Segment basic id=\"mobileSegmentGrid\">\r\n            <Grid columns={limit + 1}>\r\n              <Grid.Row\r\n                style={{\r\n                  borderBottom: !showNote && \"0.05rem inset ivory\",\r\n                }}\r\n              >\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <AlarmAndNoteMobile\r\n                    alarmTrue={alarmTrue}\r\n                    alarmRestValue={alarmRestValue}\r\n                    userTodoData={userTodoData}\r\n                    showNote={showNote}\r\n                    setShowNote={setShowNote}\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <CharacterAvatar\r\n                    itemId={item._id}\r\n                    character={item.character}\r\n                    characterName={item.characterName}\r\n                    attributeChanged={item.attributeChanged}\r\n                    weeklyAttributeChanged={item.weeklyAttributeChanged}\r\n                    axiosConfigAuth={axiosConfigAuth}\r\n                    viewPage={viewPage}\r\n                    alarmCharacter={item.alarmCharacter}\r\n                    limit={limit}\r\n                    dontChange={item.dontChange}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    deviceType=\"mobile\"\r\n                    activePage={activePage}\r\n                    setActivePage={setActivePage}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              {showNote && (\r\n                <Grid.Row\r\n                  style={{\r\n                    padding: 0,\r\n                    borderBottom: \"0.05rem inset ivory\",\r\n                    paddingBottom: \"7px\",\r\n                  }}\r\n                >\r\n                  <Grid.Column />\r\n                  {userTodoData.map((item, idx) => (\r\n                    <PerIdNote\r\n                      item={item}\r\n                      userTodoData={userTodoData}\r\n                      setUserTodoData={setUserTodoData}\r\n                      deviceType=\"mobile\"\r\n                    />\r\n                  ))}\r\n                </Grid.Row>\r\n              )}\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={\r\n                      <Icon\r\n                        name=\"calendar check outline\"\r\n                        style={{ fontSize: \"21px\" }}\r\n                      />\r\n                    }\r\n                    content={showContentPopupValue(\"휴식게이지\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <RestValueMobile\r\n                    item={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"카오스던전\")[0]}\r\n                    content={showContentPopupValue(\"카오스던전\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <ChaosDunValue\r\n                    chaosItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"가디언토벌\")[0]}\r\n                    content={showContentPopupValue(\"가디언토벌\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <GuardianDunValue\r\n                    guardianItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"에포나\")[0]}\r\n                    content={showContentPopupValue(\"에포나\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <EponaValue\r\n                    eponaItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"주간가디언\")[0]}\r\n                    content={showContentPopupValue(\"주간가디언\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <WeeklyGuardian\r\n                    weeklyGuardianItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                    viewByCheckBox={viewByCheckBox}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"어비스던전\")[0]}\r\n                    content={showContentPopupValue(\"어비스던전\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <AbyssDun2\r\n                    abyssDun2Item={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"아르고스\")[0]}\r\n                    content={showContentPopupValue(\"아르고스\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <ArgosRaid\r\n                    argosRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow baltanRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"발탄\")[0]}\r\n                    content={showContentPopupValue(\"발탄\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <BaltanRaid\r\n                    baltanRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"비아키스\")[0]}\r\n                    content={showContentPopupValue(\"비아키스\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <BiakissRaid\r\n                    biakissRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"eachRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"쿠크세이튼\")[0]}\r\n                    content={showContentPopupValue(\"쿠크세이튼\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <KukseitnRaid\r\n                    kukseitnRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n              <Grid.Row className=\"abrelRow\">\r\n                <Grid.Column className=\"contentColumn\">\r\n                  <Popup\r\n                    on=\"click\"\r\n                    pinned\r\n                    trigger={showContentPopupValue(\"아브렐슈드\")[0]}\r\n                    content={showContentPopupValue(\"아브렐슈드\")[1]}\r\n                    id=\"clickPopup\"\r\n                  />\r\n                </Grid.Column>\r\n                {userTodoData.map((item, idx) => (\r\n                  <AbrelRaid\r\n                    abrelRaidItem={item}\r\n                    userTodoData={userTodoData}\r\n                    setUserTodoData={setUserTodoData}\r\n                  />\r\n                ))}\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        </Segment>\r\n      )}\r\n\r\n      {addCharacterModal && (\r\n        <AddCharacterMobile\r\n          addCharacterModal={addCharacterModal}\r\n          closeAddCharacter={closeAddCharacter}\r\n          userTodoData={userTodoData}\r\n          axiosConfigAuth={axiosConfigAuth}\r\n          viewPage={viewPage}\r\n          limit={limit}\r\n        />\r\n      )}\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterToDoRowMobile;\r\n","import CharacterToDoRowMobile from \"./CharacterToDoRowMobile\";\r\n\r\nexport default CharacterToDoRowMobile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { backendUrl, axiosConfig } from \"../components/util/ConstVar\";\r\n\r\nimport \"./login.css\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState(\"로그인이 필요합니다\");\r\n  const [user, setUser] = useState({\r\n    id: cookie.get(\"loginId\") ? cookie.get(\"loginId\") : \"\",\r\n    password: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/login`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set(\"loadoUserToken\", token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set(\"loadoUserCookie\", JSON.stringify(userCookie));\r\n          history.push(\"/userhomework\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.request);\r\n        // console.log(err.response);\r\n        // console.log(err.message);\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let loginCookie = cookie.get(\"loadoUserToken\");\r\n    loginCookie && history.push(\"/userhomework\");\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"divLoginPage\">\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\", margin: \"0px\" }}\r\n        verticalAlign=\"middle\"\r\n        id=\"loginPage\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as=\"h2\" textAlign=\"center\" style={{ color: \"tomato\" }}>\r\n            <Image src=\"https://react.semantic-ui.com/logo.png\" />{\" \"}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size=\"large\" onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"ID\"\r\n                name=\"id\"\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\r\n                로그인\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            계정이 없으신가요?{\" \"}\r\n            <a href=\"#\" onClick={() => history.push(\"/register\")}>\r\n              가입\r\n            </a>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <div class=\"custom-shape-divider-bottom-1634800167\">\r\n        <svg\r\n          data-name=\"Layer 1\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1200 120\"\r\n          preserveAspectRatio=\"none\"\r\n        >\r\n          <path\r\n            d=\"M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z\"\r\n            opacity=\".25\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n          <path\r\n            d=\"M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z\"\r\n            opacity=\".5\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n          <path\r\n            d=\"M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import Login from \"./Login\";\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { backendUrl, axiosConfig } from \"../components/util/ConstVar\";\r\n\r\nimport \"../login/login.css\";\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n  const [loginMessage, setLoginMessage] = useState(\"회원가입\");\r\n  const [user, setUser] = useState({\r\n    id: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/users/register`,\r\n        {\r\n          userId: user.id,\r\n          password: user.password,\r\n          name: user.name,\r\n        },\r\n        axiosConfig\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          const token = response.data.token;\r\n          cookie.set(\"loadoUserToken\", token);\r\n          const userCookie = {\r\n            userId: user.id,\r\n            userName: response.data.userName,\r\n          };\r\n          cookie.set(\"loadoUserCookie\", JSON.stringify(userCookie));\r\n          history.push(\"/userhomework\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoginMessage(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"divLoginPage\">\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100vh\", margin: \"0px\" }}\r\n        verticalAlign=\"middle\"\r\n        id=\"loginPage\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 500 }}>\r\n          <Header as=\"h2\" textAlign=\"center\" style={{ color: \"#394855\" }}>\r\n            <Image src=\"https://react.semantic-ui.com/logo.png\" />{\" \"}\r\n            {loginMessage}\r\n          </Header>\r\n          <Form size=\"large\" onSubmit={handleSubmit}>\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"ID\"\r\n                name=\"id\"\r\n                onChange={handleChange}\r\n                value={user.id}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"quote left\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"이름\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                value={user.name}\r\n              />\r\n\r\n              <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\r\n                가입\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            비밀번호를 잊어버리시면 복구가 불가능합니다\r\n            <br />\r\n            [비밀번호는 암호화되어 저장됩니다]\r\n            <br />\r\n            [예시: .....APvs6TgQOG5d8byxYdLJOD0O6Am.....]\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <div class=\"custom-shape-divider-bottom-1634800167\">\r\n        <svg\r\n          data-name=\"Layer 1\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1200 120\"\r\n          preserveAspectRatio=\"none\"\r\n        >\r\n          <path\r\n            d=\"M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z\"\r\n            opacity=\".25\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n          <path\r\n            d=\"M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z\"\r\n            opacity=\".5\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n          <path\r\n            d=\"M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z\"\r\n            class=\"shape-fill\"\r\n          ></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import Register from \"./Register\";\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../userHomework/userHomework.css\";\r\nimport { Segment, Grid, Header, Icon } from \"semantic-ui-react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport cookie from \"js-cookie\";\r\nimport { getLoadoLogs } from \"../components/util/ViewDataUtil\";\r\n\r\nimport \"./dashboard.css\";\r\n\r\nimport { characterKorean } from \"../../_data/characterDefinition\";\r\n\r\nfunction Dashboard() {\r\n  const [lineLabels, setlineLabels] = useState();\r\n  const [lineData, setlineData] = useState();\r\n  const [barLabels, setBarLabels] = useState();\r\n  const [barData, setBarData] = useState();\r\n\r\n  const [userCount, setUserCount] = useState();\r\n  const [userLoadoCount, setUserLoadoCount] = useState();\r\n  const [loadologs, setLoadoLogs] = useState();\r\n\r\n  useEffect(() => {\r\n    async function getLoadoLogsFunction() {\r\n      let resultData = await getLoadoLogs(cookie.get(\"loadoUserToken\"));\r\n      if (!resultData) return;\r\n      resultData.log.sort(function (a, b) {\r\n        const keyA = new Date(a.dateValue);\r\n        const keyB = new Date(b.dateValue);\r\n        // Compare the 2 dates\r\n        if (keyA < keyB) return -1;\r\n        if (keyA > keyB) return 1;\r\n        return 0;\r\n      });\r\n      const labels = [];\r\n      const data = [];\r\n      resultData.log.map((item) => {\r\n        labels.push(item.dateValue);\r\n        data.push(item.count);\r\n      });\r\n      setlineLabels(labels);\r\n      setlineData(data);\r\n\r\n      setUserCount(resultData.userCount);\r\n      setUserLoadoCount(resultData.hwCount);\r\n      setLoadoLogs(resultData.logsCount);\r\n\r\n      const barLabels = [];\r\n      const barData = [];\r\n\r\n      resultData.jobGroupingResult.map((item, idx) => {\r\n        // if (idx > 15) return;\r\n        barLabels.push(characterKorean[item._id]);\r\n        barData.push(item.characterCount);\r\n      });\r\n\r\n      setBarLabels(barLabels);\r\n      setBarData(barData);\r\n    }\r\n    getLoadoLogsFunction();\r\n  }, []);\r\n\r\n  const chartjsLineData = {\r\n    labels: lineLabels,\r\n    datasets: [\r\n      {\r\n        label: \"\",\r\n        data: lineData,\r\n        fill: false,\r\n        backgroundColor: \"rgb(255, 99, 132)\",\r\n        borderColor: \"rgba(255, 99, 132, 0.2)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartjsLineOptions = {\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"이용 현황\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartjsBarData = {\r\n    labels: barLabels,\r\n    datasets: [\r\n      {\r\n        label: \"\",\r\n        data: barData,\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartjsBarOptions = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"케릭터 현황\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [12, 19, 3, 5, 2, 3],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Segment className=\"fullPage\" id=\"dashboardPage\" style={{ border: \"none\" }}>\r\n      <Grid columns={2} style={{ display: \"none\" }}>\r\n        <Grid.Row>\r\n          <Grid.Column style={{ margin: \"auto\", textAlign: \"center\" }}>\r\n            <Header as=\"h2\" className=\"dashboardHeader\">\r\n              <Icon name=\"users\" />\r\n              등록된 사용자 수 : {userCount} 명\r\n            </Header>\r\n            <Header as=\"h2\" className=\"dashboardHeader\">\r\n              <Icon name=\"book\" />\r\n              등록된 숙제 수 : {userLoadoCount} 개\r\n            </Header>\r\n            <Header as=\"h2\" className=\"dashboardHeader\">\r\n              <Icon name=\"pencil square\" />\r\n              일주일 로그 수 : {loadologs} 개\r\n            </Header>\r\n          </Grid.Column>\r\n          <Grid.Column className=\"lineGraphAreaColumn\">\r\n            <div id=\"lineGraphArea\">\r\n              <Line\r\n                data={chartjsLineData}\r\n                options={chartjsLineOptions}\r\n                className=\"lineGraph\"\r\n              />\r\n            </div>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <br />\r\n      <div\r\n        style={{\r\n          height: \"600px\",\r\n          width: \"70%\",\r\n          backgroundColor: \"white\",\r\n          margin: \"0 auto\",\r\n        }}\r\n      >\r\n        <Bar\r\n          data={chartjsBarData}\r\n          options={chartjsBarOptions}\r\n          className=\"lineGraph\"\r\n        />\r\n      </div>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import dashboard from \"./dashboard\";\r\n\r\nexport default dashboard;\r\n","const itemList = [\r\n  { item: '에스더의 기운', idx: 1 },\r\n  { item: '파괴석 결정', idx: 2 },\r\n  { item: '파괴강석', idx: 3 },\r\n  { item: '중급 오레하 융화 재료', idx: 4 },\r\n  { item: '상급 오레하 융화 재료', idx: 5 },\r\n  { item: '위대한 명예의 돌파석', idx: 6 },\r\n  { item: '수호강석', idx: 7 },\r\n  { item: '경이로운 명예의 돌파석', idx: 8 },\r\n  { item: '태양의 은총', idx: 9 },\r\n  { item: '태양의 축복', idx: 10 },\r\n  { item: '태양의 가호', idx: 11 },\r\n  { item: '명예의 파편 주머니(소)', idx: 12 },\r\n  { item: '명예의 파편 주머니(중)', idx: 13 },\r\n  { item: '명예의 파편 주머니(대)', idx: 14 },\r\n  { item: '야금술 : 단조 심화', idx: 15 },\r\n  { item: '재봉술 : 수선 심화', idx: 16 },\r\n\r\n  { item: '10레벨 멸화의 보석', idx: 17 },\r\n  { item: '10레벨 홍염의 보석', idx: 18 },\r\n  { item: '9레벨 멸화의 보석', idx: 19 },\r\n  { item: '9레벨 홍염의 보석', idx: 20 },\r\n  { item: '8레벨 멸화의 보석', idx: 21 },\r\n  { item: '8레벨 홍염의 보석', idx: 22 },\r\n  { item: '7레벨 멸화의 보석', idx: 23 },\r\n  { item: '7레벨 홍염의 보석', idx: 24 },\r\n\r\n  { item: '원한 각인서', idx: 25 },\r\n  { item: '예리한 둔기 각인서', idx: 26 },\r\n  { item: '저주받은 인형 각인서', idx: 27 },\r\n  { item: '절정 각인서', idx: 28 },\r\n  { item: '점화 각인서', idx: 29 },\r\n  { item: '절실한 구원 각인서', idx: 30 },\r\n  { item: '아드레날린 각인서', idx: 31 },\r\n  { item: '잔재된 기운 각인서', idx: 32 },\r\n  { item: '축복의 오라 각인서', idx: 33 },\r\n  { item: '타격의 대가 각인서', idx: 34 },\r\n  { item: '돌격대장 각인서', idx: 35 },\r\n  { item: '광기 각인서', idx: 36 },\r\n  { item: '전문의 각인서', idx: 37 },\r\n  { item: '환류 각인서', idx: 38 },\r\n  { item: '각성 각인서', idx: 39 },\r\n  { item: '버스트 각인서', idx: 40 },\r\n  { item: '피스메이커 각인서', idx: 41 },\r\n  { item: '진화의 유산 각인서', idx: 42 },\r\n  { item: '일격필살 각인서', idx: 43 },\r\n  { item: '극의: 체술 각인서', idx: 44 },\r\n  { item: '질량 증가 각인서', idx: 45 },\r\n  { item: '상급 소환사 각인서', idx: 46 },\r\n  { item: '기습의 대가 각인서', idx: 47 },\r\n  { item: '고독한 기사 각인서', idx: 48 },\r\n  { item: '화력 강화 각인서', idx: 49 },\r\n  { item: '바리케이드 각인서', idx: 50 },\r\n  { item: '초심 각인서', idx: 51 },\r\n  { item: '분노의 망치 각인서', idx: 52 },\r\n  { item: '갈증 각인서', idx: 53 },\r\n  { item: '정기 흡수 각인서', idx: 54 },\r\n  { item: '죽음의 습격 각인서', idx: 55 },\r\n  { item: '속전속결 각인서', idx: 56 },\r\n  { item: '충격 단련 각인서', idx: 57 },\r\n  { item: '정밀 단도 각인서', idx: 58 },\r\n  { item: '달의 소리 각인서', idx: 59 },\r\n  { item: '두 번째 동료 각인서', idx: 60 },\r\n  { item: '역천지체 각인서', idx: 61 },\r\n  { item: '중갑 착용 각인서', idx: 62 },\r\n  { item: '황후의 은총 각인서', idx: 63 },\r\n  { item: '슈퍼 차지 각인서', idx: 64 },\r\n  { item: '중력 수련 각인서', idx: 65 },\r\n  { item: '절제 각인서', idx: 66 },\r\n  { item: '오의난무 각인서', idx: 67 },\r\n  { item: '핸드거너 각인서', idx: 68 },\r\n  { item: '안정된 상태 각인서', idx: 69 },\r\n  { item: '만개 각인서', idx: 70 },\r\n  { item: '회귀 각인서', idx: 71 },\r\n  { item: '멈출 수 없는 충동 각인서', idx: 72 },\r\n];\r\n\r\nconst imageItemMatch = {\r\n  에스더의기운: './images/loa_icons/esder.PNG',\r\n  파괴강석: './images/loa_icons/redStoneHigh.PNG',\r\n  파괴석결정: './images/loa_icons/redStoneLow.PNG',\r\n  중급오레하융화재료: './images/loa_icons/middleOreha.PNG',\r\n  상급오레하융화재료: './images/loa_icons/highOreha.PNG',\r\n  위대한명예의돌파석: './images/loa_icons/breakStoneLow.PNG',\r\n  수호강석: './images/loa_icons/blueStoneHigh.PNG',\r\n  경이로운명예의돌파석: './images/loa_icons/breakStoneHigh.PNG',\r\n  태양의은총: './images/loa_icons/sunLow.PNG',\r\n  태양의축복: './images/loa_icons/sunMedium.PNG',\r\n  태양의가호: './images/loa_icons/sunHigh.PNG',\r\n  명예의파편주머니소: './images/loa_icons/fameLow.png',\r\n  명예의파편주머니중: './images/loa_icons/fameMedium.png',\r\n  명예의파편주머니대: './images/loa_icons/fameHigh.png',\r\n  야금술단조심화: './images/loa_icons/accelaratorWeapon.PNG',\r\n  재봉술수선심화: './images/loa_icons/accelaratorArmor.PNG',\r\n  '10레벨멸화의보석': './images/loa_icons/10LevelDamage.PNG',\r\n  '10레벨홍염의보석': './images/loa_icons/10LevelCoolDown.PNG',\r\n  '9레벨멸화의보석': './images/loa_icons/9LevelDamage.PNG',\r\n  '9레벨홍염의보석': './images/loa_icons/9LevelCoolDown.PNG',\r\n  '8레벨멸화의보석': './images/loa_icons/8LevelDamage.PNG',\r\n  '8레벨홍염의보석': './images/loa_icons/8LevelCoolDown.PNG',\r\n  '7레벨멸화의보석': './images/loa_icons/7LevelDamage.PNG',\r\n  '7레벨홍염의보석': './images/loa_icons/7LevelCoolDown.PNG',\r\n};\r\n\r\nexport { imageItemMatch, itemList };\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  Icon,\r\n  Grid,\r\n  Image,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Divider,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\n\r\nimport './AddItemToView.css';\r\n\r\nimport { imageItemMatch, itemList } from '../../../_data/itemImageMatch';\r\nimport { backendUrl } from '../util/ConstVar';\r\n\r\nfunction AddItemToView({\r\n  addItemPriceModal,\r\n  setAddItemTrend,\r\n  axiosConfigAuth,\r\n  closeAddItemTrend,\r\n  searchItemCollection,\r\n}) {\r\n  const [itemSearch, setItemSearch] = useState('');\r\n  const [itemListState, setItemListState] = useState(itemList);\r\n  const [itemCollection, setItemCollection] = useState([]);\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n  const itemSearchChange = (textValue) => {\r\n    if (textValue.length === 0) {\r\n      setItemListState(\r\n        itemList.filter((item) => !itemCollection.includes(item.item))\r\n      );\r\n    } else {\r\n      setItemListState(\r\n        itemList.filter(\r\n          (item) =>\r\n            !itemCollection.includes(item.item) &&\r\n            item.item.indexOf(textValue) >= 0\r\n        )\r\n      );\r\n    }\r\n    setItemSearch(textValue);\r\n  };\r\n\r\n  const addItemCollection = (itemName) => {\r\n    setItemListState(itemListState.filter((item) => item.item !== itemName));\r\n    itemCollection.push(itemName);\r\n    setItemCollection(itemCollection);\r\n  };\r\n\r\n  const deleteItemCollection = (e) => {\r\n    const { item_name } = e.currentTarget.dataset;\r\n    setItemCollection(itemCollection.filter((item) => item !== item_name));\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setItemSearch('');\r\n    setItemListState([]);\r\n    setItemCollection([]);\r\n\r\n    const startDate = localStorage.getItem('itemSearchStartDate');\r\n    const endDate = localStorage.getItem('itemSearchEndDate');\r\n\r\n    searchItemCollection(startDate, endDate);\r\n    closeAddItemTrend();\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${backendUrl}/loado/api/itemPrice/userItemInterest`,\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setItemCollection(response.data.userInterest);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log('error');\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    itemSearchChange(itemSearch);\r\n  }, [itemCollection]);\r\n\r\n  const saveUserItem = () => {\r\n    setSaveLoading(true);\r\n    const postData = {\r\n      itemCollection: itemCollection,\r\n    };\r\n    axios\r\n      .post(\r\n        `${backendUrl}/loado/api/itemPrice/userItemInterest`,\r\n        postData,\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        setSaveLoading(false);\r\n        closeModal();\r\n      })\r\n      .catch((err) => {\r\n        setSaveLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={addItemPriceModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n      >\r\n        <Modal.Content style={{ backgroundColor: 'white' }}>\r\n          <Segment className='noselect selectedItemSegment'>\r\n            {itemCollection?.map((itemName) => (\r\n              <Label\r\n                as='a'\r\n                style={{ margin: '1px 2px' }}\r\n                data-item_name={itemName}\r\n                onClick={(e) => deleteItemCollection(e)}\r\n              >\r\n                {itemName.indexOf('각인서') > -1 ? (\r\n                  <Image src='./images/loa_icons/legendBook.PNG' avatar />\r\n                ) : (\r\n                  <Image\r\n                    src={\r\n                      imageItemMatch[\r\n                        itemName\r\n                          .replaceAll('(', '')\r\n                          .replaceAll(')', '')\r\n                          .replaceAll(':', '')\r\n                          .replaceAll(' ', '')\r\n                      ]\r\n                    }\r\n                    avatar\r\n                  />\r\n                )}\r\n                {itemName.replaceAll('I_', '')}\r\n                <Icon name='delete' />\r\n              </Label>\r\n            ))}\r\n          </Segment>\r\n\r\n          <Divider />\r\n          <Grid\r\n            style={{\r\n              width: '101%',\r\n              marginRight: '0px !important',\r\n            }}\r\n          >\r\n            <Grid.Row>\r\n              <Grid.Column width={13}>\r\n                <Input\r\n                  icon='search'\r\n                  placeholder='아이템 검색'\r\n                  value={itemSearch}\r\n                  onChange={(e) => itemSearchChange(e.target.value)}\r\n                  style={{ width: '100%', height: '38px' }}\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column width={3} style={{ paddingRight: '0px' }}>\r\n                <Button\r\n                  inverted\r\n                  color='purple'\r\n                  style={{ width: '100%', height: '38px', padding: '10px' }}\r\n                  onClick={() => saveUserItem()}\r\n                >\r\n                  {!saveLoading ? (\r\n                    <Icon name='check' />\r\n                  ) : (\r\n                    <Icon name='upload' />\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n\r\n          <Divider />\r\n          <Segment.Group raised className='noselect itemListSegment'>\r\n            <ul\r\n              id='itemList'\r\n              style={{ listStyle: 'none', display: 'block', cursor: 'pointer' }}\r\n            >\r\n              <Divider hidden />\r\n              {itemListState\r\n                .sort((a, b) => a.idx - b.idx)\r\n                .map((item, idx) => (\r\n                  <>\r\n                    <li onClick={() => addItemCollection(item.item, item.idx)}>\r\n                      <div className='title'>\r\n                        <span style={{ fontWeight: 'bold', fontSize: 'large' }}>\r\n                          {item.item.indexOf('각인서') > -1 ? (\r\n                            <Image\r\n                              src='./images/loa_icons/legendBook.PNG'\r\n                              avatar\r\n                            />\r\n                          ) : (\r\n                            <Image\r\n                              src={\r\n                                imageItemMatch[\r\n                                  item.item\r\n                                    .replaceAll('(', '')\r\n                                    .replaceAll(')', '')\r\n                                    .replaceAll(':', '')\r\n                                    .replaceAll(' ', '')\r\n                                ]\r\n                              }\r\n                              avatar\r\n                            />\r\n                          )}\r\n                          {item.item.replaceAll('I_', '')}\r\n                        </span>\r\n                      </div>\r\n                      <Icon\r\n                        className='itemAdd'\r\n                        size='large'\r\n                        name='add circle'\r\n                      />\r\n                    </li>\r\n                    {idx === itemListState.length - 1 ? (\r\n                      <Divider hidden />\r\n                    ) : (\r\n                      <Divider />\r\n                    )}\r\n                  </>\r\n                ))}\r\n            </ul>\r\n          </Segment.Group>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddItemToView;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Image,\r\n  Header,\r\n  Segment,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { axiosConfigAuth, backendUrl } from \"../util/ConstVar\";\r\nimport { imageItemMatch } from \"../../../_data/itemImageMatch\";\r\nimport { css } from \"@emotion/react\";\r\n\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport DatePicker from \"@mui/lab/DatePicker\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport koLocale from \"date-fns/locale/ko\";\r\nimport moment from \"moment\";\r\n\r\nfunction MonthlyTrendView({\r\n  itemName,\r\n  viewMonthlyModal,\r\n  setViewMonthlyModal,\r\n  dataApply,\r\n  dataApply2,\r\n  type,\r\n}) {\r\n  const [firstLoad, setFirstLoad] = useState(true);\r\n  const [dateValue, setDateValue] = useState(moment().format(\"YYYY/MM/01\"));\r\n  const [itemPriceTrend, setItemPriceTrend] = useState();\r\n  const [loadingState, setLoadingState] = useState(false);\r\n\r\n  const searchItemMonthlyTrend = async () => {\r\n    setFirstLoad(false);\r\n    setLoadingState(true);\r\n    setItemPriceTrend([]);\r\n    const daysInMonth = moment(dateValue).daysInMonth();\r\n    const dateStartParam = moment(dateValue).format(\"YYYY-MM-01\");\r\n    const dateEndParam = moment(dateValue).format(`YYYY-MM-${daysInMonth}`);\r\n\r\n    await axios\r\n      .post(\r\n        `${backendUrl}/loado/api/itemPrice/getItemCollectionPrice`,\r\n        {\r\n          userItemCollection: [itemName],\r\n          dateStartParam,\r\n          dateEndParam,\r\n        },\r\n        axiosConfigAuth(cookie.get(\"loadoUserToken\"))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          console.log(response.data.itemCollectionPrice[itemName]);\r\n          setItemPriceTrend([...response.data.itemCollectionPrice[itemName]]);\r\n        } else {\r\n          alert(\"데이터 조회에 실패했습니다\");\r\n        }\r\n      });\r\n\r\n    setLoadingState(false);\r\n  };\r\n\r\n  const cssOverride = css`\r\n    display: block;\r\n    maring: 0 auto;\r\n    border-color: red;\r\n  `;\r\n\r\n  const ReturnChart = () => (\r\n    <ReactApexChart\r\n      options={dataApply(itemName, itemPriceTrend, true)}\r\n      series={dataApply2(itemName, itemPriceTrend)}\r\n      type=\"line\"\r\n      height={350}\r\n      style={{\r\n        marginLeft: \"5px\",\r\n        marginRight: \"5px\",\r\n        display: \"block\",\r\n      }}\r\n    />\r\n  );\r\n\r\n  const ReturnChartMobile = () => {\r\n    if (itemPriceTrend.length < 11) {\r\n      return (\r\n        <ReactApexChart\r\n          options={dataApply(itemName, itemPriceTrend, true)}\r\n          series={dataApply2(itemName, itemPriceTrend)}\r\n          type=\"line\"\r\n          height={350}\r\n          style={{\r\n            marginLeft: \"5px\",\r\n            marginRight: \"5px\",\r\n            display: \"block\",\r\n          }}\r\n        />\r\n      );\r\n    } else if (itemPriceTrend.length < 21) {\r\n      const halfIndex = Math.ceil(itemPriceTrend.length / 2);\r\n      const firstHalf = itemPriceTrend.filter((item, idx) => idx <= halfIndex);\r\n      const nextHalf = itemPriceTrend.filter((item, idx) => idx > halfIndex);\r\n\r\n      return (\r\n        <>\r\n          <ReactApexChart\r\n            options={dataApply(itemName, firstHalf, true)}\r\n            series={dataApply2(itemName, firstHalf)}\r\n            type=\"line\"\r\n            height={350}\r\n            style={{\r\n              marginLeft: \"5px\",\r\n              marginRight: \"5px\",\r\n              display: \"block\",\r\n            }}\r\n          />\r\n          <br />\r\n          <ReactApexChart\r\n            options={dataApply(itemName, nextHalf, true)}\r\n            series={dataApply2(itemName, nextHalf)}\r\n            type=\"line\"\r\n            height={350}\r\n            style={{\r\n              marginLeft: \"5px\",\r\n              marginRight: \"5px\",\r\n              display: \"block\",\r\n            }}\r\n          />\r\n        </>\r\n      );\r\n    } else {\r\n      const divideIndex = Math.ceil(itemPriceTrend.length / 3);\r\n\r\n      const firstDivide = itemPriceTrend.filter(\r\n        (item, idx) => idx < divideIndex\r\n      );\r\n      const nextDivide = itemPriceTrend.filter(\r\n        (item, idx) => idx >= divideIndex && idx < divideIndex * 2\r\n      );\r\n      const finalDivide = itemPriceTrend.filter(\r\n        (item, idx) => idx >= divideIndex * 2\r\n      );\r\n\r\n      return (\r\n        <>\r\n          <ReactApexChart\r\n            options={dataApply(itemName, firstDivide, true)}\r\n            series={dataApply2(itemName, firstDivide)}\r\n            type=\"line\"\r\n            height={350}\r\n            style={{\r\n              marginLeft: \"5px\",\r\n              marginRight: \"5px\",\r\n              display: \"block\",\r\n            }}\r\n          />\r\n          <br />\r\n          <ReactApexChart\r\n            options={dataApply(itemName, nextDivide, true)}\r\n            series={dataApply2(itemName, nextDivide)}\r\n            type=\"line\"\r\n            height={350}\r\n            style={{\r\n              marginLeft: \"5px\",\r\n              marginRight: \"5px\",\r\n              display: \"block\",\r\n            }}\r\n          />\r\n          <br />\r\n          <ReactApexChart\r\n            options={dataApply(itemName, finalDivide, true)}\r\n            series={dataApply2(itemName, finalDivide)}\r\n            type=\"line\"\r\n            height={350}\r\n            style={{\r\n              marginLeft: \"5px\",\r\n              marginRight: \"5px\",\r\n              display: \"block\",\r\n            }}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={viewMonthlyModal}\r\n      closeIcon\r\n      closeOnDimmerClick\r\n      onClose={() => setViewMonthlyModal(false)}\r\n      size=\"large\"\r\n    >\r\n      <Modal.Content style={{ backgroundColor: \"#D5F5E3\" }}>\r\n        <div style={{ display: \"flex\" }}>\r\n          <LocalizationProvider dateAdapter={AdapterDateFns} locale={koLocale}>\r\n            <DatePicker\r\n              views={[\"month\"]}\r\n              label=\"날짜\"\r\n              minDate={new Date(\"2022/01/01\")}\r\n              maxDate={new Date(moment())}\r\n              value={moment(dateValue).format(\"YYYY/MM/01\")}\r\n              onChange={(newValue) => {\r\n                setDateValue(moment(newValue).format(\"YYYY/MM/01\"));\r\n              }}\r\n              renderInput={(params) => {\r\n                const paramDateValue = params.inputProps.value.substring(0, 7);\r\n                params.inputProps.value = `${moment(paramDateValue).format(\r\n                  \"YYYY\"\r\n                )}년 ${moment(paramDateValue).format(\"MM\")}월`;\r\n                return <TextField {...params} helperText={null} />;\r\n              }}\r\n            />\r\n          </LocalizationProvider>\r\n          <Button\r\n            color=\"orange\"\r\n            style={{ marginLeft: `${type !== \"mobile\" ? \"50px\" : \"10px\"}` }}\r\n            onClick={searchItemMonthlyTrend}\r\n          >\r\n            <Icon name=\"search\" />\r\n            조회\r\n          </Button>\r\n        </div>\r\n        <Divider />\r\n        {!firstLoad && loadingState ? (\r\n          <HashLoader\r\n            color=\"#e71989\"\r\n            loading={loadingState}\r\n            css={cssOverride}\r\n            size={80}\r\n          />\r\n        ) : itemPriceTrend && itemPriceTrend.length > 0 ? (\r\n          <Segment\r\n            style={{\r\n              marginLeft: \"5px\",\r\n              marginRight: \"5px\",\r\n              display: \"block\",\r\n            }}\r\n          >\r\n            <Header\r\n              as=\"h4\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                marginLeft: \"30px\",\r\n              }}\r\n              className=\"noselect\"\r\n            >\r\n              {itemName.indexOf(\"각인서\") > -1 ? (\r\n                <Image src=\"./images/loa_icons/legendBook.PNG\" avatar />\r\n              ) : (\r\n                <Image\r\n                  src={\r\n                    imageItemMatch[\r\n                      itemName\r\n                        .replaceAll(\"(\", \"\")\r\n                        .replaceAll(\")\", \"\")\r\n                        .replaceAll(\":\", \"\")\r\n                        .replaceAll(\" \", \"\")\r\n                    ]\r\n                  }\r\n                  avatar\r\n                />\r\n              )}\r\n              {itemName}\r\n            </Header>\r\n            {type === \"mobile\" ? ReturnChartMobile() : ReturnChart()}\r\n          </Segment>\r\n        ) : (\r\n          <span></span>\r\n        )}\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default MonthlyTrendView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Modal,\r\n  Grid,\r\n  Image,\r\n  Table,\r\n  Header,\r\n  Segment,\r\n  Button,\r\n  Icon,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\n\r\nimport './AddItemToView.css';\r\n\r\nimport { imageItemMatch } from '../../../_data/itemImageMatch';\r\nimport { axiosConfigAuth, backendUrl } from '../util/ConstVar';\r\nimport { numberWithCommas } from '../../components/util/ConstVar';\r\nimport MonthlyTrendView from './MonthlyTrendView';\r\n\r\nimport './FullTrendView.css';\r\n\r\nfunction FullTrendView({\r\n  seeFullLogTrendModal,\r\n  itemName,\r\n  closeFullLogTrendItem,\r\n  dataApply,\r\n  dataApply2,\r\n  type,\r\n}) {\r\n  const closeModal = () => {\r\n    closeFullLogTrendItem();\r\n  };\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [itemPriceLog, setItemPriceLog] = useState([]);\r\n  const [statValue, setStatValue] = useState({\r\n    averageValue: 0,\r\n    medianValue: 0,\r\n  });\r\n  const [viewMonthlyModal, setViewMonthlyModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    const dateStartParam = localStorage.getItem('itemSearchStartDate');\r\n    const dateEndParam = localStorage.getItem('itemSearchEndDate');\r\n\r\n    axios\r\n      .get(\r\n        `${backendUrl}/loado/api/itemPrice/getItemPrice/${itemName}/${dateStartParam}/${dateEndParam}`,\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          console.log(response.data);\r\n          setItemPriceLog(response.data.itemPriceLog);\r\n\r\n          setStatValue({\r\n            averageValue: response.data.averageValue,\r\n            medianValue: response.data.medianValue,\r\n          });\r\n          setLoading(false);\r\n        }\r\n      });\r\n  }, [itemName]);\r\n\r\n  const ReturnTable = (item) => {\r\n    return (\r\n      <>\r\n        <Table.Row>\r\n          <Table.Cell rowSpan={itemPriceLog[item].length}>{item}</Table.Cell>\r\n          <Table.Cell class='tableCell' textAlign='center'>\r\n            {itemPriceLog[item][0].createdDttm.substring(11, 13)}{' '}\r\n            <span style={{ color: '#138D75' }}>시</span>\r\n          </Table.Cell>\r\n          <Table.Cell class='tableCell' textAlign='center'>\r\n            {numberWithCommas(itemPriceLog[item][0].itemPrice)}\r\n            <span style={{ color: '#F1C40F', marginLeft: '2px' }}>G</span>\r\n          </Table.Cell>\r\n        </Table.Row>\r\n        {itemPriceLog[item].map(\r\n          (item2, index2) =>\r\n            index2 !== 0 && (\r\n              <Table.Row>\r\n                <Table.Cell class='tableCell' textAlign='center'>\r\n                  {item2.createdDttm.substring(11, 13)}{' '}\r\n                  <span style={{ color: '#138D75' }}>시</span>\r\n                </Table.Cell>\r\n                <Table.Cell class='tableCell' textAlign='center'>\r\n                  {numberWithCommas(item2.itemPrice)}\r\n                  <span style={{ color: '#F1C40F', marginLeft: '2px' }}>G</span>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            )\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={seeFullLogTrendModal}\r\n        onClose={closeModal}\r\n        closeIcon\r\n        closeOnDimmerClick\r\n        size='tiny'\r\n        style={{\r\n          height: '600px',\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        <Modal.Content style={{ backgroundColor: '#D5F5E3' }}>\r\n          <Grid>\r\n            <Grid.Column width={12}>\r\n              <Table basic='very' celled>\r\n                <Table.Header>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell>\r\n                      {itemName.indexOf('각인서') > -1 ? (\r\n                        <Image src='./images/loa_icons/legendBook.PNG' avatar />\r\n                      ) : (\r\n                        <Image\r\n                          src={\r\n                            imageItemMatch[\r\n                              itemName\r\n                                .replaceAll('(', '')\r\n                                .replaceAll(')', '')\r\n                                .replaceAll(':', '')\r\n                                .replaceAll(' ', '')\r\n                            ]\r\n                          }\r\n                          avatar\r\n                        />\r\n                      )}\r\n                      {itemName}\r\n                    </Table.HeaderCell>\r\n                    <Table.HeaderCell>\r\n                      <Image src='./images/loa_icons/timeIcon.PNG' avatar />\r\n                      시간\r\n                    </Table.HeaderCell>\r\n                    <Table.HeaderCell>\r\n                      <Image src='./images/loa_icons/goldImage2.PNG' avatar />\r\n                      가격\r\n                    </Table.HeaderCell>\r\n                  </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {!loading &&\r\n                    Object.keys(itemPriceLog).map((item) => ReturnTable(item))}\r\n                </Table.Body>\r\n              </Table>\r\n            </Grid.Column>\r\n            <Grid.Column width={4} style={{ paddingTop: '100px' }}>\r\n              <Segment>\r\n                <Header as='h4' style={{ borderBottom: '1px solid red' }}>\r\n                  전체평균\r\n                </Header>\r\n                <Header as='h4' style={{ borderBottom: '1px solid red' }}>\r\n                  {numberWithCommas(statValue.averageValue)}\r\n                  <span style={{ color: '#F1C40F', marginLeft: '2px' }}>G</span>\r\n                </Header>\r\n              </Segment>\r\n              <Segment>\r\n                <Header as='h4' style={{ borderBottom: '1px solid red' }}>\r\n                  중앙값\r\n                </Header>\r\n                <Header as='h4' style={{ borderBottom: '1px solid red' }}>\r\n                  {numberWithCommas(statValue.medianValue)}\r\n                  <span style={{ color: '#F1C40F', marginLeft: '2px' }}>G</span>\r\n                </Header>\r\n              </Segment>\r\n              <Button color='orange' onClick={() => setViewMonthlyModal(true)}>\r\n                <Icon name='line graph' />\r\n                월별\r\n                <br />\r\n                트랜드\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Modal.Content>\r\n      </Modal>\r\n\r\n      {viewMonthlyModal && (\r\n        <MonthlyTrendView\r\n          itemName={itemName}\r\n          viewMonthlyModal={viewMonthlyModal}\r\n          setViewMonthlyModal={setViewMonthlyModal}\r\n          dataApply={dataApply}\r\n          dataApply2={dataApply2}\r\n          type={type}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FullTrendView;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Button, Segment } from 'semantic-ui-react';\r\nimport moment from 'moment';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nfunction ConditionSegment({ setAddItemTrend, searchItemCollection, type }) {\r\n  const [dateValue, setDateValue] = useState({\r\n    startDate: moment().add(-6, 'days').format('YYYY-MM-DD'),\r\n    endDate: moment().format('YYYY-MM-DD'),\r\n  });\r\n\r\n  const changeDate = (value, type) => {\r\n    if (type === 'startDate') {\r\n      if (dateValue.endDate < value) return;\r\n      setDateValue({ ...dateValue, startDate: value });\r\n    } else {\r\n      if (dateValue.startDate > value) return;\r\n      setDateValue({ ...dateValue, endDate: value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n        <Button\r\n          inverted\r\n          color='teal'\r\n          onClick={() => setAddItemTrend(true)}\r\n          style={{ height: '50%' }}\r\n        >\r\n          아이템 추가\r\n        </Button>\r\n\r\n        {type !== 'mobile' && (\r\n          <Segment>\r\n            <TextField\r\n              id='startDate'\r\n              label='시작일자'\r\n              type='date'\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              value={dateValue.startDate}\r\n              onChange={(event) => changeDate(event.target.value, 'startDate')}\r\n            />\r\n\r\n            <TextField\r\n              id='endDate'\r\n              label='종료일자'\r\n              type='date'\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              value={dateValue.endDate}\r\n              onChange={(event) => changeDate(event.target.value, 'endDate')}\r\n            />\r\n          </Segment>\r\n        )}\r\n\r\n        <Button\r\n          inverted\r\n          color='olive'\r\n          onClick={() =>\r\n            searchItemCollection(dateValue.startDate, dateValue.endDate)\r\n          }\r\n          style={{ height: '50%' }}\r\n        >\r\n          조회\r\n        </Button>\r\n      </div>\r\n      {type === 'mobile' && (\r\n        <Segment style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <TextField\r\n            id='startDate'\r\n            label='시작일자'\r\n            type='date'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={dateValue.startDate}\r\n            onChange={(event) => changeDate(event.target.value, 'startDate')}\r\n          />\r\n\r\n          <TextField\r\n            id='endDate'\r\n            label='종료일자'\r\n            type='date'\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={dateValue.endDate}\r\n            onChange={(event) => changeDate(event.target.value, 'endDate')}\r\n          />\r\n        </Segment>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConditionSegment;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Header, Image, Segment } from 'semantic-ui-react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nimport {\r\n  backendUrl,\r\n  axiosConfigAuth,\r\n  getLineColorFromImage,\r\n  numberWithCommas,\r\n} from '../components/util/ConstVar';\r\nimport AddItemToView from '../components/ItemPrice/AddItemToView';\r\nimport FullTrendView from '../components/ItemPrice/FullTrendView';\r\nimport ConditionSegment from '../components/ItemPrice/ConditionSegment';\r\nimport { imageItemMatch } from '../../_data/itemImageMatch';\r\n\r\nimport axios from 'axios';\r\nimport cookie from 'js-cookie';\r\nimport moment from 'moment';\r\n\r\nimport './ItemPrice.css';\r\n\r\nfunction ItemPrice({ type }) {\r\n  const [addItemTrend, setAddItemTrend] = useState(false);\r\n  const [seeFullLogTrendModal, setSeeFullLogTrendModal] = useState(false);\r\n  const [fullLogTrendItem, setFullLogTrendItem] = useState('');\r\n\r\n  const [userItemCollection, setUserItemCollection] = useState([]);\r\n  const [loadingState, setLoadingState] = useState(false);\r\n\r\n  const [itemPriceTrend, setItemPriceTrend] = useState();\r\n\r\n  const [dateValue, setDateValue] = useState({\r\n    startDate: moment().add(-6, 'days').format('YYYY-MM-DD'),\r\n    endDate: moment().format('YYYY-MM-DD'),\r\n  });\r\n\r\n  const closeAddItemTrend = () => {\r\n    setAddItemTrend(false);\r\n  };\r\n\r\n  const closeFullLogTrendItem = () => {\r\n    setSeeFullLogTrendModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchItemCollection();\r\n  }, []);\r\n\r\n  const searchItemCollection = (\r\n    startDate = moment().add(-6, 'days').format('YYYY-MM-DD'),\r\n    endDate = moment().format('YYYY-MM-DD')\r\n  ) => {\r\n    setLoadingState(false);\r\n\r\n    const startDateMoment = moment(startDate);\r\n    const endDateMoment = moment(endDate);\r\n    const diff = endDateMoment.diff(startDateMoment, 'days');\r\n\r\n    if (diff > 13) {\r\n      alert('2주를 넘을 수 없습니다');\r\n      setLoadingState(true);\r\n      return;\r\n    }\r\n\r\n    setDateValue({ startDate, endDate });\r\n\r\n    axios\r\n      .get(\r\n        `${backendUrl}/loado/api/itemPrice/userItemInterest`,\r\n        axiosConfigAuth(cookie.get('loadoUserToken'))\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setUserItemCollection(response.data.userInterest);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert('에러가 발생했습니다');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userItemCollection.length !== 0) {\r\n      const dateStartParam = dateValue.startDate;\r\n      const dateEndParam = dateValue.endDate;\r\n\r\n      localStorage.setItem('itemSearchStartDate', dateStartParam);\r\n      localStorage.setItem('itemSearchEndDate', dateEndParam);\r\n\r\n      axios\r\n        .post(\r\n          `${backendUrl}/loado/api/itemPrice/getItemCollectionPrice`,\r\n          {\r\n            userItemCollection,\r\n            dateStartParam,\r\n            dateEndParam,\r\n          },\r\n          axiosConfigAuth(cookie.get('loadoUserToken'))\r\n        )\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            setUserItemCollection(userItemCollection);\r\n            setItemPriceTrend(response.data.itemCollectionPrice);\r\n            setLoadingState(true);\r\n          }\r\n        });\r\n    }\r\n  }, [userItemCollection]);\r\n\r\n  const dataApply = (\r\n    key,\r\n    dataArr,\r\n    monthlyView = false,\r\n    deviceType = 'computer'\r\n  ) => {\r\n    if (!dataArr || dataArr.length === 0) return;\r\n\r\n    const createdDttmValueCut = !monthlyView ? 5 : 8;\r\n\r\n    let minusOneDateValue = '';\r\n    if (dataArr.length < 2) {\r\n      minusOneDateValue = moment(dataArr[0].createdDttm)\r\n        .add(-1, 'days')\r\n        .format('YYYY-MM-DD');\r\n      dataArr.push({\r\n        createdDttm: minusOneDateValue,\r\n        itemPriceAverage: 0,\r\n      });\r\n      dataArr = dataArr.sort((a, b) => a.itemPriceAverage - b.itemPriceAverage);\r\n    }\r\n\r\n    let max = Math.max.apply(\r\n      null,\r\n      dataArr.map((item) => item.itemPriceAverage)\r\n    );\r\n\r\n    let min = Math.min.apply(\r\n      null,\r\n      dataArr.map((item) => item.itemPriceAverage)\r\n    );\r\n\r\n    if (max === min) {\r\n      max =\r\n        max.toString().length === 1\r\n          ? max + 5\r\n          : max.toString().length === 2\r\n          ? max + 10\r\n          : max + 20;\r\n      min =\r\n        max.toString().length === 1\r\n          ? max - 5\r\n          : max.toString().length === 2\r\n          ? max - 10\r\n          : max - 20;\r\n    }\r\n\r\n    const valueDiff = max - min;\r\n\r\n    const interval = valueDiff / 7;\r\n\r\n    const options = {\r\n      chart: {\r\n        height: 300,\r\n        type: 'line',\r\n        dropShadow: {\r\n          enabled: true,\r\n          color: '#000',\r\n          top: 18,\r\n          left: 7,\r\n          blur: 10,\r\n          opacity: 0.2,\r\n        },\r\n        toolbar: {\r\n          show: false,\r\n          tools: {\r\n            zoom: false,\r\n            zoomin: false,\r\n            zoomout: false,\r\n          },\r\n        },\r\n      },\r\n      colors: [getLineColorFromImage(), '#545454'],\r\n      dataLabels: {\r\n        enabled: true,\r\n        enabledOnSeries: undefined,\r\n        formatter: function (val, opts) {\r\n          return numberWithCommas(Math.floor(val));\r\n        },\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n      },\r\n      // title: {\r\n      //   text: '${key.replaceAll(\"I_\", \"\")}',\r\n      //   align: \"left\",\r\n      // },\r\n      grid: {\r\n        borderColor: '#e7e7e7',\r\n        row: {\r\n          colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      markers: {\r\n        size: 1,\r\n      },\r\n      xaxis: {\r\n        categories: dataArr.map((item) =>\r\n          item.createdDttm.substring(createdDttmValueCut)\r\n        ),\r\n        title: {\r\n          text: '',\r\n        },\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: 'Gold',\r\n        },\r\n        labels: {\r\n          formatter: function (val, index) {\r\n            return numberWithCommas(Math.floor(val));\r\n          },\r\n        },\r\n        min: Math.floor(min - interval) < 0 ? 0 : Math.floor(min - interval),\r\n        max: Math.floor(max + interval),\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n        horizontalAlign: 'right',\r\n        floating: true,\r\n        offsetY: -25,\r\n        offsetX: -5,\r\n      },\r\n    };\r\n\r\n    return options;\r\n  };\r\n\r\n  const dataApply2 = (key, dataArr) => {\r\n    if (!dataArr || dataArr.length === 0) return;\r\n\r\n    const series = [\r\n      {\r\n        name: key,\r\n        data: dataArr.map((item) => item.itemPriceAverage),\r\n      },\r\n    ];\r\n\r\n    return series;\r\n  };\r\n\r\n  const seeFullLog = (itemName) => {\r\n    setFullLogTrendItem('');\r\n    setFullLogTrendItem(itemName);\r\n    setSeeFullLogTrendModal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        style={{\r\n          backgroundColor: '#384862',\r\n          margin: '0px !important',\r\n          height: '94vh',\r\n          width: '100%',\r\n        }}\r\n        id='itemPriceContainer'\r\n      >\r\n        <Container\r\n          style={{\r\n            backgroundColor: '#384862',\r\n            margin: '0px !important',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div style={{ paddingTop: '15px' }}>\r\n            <Header as='h2' icon textAlign='center' color='orange'>\r\n              <Image src='./images/loa_icons/goldImage2.PNG' avatar />\r\n              <Header.Content>아이템시세</Header.Content>\r\n            </Header>\r\n          </div>\r\n\r\n          <ConditionSegment\r\n            setAddItemTrend={setAddItemTrend}\r\n            searchItemCollection={searchItemCollection}\r\n            type={type}\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          <div\r\n            style={{\r\n              width: '90%',\r\n              backgroundColor: 'rgb(56, 72, 98)',\r\n              margin: '0 auto',\r\n              textAlign: 'center',\r\n              border: `${type !== 'mobile' && '10px solid bisque'}`,\r\n              borderRadius: '5px',\r\n            }}\r\n          >\r\n            {loadingState &&\r\n              userItemCollection &&\r\n              itemPriceTrend &&\r\n              userItemCollection.map(\r\n                (item, idx) =>\r\n                  itemPriceTrend[item] && (\r\n                    <Segment\r\n                      style={{\r\n                        marginLeft: '5px',\r\n                        marginRight: '5px',\r\n                        width: `${type === 'mobile' ? '100%' : '30%'}`,\r\n                        display: 'inline-block',\r\n                      }}\r\n                    >\r\n                      <Header\r\n                        as='h4'\r\n                        style={{ marginBottom: '3px', cursor: 'pointer' }}\r\n                        onClick={() => seeFullLog(item)}\r\n                        className='noselect'\r\n                      >\r\n                        {item.indexOf('각인서') > -1 ? (\r\n                          <Image\r\n                            src='./images/loa_icons/legendBook.PNG'\r\n                            avatar\r\n                          />\r\n                        ) : (\r\n                          <Image\r\n                            src={\r\n                              imageItemMatch[\r\n                                item\r\n                                  .replaceAll('(', '')\r\n                                  .replaceAll(')', '')\r\n                                  .replaceAll(':', '')\r\n                                  .replaceAll(' ', '')\r\n                              ]\r\n                            }\r\n                            avatar\r\n                          />\r\n                        )}\r\n                        {item}\r\n                      </Header>\r\n                      <ReactApexChart\r\n                        options={dataApply(item, itemPriceTrend[item])}\r\n                        series={dataApply2(item, itemPriceTrend[item])}\r\n                        type='line'\r\n                        height={350}\r\n                        style={{\r\n                          marginLeft: '5px',\r\n                          marginRight: '5px',\r\n                          width: '100%',\r\n                          display: 'inline-block',\r\n                        }}\r\n                      />\r\n                    </Segment>\r\n                  )\r\n              )}\r\n          </div>\r\n        </Container>\r\n      </Container>\r\n      {addItemTrend && (\r\n        <AddItemToView\r\n          addItemPriceModal={addItemTrend}\r\n          setAddItemTrend={setAddItemTrend}\r\n          axiosConfigAuth={axiosConfigAuth}\r\n          closeAddItemTrend={closeAddItemTrend}\r\n          searchItemCollection={searchItemCollection}\r\n        />\r\n      )}\r\n      {seeFullLogTrendModal && fullLogTrendItem && (\r\n        <FullTrendView\r\n          seeFullLogTrendModal={seeFullLogTrendModal}\r\n          itemName={fullLogTrendItem}\r\n          closeFullLogTrendItem={closeFullLogTrendItem}\r\n          dataApply={dataApply}\r\n          dataApply2={dataApply2}\r\n          type={type}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemPrice;\r\n","import ItemPrice from \"./ItemPrice\";\r\n\r\nexport default ItemPrice;\r\n","import \"./App.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport NavHeader from \"./pages/navHeader/web\";\r\nimport NavHeaderMobile from \"./pages/navHeader/mobile\";\r\nimport CharacterToDoRow from \"./pages/userHomework\";\r\nimport CharacterToDoRowMobile from \"./pages/userHomeworkMobile\";\r\nimport Login from \"./pages/login\";\r\nimport Register from \"./pages/register\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { createMedia } from \"@artsy/fresnel\";\r\nimport Dashboard from \"./pages/dashboard\";\r\nimport ItemPrice from \"./pages/itemPrice\";\r\n\r\nconst AppMedia = createMedia({\r\n  breakpoints: { zero: 0, mobile: 549, tablet: 850, computer: 1080 },\r\n});\r\n\r\nconst mediaStyles = AppMedia.createMediaStyle();\r\nconst { Media, MediaContextProvider } = AppMedia;\r\n\r\nfunction App() {\r\n  return (\r\n    <MediaContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/userhomework\">\r\n            <>\r\n              <Media between={[\"zero\", \"tablet\"]}>\r\n                <Segment\r\n                  style={{\r\n                    backgroundColor: \"#384862\",\r\n                    padding: \"0px\",\r\n                    border: \"none\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <NavHeaderMobile />\r\n                  <CharacterToDoRowMobile\r\n                    limit={3}\r\n                    type=\"mobile\"\r\n                    style={{ padding: \"0px\" }}\r\n                  />\r\n                </Segment>\r\n              </Media>\r\n              <Media between={[\"tablet\", \"computer\"]}>\r\n                <Segment id=\"biggerThanTablet\">\r\n                  <NavHeader />\r\n                  <CharacterToDoRow limit={6} type=\"mobile\" />\r\n                </Segment>\r\n              </Media>\r\n              <Media greaterThanOrEqual=\"computer\">\r\n                <Segment id=\"biggerThanTablet\">\r\n                  <NavHeader />\r\n                  <CharacterToDoRow limit={8} type=\"computer\" />\r\n                </Segment>\r\n              </Media>\r\n              {/* <Grid stackable style={{ border: \"none\" }}>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    background: \"lightCoral\",\r\n                  }}\r\n                >\r\n                  <Grid.Column style={{ border: \"none\" }}>\r\n                    <NavHeader />\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row\r\n                  style={{\r\n                    paddingBottom: \"0rem\",\r\n                    paddingTop: \"0rem\",\r\n                    height: \"94vh\",\r\n                    backgroundColor: \"#384862\",\r\n                  }}\r\n                >\r\n                  <Grid.Column>\r\n                    <Media between={[\"zero\", \"tablet\"]}>\r\n                      <CharacterToDoRowMobile limit={4} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media between={[\"tablet\", \"computer\"]}>\r\n                      <CharacterToDoRow limit={6} type=\"mobile\" />\r\n                    </Media>\r\n                    <Media greaterThanOrEqual=\"computer\">\r\n                      <CharacterToDoRow limit={8} type=\"computer\" />\r\n                    </Media>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid> */}\r\n            </>\r\n          </Route>\r\n          <Route path=\"/dashboard\">\r\n            <NavHeader />\r\n            <Dashboard />\r\n          </Route>\r\n          <Route path=\"/itemPrice\">\r\n            <>\r\n              <Media between={[\"zero\", \"tablet\"]}>\r\n                <NavHeaderMobile />\r\n                <ItemPrice type=\"mobile\" />\r\n              </Media>\r\n              <Media greaterThanOrEqual=\"computer\">\r\n                <NavHeader />\r\n                <ItemPrice type=\"computer\" />\r\n              </Media>\r\n            </>\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </MediaContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}